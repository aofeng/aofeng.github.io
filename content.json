{"meta":{"title":"聂勇的个人网站","subtitle":"0与1构筑世界，程序员创造时代","description":"l软件 架构 设计 编程 Java Python Nodejs","author":"聂勇","url":"http://aofeng.github.io"},"pages":[],"posts":[{"title":"CDN架构及应用","slug":"CDN架构及应用","date":"2016-11-08T02:44:23.000Z","updated":"2016-11-08T02:44:23.000Z","comments":true,"path":"2016/11/08/CDN架构及应用/","link":"","permalink":"http://aofeng.github.io/2016/11/08/CDN架构及应用/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x7F51;&#x7EDC;&#x73B0;&#x72B6; CDN&#x4ECB;&#x7ECD; CDN&#x4F5C;&#x7528; CDN&#x5DE5;&#x4F5C;&#x539F;&#x7406; 1&#x3001;&#x672A;&#x4F7F;&#x7528;CDN&#x52A0;&#x901F;&#x7684;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B; 2&#x3001;&#x4F7F;&#x7528;CDN&#x52A0;&#x901F;&#x7684;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B; 3&#x3001;&#x8D1F;&#x8F7D;&#x5747;&#x8861; DNS&#x8F6E;&#x8BE2; &#x667A;&#x80FD;DNS &#x91CD;&#x5B9A;&#x5411; 4&#x3001;PULL&#x673A;&#x5236; 5&#x3001;PUSH&#x673A;&#x5236; &#x9002;&#x7528;&#x573A;&#x666F; &#x7F51;&#x7EDC;&#x73B0;&#x72B6;1&#x3001;&#x7F51;&#x7EDC;&#x7528;&#x6237;&#x4E0D;&#x65AD;&#x589E;&#x52A0;&#xFF0C;&#x5165;&#x6237;&#x5E26;&#x5BBD;&#x4ECE;&#x51E0;&#x5E74;&#x524D;&#x7684;1M&#xFF0C;2M&#xFF0C;4M&#xFF0C;&#x5230;&#x5982;&#x4ECA;&#x7684;10M&#xFF0C;20M&#xFF0C;50M&#xFF0C;100M&#x3002;&#x4F46;&#x9AA8;&#x5E72;&#x7F51;&#x7684;&#x5E26;&#x5BBD;&#x6709;&#x9650;&#xFF0C;&#x589E;&#x957F;&#x6162;&#x3002; 2&#x3001;&#x6709;&#x4E5D;&#x5927;&#x9AA8;&#x5E72;&#x7F51;&#xFF0C;&#x5404;&#x9AA8;&#x5E72;&#x7F51;&#x4E4B;&#x95F4;&#x7684;&#x51FA;&#x5165;&#x53E3;&#x74F6;&#x9888;&#x3002; &#x4E2D;&#x56FD;&#x516C;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x4E92;&#x8054;&#x7F51;&#xFF08;ChinaNET&#xFF09; &#x4E2D;&#x56FD;&#x6559;&#x80B2;&#x548C;&#x79D1;&#x7814;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#xFF08;CERNET&#xFF09; &#x4E2D;&#x56FD;&#x91D1;&#x6865;&#x4FE1;&#x606F;&#x7F51;&#xFF08;ChinaGBN&#xFF09; &#x4E2D;&#x56FD;&#x8054;&#x901A;&#x516C;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x4E92;&#x8054;&#x7F51;&#xFF08;UNINET&#xFF09; &#x4E2D;&#x56FD;&#x7F51;&#x901A;&#x516C;&#x7528;&#x4E92;&#x8054;&#x7F51;&#xFF08;CNCNET&#xFF09; &#x4E2D;&#x56FD;&#x79FB;&#x52A8;&#x4E92;&#x8054;&#x7F51;&#xFF08;CMNET&#xFF09; &#x4E2D;&#x56FD;&#x79D1;&#x5B66;&#x6280;&#x672F;&#x7F51;&#xFF08;CSTNET&#xFF09; &#x4E2D;&#x56FD;&#x957F;&#x57CE;&#x7F51;(CGWNET) &#x4E2D;&#x56FD;&#x56FD;&#x9645;&#x7ECF;&#x6D4E;&#x8D38;&#x6613;&#x4E92;&#x8054;&#x7F51;&#xFF08;CIETNET&#xFF09; 3&#x3001;&#x4F17;&#x6240;&#x5468;&#x77E5;&#x7684;&#x901A;&#x4FE1;&#x516C;&#x53F8;&#x7684;&#x4E4B;&#x95F4;&#x7684;&#x653F;&#x7B56;&#x58C1;&#x5792;&#xFF0C;&#x5982;&#x8457;&#x540D;&#x7684;&#x5357;&#x7535;&#x4FE1;&#x5317;&#x8054;&#x901A;&#x4E92;&#x901A;&#x9650;&#x5236;&#x95EE;&#x9898;&#x3002; 4&#x3001;2/8&#x539F;&#x5219;&#xFF0C;&#x7F51;&#x7EDC;&#x5185;&#x5BB9;&#x7684;&#x8BBF;&#x95EE;&#x4E5F;&#x540C;&#x6837;&#x9002;&#x7528;&#x8BE5;&#x539F;&#x5219;&#xFF0C;20%&#x7684;&#x5185;&#x5BB9;&#x8BBF;&#x95EE;&#x9891;&#x7387;&#x6700;&#x9AD8;&#x3002; CDN&#x4ECB;&#x7ECD;1995&#x5E74;&#xFF0C;&#x9EBB;&#x7701;&#x7406;&#x5DE5;&#x5B66;&#x9662;&#x7684;Tim Berners-Lee&#x6559;&#x6388;&#x9884;&#x89C1;&#x7F51;&#x7EDC;&#x62E5;&#x585E;&#x5C06;&#x6210;&#x4E3A;&#x4E92;&#x8054;&#x7F51;&#x7684;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E8E;&#x662F;&#x63D0;&#x51FA;&#x4E00;&#x4E2A;&#x5B66;&#x672F;&#x96BE;&#x9898;&#xFF0C;&#x60F3;&#x4ECE;&#x6839;&#x672C;&#x4E0A;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x540E;&#x6765;&#x7684;CDN&#x3002; CDNde&#x7684;&#x5168;&#x79F0;&#x662F;Content Delivery Network&#xFF0C;&#x5373;&#x5185;&#x5BB9;&#x5206;&#x53D1;&#x7F51;&#x7EDC;&#x3002;&#x901A;&#x8FC7;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x70B9;&#x90E8;&#x7F72;&#x5927;&#x91CF;&#x7684;&#x670D;&#x52A1;&#x5668;&#x6765;&#x7F13;&#x5B58;&#x5185;&#x5BB9;&#xFF0C;&#x63D0;&#x4F9B;&#x5185;&#x5BB9;&#x955C;&#x50CF;&#xFF0C;&#x901A;&#x8FC7;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x6280;&#x672F;&#x5C06;&#x7528;&#x6237;&#x8BF7;&#x6C42;&#x5B9A;&#x5411;&#x5230;&#x6700;&#x8FD1;&#x7684;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x83B7;&#x53D6;&#x5185;&#x5BB9;&#xFF0C;&#x7F29;&#x77ED;&#x7528;&#x6237;&#x4E0E;&#x8D44;&#x6E90;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x51CF;&#x5C11;&#x7ECF;&#x8FC7;&#x56FD;&#x5BB6;&#x7EA7;&#x9AA8;&#x5E72;&#x7F51;&#x548C;&#x56FD;&#x9645;&#x7F51;&#x7EBF;&#x8DEF;&#x7684;&#x6D41;&#x91CF;&#xFF0C;&#x63D0;&#x9AD8;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x5185;&#x5BB9;&#x7684;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#x3002; CDN&#x4F5C;&#x7528;1&#x3001;&#x7F13;&#x5B58;&#x548C;&#x52A0;&#x901F;&#xFF08;&#x670D;&#x52A1;&#x201D;&#x6700;&#x540E;&#x4E00;&#x516C;&#x91CC;&#x201D;&#xFF09;&#x6570;&#x636E;&#x653E;&#x5728;&#x8FB9;&#x7F18;&#x670D;&#x52A1;&#x5668;&#xFF08;&#x53EF;&#x80FD;&#x662F;&#x5F53;&#x524D;&#x7528;&#x6237;&#x6240;&#x5728;&#x57CE;&#x5E02;&#x7684;&#x673A;&#x623F;&#xFF09;&#x4E2D;&#xFF0C;&#x63D0;&#x4F9B;&#x5185;&#x5BB9;&#x955C;&#x50CF;&#x3002;&#x901A;&#x8FC7;&#x667A;&#x80FD;DNS&#x7684;&#x8C03;&#x5EA6;&#xFF0C;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#x88AB;&#x900F;&#x660E;&#x5730;&#x6307;&#x5411;&#x6700;&#x8FD1;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x6700;&#x5927;&#x9650;&#x5EA6;&#x7684;&#x7F29;&#x77ED;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x7684;&#x4F20;&#x8F93;&#x8DDD;&#x79BB;&#x3002; 2&#x3001;&#x5B89;&#x5168;&#x9632;&#x62A4;&#x9047;&#x5230;DDoS&#x653B;&#x51FB;&#x65F6;&#xFF0C;&#x8BF7;&#x6C42;&#x90FD;&#x88AB;&#x5F15;&#x5411;&#x4E86;CDN&#xFF0C;&#x7531;&#x4E8E;CDN&#x662F;&#x5206;&#x5E03;&#x5F0F;&#x90E8;&#x7F72;&#xFF0C;&#x4E14;&#x62E5;&#x6709;&#x5927;&#x91CF;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x907F;&#x514D;&#x6E90;&#x7AD9;&#x906D;&#x5230;&#x6BC1;&#x706D;&#x6027;&#x6253;&#x51FB;&#x3002; 3&#x3001;&#x8282;&#x7701;&#x6210;&#x672C;&#x4E00;&#x822C;&#x7684;&#x4E2D;&#x5C0F;&#x516C;&#x53F8;&#x53EF;&#x4EE5;&#x79DF;&#x7528;CDN&#x5FEB;&#x901F;&#x63D0;&#x5347;&#x7CFB;&#x7EDF;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8D2D;&#x4E70;&#x4E00;&#x5927;&#x5806;&#x670D;&#x52A1;&#x5668;&#x4EE5;&#x53CA;&#x5927;&#x91CF;&#x5730;&#x7EF4;&#x62A4;&#x6210;&#x672C;&#x3002; CDN&#x5DE5;&#x4F5C;&#x539F;&#x7406;1&#x3001;&#x672A;&#x4F7F;&#x7528;CDN&#x52A0;&#x901F;&#x7684;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B; (1)&#x7EC8;&#x7AEF;&#x8BBE;&#x5907;&#x5411;&#x672C;&#x5730;DNS&#x53D1;&#x8D77;DNS&#x67E5;&#x8BE2;&#xFF0C;&#x67E5;&#x8BE2;&#x7AD9;&#x70B9;&#x5730;&#x5740;&#x3002;(2)(3)&#x672C;&#x5730;DNS&#x5411;&#x4E0A;&#x7EA7;DNS&#x8282;&#x70B9;&#x53D1;&#x8D77;DNS&#x67E5;&#x8BE2;&#xFF0C;&#x83B7;&#x53D6;&#x5230;&#x6388;&#x6743;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5730;&#x5740;&#x3002;(4)(5)&#x672C;&#x5730;DNS&#x4ECE;&#x6388;&#x6743;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x5230;&#x57DF;&#x540D;&#x7684;IP&#x5730;&#x5740;&#x3002;(6)&#x672C;&#x5730;DNS&#x5C06;IP&#x5730;&#x5740;&#x8FD4;&#x56DE;&#x7ED9;&#x7EC8;&#x7AEF;&#x8BBE;&#x5907;&#x3002;(7)(8)&#x7EC8;&#x7AEF;&#x8BBE;&#x5907;&#x4E0E;&#x7AD9;&#x70B9;&#x5730;&#x5740;&#x53D1;&#x751F;&#x4EA4;&#x4E92;&#x3002; 2&#x3001;&#x4F7F;&#x7528;CDN&#x52A0;&#x901F;&#x7684;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B; (1)&#x7EC8;&#x7AEF;&#x8BBE;&#x5907;&#x5411;&#x672C;&#x5730;DNS&#x53D1;&#x8D77;DNS&#x67E5;&#x8BE2;&#xFF0C;&#x67E5;&#x8BE2;&#x7AD9;&#x70B9;&#x5730;&#x5740;&#x3002;(2)(3)&#x672C;&#x5730;DNS&#x5411;&#x4E0A;&#x7EA7;DNS&#x8282;&#x70B9;&#x53D1;&#x8D77;DNS&#x67E5;&#x8BE2;&#xFF0C;&#x83B7;&#x53D6;&#x5230;&#x6388;&#x6743;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5730;&#x5740;&#x3002;(4)(5)&#x672C;&#x5730;DNS&#x4ECE;&#x6388;&#x6743;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x5230;&#x57DF;&#x540D;&#x7684;&#x667A;&#x80FD;DNS&#x7684;&#x5730;&#x5740;&#xFF08;&#x66F4;&#x9AD8;&#x4E00;&#x7EA7;&#x7684;&#x6388;&#x6743;&#x670D;&#x52A1;&#x5668;&#xFF09;&#x3002;(6)(7)&#x672C;&#x5730;DNS&#x4ECE;&#x667A;&#x80FD;DNS&#x83B7;&#x53D6;&#x5230;CDN&#x7684;&#x5730;&#x5740;&#x3002;(8)&#x672C;&#x5730;DNS&#x5C06;CDN&#x5730;&#x5740;&#x8FD4;&#x56DE;&#x7ED9;&#x7EC8;&#x7AEF;&#x8BBE;&#x5907;&#x3002;(9)(10)&#x7EC8;&#x7AEF;&#x8BBE;&#x5907;&#x4E0E;CDN&#x53D1;&#x751F;&#x4EA4;&#x4E92;&#x3002; 3&#x3001;&#x8D1F;&#x8F7D;&#x5747;&#x8861;DNS&#x8F6E;&#x8BE2;&#x5728;DNS&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;&#x4E3B;&#x673A;&#x540D;&#x914D;&#x7F6E;&#x591A;&#x4E2A;IP&#x5730;&#x5740;&#xFF08;A&#x8BB0;&#x5F55;&#xFF09;&#x5728;&#x5E94;&#x7B54;DNS&#x67E5;&#x8BE2;&#x65F6;&#xFF0C;DNS&#x670D;&#x52A1;&#x5668;&#x5C06;&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x6309;&#x7167;A&#x8BB0;&#x5F55;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x9010;&#x4E00;&#x5206;&#x914D;&#x5230;&#x4E0D;&#x540C;&#x7684;IP&#x4E0A;&#xFF0C;&#x5C06;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x8BBF;&#x95EE;&#x5F15;&#x5BFC;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x673A;&#x5668;&#x4E0A;&#x53BB;&#xFF0C;&#x4F7F;&#x5F97;&#x4E0D;&#x540C;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x8BBF;&#x95EE;&#x4E0D;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7684;&#x76EE;&#x7684;&#x3002; &#x4F18;&#x70B9; &#x6210;&#x672C;&#x4F4E;&#x3002;&#x57DF;&#x540D;&#x6CE8;&#x518C;&#x5546;&#x90FD;&#x652F;&#x6301;&#x591A;&#x6761;A&#x8BB0;&#x5F55;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x4ED8;&#x8D39;&#x3002; &#x90E8;&#x7F72;&#x65B9;&#x4FBF;&#x3002; &#x7F3A;&#x70B9; &#x6CA1;&#x6709;&#x5065;&#x5EB7;&#x68C0;&#x67E5;&#x3002;&#x670D;&#x52A1;&#x5668;&#x5B95;&#x673A;&#x4E86;&#xFF0C;DNS&#x65E0;&#x6CD5;&#x611F;&#x77E5;&#x3002; &#x6CA1;&#x6709;&#x8FBE;&#x5230;&#x5747;&#x8861;&#x7684;&#x76EE;&#x7684;&#x3002;&#x4E0D;&#x540C;&#x670D;&#x52A1;&#x5668;&#x7684;&#x914D;&#x7F6E;&#x4E0D;&#x540C;&#xFF0C;&#x6240;&#x80FD;&#x627F;&#x53D7;&#x7684;&#x538B;&#x529B;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4F46;DNS&#x5206;&#x5230;&#x6BCF;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x7684;&#x8BF7;&#x6C42;&#x91CF;&#x662F;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#x3002; &#x667A;&#x80FD;DNSDNS&#x9664;&#x4E86;IP&#x5730;&#x5740;&#x89E3;&#x6790;&#x5916;&#xFF0C;&#x8FD8;&#x4F1A;&#x6839;&#x636E;&#x6765;&#x6E90;IP&#x6765;&#x8FDB;&#x884C;&#x6700;&#x4F73;&#x670D;&#x52A1;&#x7AD9;&#x70B9;&#x7684;&#x8BA1;&#x7B97;&#x548C;&#x5224;&#x65AD;&#xFF0C;&#x8FD4;&#x56DE;&#x6700;&#x4F73;&#x670D;&#x52A1;&#x96C6;&#x7FA4;&#x7684;IP&#x5730;&#x5740;&#x3002; &#x4F18;&#x70B9; &#x53EF;&#x4EE5;&#x6839;&#x636E;&#x670D;&#x52A1;&#x5668;&#x6216;IP&#x6BB5;&#x8FDB;&#x884C;&#x5206;&#x6D41;&#x3002; &#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x66F4;&#x7EC6;&#x7684;&#x7B56;&#x7565;&#x63A7;&#x5236;&#x3002; &#x5FEB;&#x901F;&#x8C03;&#x6574;&#x4E1A;&#x52A1;&#x90E8;&#x7F72;&#x3002; &#x7F3A;&#x70B9; &#x6CA1;&#x6709;&#x5065;&#x5EB7;&#x68C0;&#x67E5;&#x3002; &#x91CD;&#x5B9A;&#x5411;&#x5728;&#x8BF7;&#x6C42;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x7531;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x673A;&#x6839;&#x636E;&#x6765;&#x6E90;IP&#x8FDB;&#x884C;&#x6700;&#x4F73;&#x670D;&#x52A1;&#x7AD9;&#x70B9;&#x7684;&#x8BA1;&#x7B97;&#x548C;&#x5224;&#x65AD;&#xFF0C;&#x5C06;&#x7528;&#x6237;&#x8BF7;&#x6C42;&#x91CD;&#x5B9A;&#x5411;&#x81F3;&#x76EE;&#x6807;&#x670D;&#x52A1;&#x8282;&#x70B9;&#x3002; &#x4F18;&#x70B9; &#x53EF;&#x4EE5;&#x6839;&#x636E;&#x670D;&#x52A1;&#x5668;&#x6216;IP&#x6BB5;&#x8FDB;&#x884C;&#x5206;&#x6D41;&#x3002; &#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x66F4;&#x7EC6;&#x7684;&#x7B56;&#x7565;&#x63A7;&#x5236;&#x3002; &#x5FEB;&#x901F;&#x8C03;&#x6574;&#x4E1A;&#x52A1;&#x90E8;&#x7F72;&#x3002; &#x7F3A;&#x70B9; &#x534F;&#x8BAE;&#x7684;&#x9650;&#x5236;&#x3002;HTTP&#x534F;&#x8BAE;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;302&#x8DF3;&#x8F6C;&#xFF0C;&#x4F46;&#x6CA1;&#x6709;&#x8DF3;&#x8F6C;&#x529F;&#x80FD;&#x7684;&#x534F;&#x8BAE;&#x9700;&#x8981;&#x4F9D;&#x8D56;&#x4EA4;&#x6362;&#x673A;&#x672C;&#x8EAB;&#x7279;&#x6709;&#x7684;&#x529F;&#x80FD;&#x6765;&#x6765;&#x5B9E;&#x73B0;&#x3002; 4&#x3001;PULL&#x673A;&#x5236; 1&#x3001;&#x7528;&#x6237;&#x8BBF;&#x95EE;CDN&#x7684;&#x8FB9;&#x7F18;&#x8282;&#x70B9;&#x3002;2&#x3001;&#x8FB9;&#x7F18;&#x8282;&#x70B9;&#x53D1;&#x73B0;&#x5185;&#x5BB9;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5411;&#x4E0A;&#x7EA7;&#x8282;&#x70B9;&#x67E5;&#x627E;&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x5230;&#x4E2D;&#x5FC3;&#x8282;&#x70B9;&#x3002;&#x5982;&#x679C;&#x4E5F;&#x6CA1;&#x6709;&#xFF0C;&#x4F1A;&#x4ECE;&#x6E90;&#x7AD9;&#x70B9;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x5E76;&#x7F13;&#x5B58;&#x5728;&#x8FB9;&#x7F18;&#x8282;&#x70B9;&#x3002;3&#x3001;&#x8FB9;&#x7F18;&#x8282;&#x70B9;&#x8FD4;&#x56DE;&#x5185;&#x5BB9;&#x7ED9;&#x7528;&#x6237;&#x3002; 5&#x3001;PUSH&#x673A;&#x5236;&#x5C06;&#x5185;&#x5BB9;&#x9884;&#x5148;&#x63A8;&#x9001;&#x5230;CDN&#x7684;&#x5404;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x7528;&#x6237;&#x8BF7;&#x6C42;&#x65F6;&#x76F4;&#x63A5;&#x7531;CDN&#x8FD4;&#x56DE;&#x3002;&#x907F;&#x514D;&#x7528;&#x6237;&#x7B49;&#x5F85;CDN&#x4ECE;&#x6E90;&#x7AD9;&#x70B9;&#x4E0B;&#x8F7D;&#x7684;&#x8FC7;&#x7A0B;&#x3002; &#x9002;&#x7528;&#x573A;&#x666F; &#x89C6;&#x9891;&#x7F51;&#x7AD9; &#x5728;&#x7EBF;&#x97F3;&#x4E50; &#x4E0B;&#x8F7D;&#x7AD9;&#x70B9;&#xFF08;&#x8F6F;&#x4EF6;&#x4E0B;&#x8F7D;/&#x6E38;&#x620F;&#x5305;&#x4E0B;&#x8F7D;/&#x8D44;&#x6599;&#x4E0B;&#x8F7D;&#xFF09; &#x6709;&#x5927;&#x91CF;&#x9759;&#x6001;&#x5185;&#x5BB9;&#x7684;&#x95E8;&#x6237;&#x7CFB;&#x7EDF;&#xFF08;&#x65B0;&#x95FB;&#x7F51;&#x7AD9;/&#x535A;&#x5BA2;&#xFF09; &#x2026; &#x2026; &#x2026;","categories":[{"name":"架构设计","slug":"架构设计","permalink":"http://aofeng.github.io/categories/架构设计/"},{"name":"CDN","slug":"架构设计/CDN","permalink":"http://aofeng.github.io/categories/架构设计/CDN/"}],"tags":[{"name":"网络","slug":"网络","permalink":"http://aofeng.github.io/tags/网络/"},{"name":"cdn","slug":"cdn","permalink":"http://aofeng.github.io/tags/cdn/"},{"name":"架构","slug":"架构","permalink":"http://aofeng.github.io/tags/架构/"}],"keywords":[{"name":"架构设计","slug":"架构设计","permalink":"http://aofeng.github.io/categories/架构设计/"},{"name":"CDN","slug":"架构设计/CDN","permalink":"http://aofeng.github.io/categories/架构设计/CDN/"}]},{"title":"MySQL5.5-将字符集从utf8升级为utf8mb4","slug":"MySQL5-5-将字符集从utf8升级为utf8mb4","date":"2016-01-04T12:08:44.000Z","updated":"2016-11-06T12:06:15.000Z","comments":true,"path":"2016/01/04/MySQL5-5-将字符集从utf8升级为utf8mb4/","link":"","permalink":"http://aofeng.github.io/2016/01/04/MySQL5-5-将字符集从utf8升级为utf8mb4/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x5347;&#x7EA7;&#x524D; &#x4E8C;&#x3001;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6; &#x4E09;&#x3001;&#x5347;&#x7EA7;&#x540E; MySQL&#x9ED8;&#x8BA4;&#x7684;utf8&#x53EA;&#x652F;&#x6301;&#x4E09;&#x5B57;&#x8282;&#x5B57;&#x7B26;&#xFF0C;&#x4E0D;&#x652F;&#x6301;Emoji&#x8868;&#x60C5;&#x7B26;&#xFF08;&#x56DB;&#x5B57;&#x8282;&#xFF09;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x56DB;&#x5B57;&#x8282;&#x7684;&#x5B57;&#x7B26;&#x5199;&#x5165;&#x4F1A;&#x62A5;&#x9519;&#x3002;&#x4ECE;MySQL 5.5&#x5F00;&#x59CB;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;utf8mb4&#xFF0C;&#x652F;&#x6301;&#x56DB;&#x5B57;&#x8282;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x8BB8;&#x591A;&#x4F7F;&#x7528;iphone&#x7684;&#x7528;&#x6237;&#x6765;&#x5728;&#x586B;&#x5199;&#x6635;&#x79F0;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x52A0;&#x5165;Emoji&#x8868;&#x60C5;&#x7B26;&#xFF0C;&#x5982;&#x679C;MySQL&#x6CA1;&#x6709;&#x4F7F;&#x7528;utf8mb4&#x5B57;&#x7B26;&#x96C6;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x6635;&#x79F0;&#x4FE1;&#x606F;&#x5C31;&#x65E0;&#x6CD5;&#x5199;&#x5165;&#x3002; &#x4E00;&#x3001;&#x5347;&#x7EA7;&#x524D;1mysql&gt; SHOW VARIABLES LIKE &apos;character_set%&apos;; Variable_name Value character_set_client utf8 character_set_connection utf8 character_set_database utf8 character_set_filesystem binary character_set_results utf8 character_set_server utf8 character_set_system utf8 character_sets_dir /home/sdkserver/local/mysql-5.5.43/share/charsets/ 8 rows in set (0.00 sec) 1mysql&gt; SHOW VARIABLES LIKE &apos;collation%&apos;; Variable_name Value collation_connection utf8_general_ci collation_database utf8_unicode_ci collation_server utf8_unicode_ci 3 rows in set (0.00 sec) &#x4E8C;&#x3001;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x6253;&#x5F00;MySQL&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x5B57;&#x7B26;&#x96C6;&#x7684;&#x914D;&#x7F6E;&#x4FEE;&#x6539;&#x6210;&#x5982;&#x4E0B;&#xFF1A;1234567891011[client] default-character-set = utf8mb4[mysql] default-character-set = utf8mb4[mysqld] character-set-client-handshake = FALSEcharacter-set-server = utf8mb4collation-server = utf8mb4_general_ciinit_connect=&apos;SET NAMES utf8mb4&apos; &#x4E09;&#x3001;&#x5347;&#x7EA7;&#x540E;1mysql&gt; SHOW VARIABLES LIKE &apos;character_set%&apos;; Variable_name Value character_set_client utf8mb4 character_set_connection utf8mb4 character_set_database utf8mb4 character_set_filesystem binary character_set_results utf8mb4 character_set_server utf8mb4 character_set_system utf8 character_sets_dir /home/nieyong/local/mysql-5.5.43/share/charsets/ 8 rows in set (0.00 sec) 1mysql&gt; SHOW VARIABLES LIKE &apos;collation%&apos;; Variable_name Value collation_connection utf8mb4_general_ci collation_database utf8mb4_general_ci collation_server utf8mb4_general_ci 3 rows in set (0.00 sec)","categories":[{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/categories/数据库/"},{"name":"MySQL","slug":"数据库/MySQL","permalink":"http://aofeng.github.io/categories/数据库/MySQL/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://aofeng.github.io/tags/mysql/"},{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/tags/数据库/"}],"keywords":[{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/categories/数据库/"},{"name":"MySQL","slug":"数据库/MySQL","permalink":"http://aofeng.github.io/categories/数据库/MySQL/"}]},{"title":"Gson-自定义反序列化","slug":"Gson-自定义反序列化","date":"2015-08-17T12:21:12.000Z","updated":"2016-11-06T12:06:07.000Z","comments":true,"path":"2015/08/17/Gson-自定义反序列化/","link":"","permalink":"http://aofeng.github.io/2015/08/17/Gson-自定义反序列化/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x9700;&#x6C42; &#x4E8C;&#x3001;&#x5B9E;&#x73B0; 1&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x53CD;&#x5E8F;&#x5217;&#x5316; 2&#x3001;&#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x53CD;&#x5E8F;&#x5217;&#x5316; &#x4E09;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; &#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x300A;Gson&#x6559;&#x7A0B;-&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x300B;&#x4ECB;&#x7ECD;&#x4E86;&#x4F7F;&#x7528;Gson&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x6EE1;&#x8DB3;&#x4E00;&#x4E9B;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x4E0B;&#x7684;&#x9700;&#x6C42;&#x3002;&#x540C;&#x6837;&#x7684;&#xFF0C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF08;JSON&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x6210;Java&#x5BF9;&#x8C61;&#xFF09;&#x4E5F;&#x9700;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;&#x4E00;&#x6837;&#xFF0C;&#x4E24;&#x6B65;&#x641E;&#x5B9A;&#xFF1A; &#x5B9E;&#x73B0;JsonDeserializer&#x63A5;&#x53E3;&#x3002; &#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x5B9E;&#x73B0;&#x3002; &#x4E00;&#x3001;&#x9700;&#x6C42;1&#x3001;&#x6709;&#x5982;&#x4E0B;JSON&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x9700;&#x8981;&#x8F6C;&#x6362;&#x6210;Person&#x5BF9;&#x8C61;&#x3002; {&#x201C;PersonName&#x201D;:&#x201D;aofeng&#x201D;,&#x201D;PersonAge&#x201D;:32} 2&#x3001;Person&#x6709;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;name&#x548C;age&#xFF0C;&#x70B9;&#x51FB;&#x67E5;&#x770B;&#x6E90;&#x4EE3;&#x7801;&#x3002; &#x4E8C;&#x3001;&#x5B9E;&#x73B0;1&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x5B9E;&#x73B0;JsonDeserializer&#x63A5;&#x53E3;&#x7684;deserialize&#x65B9;&#x6CD5;&#xFF1A;123456789101112131415public static class PersonDeserializer implements JsonDeserializer&lt;Person&gt; { @Override public Person deserialize(JsonElement jsonEle, Type type, JsonDeserializationContext context) throws JsonParseException { JsonObject jo = jsonEle.getAsJsonObject(); String name = jo.get(&quot;PersonName&quot;).getAsString(); int age = jo.get(&quot;PersonAge&quot;).getAsInt(); Person obj = new Person(name, age); return obj; } } 2&#x3001;&#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;GsonBuilder&#xFF0C;&#x4F7F;&#x7528;registerTypeAdapter&#x65B9;&#x6CD5;&#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x5B9E;&#x73B0;&#xFF0C;&#x7136;&#x540E;&#x751F;&#x6210;Gson&#x5BF9;&#x8C61;&#x6765;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x3002;123456789public static void main(String[] args) { GsonBuilder builder = new GsonBuilder(); builder.registerTypeAdapter(Person.class, new PersonDeserializer()); Gson gson = builder.create(); String json = &quot;{\\&quot;PersonName\\&quot;:\\&quot;aofeng\\&quot;,\\&quot;PersonAge\\&quot;:32}&quot;; Person obj = gson.fromJson(json, Person.class); System.out.println(obj);} &#x8FD0;&#x884C;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#xFF0C;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#x5982;&#x4E0B;: Person [name=aofeng, age=32] &#x9644;&#xFF1A;&#x5B8C;&#x6574;&#x7684;&#x6E90;&#x4EE3;&#x7801; &#x4E09;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; Gson Offical Site Gson User Guide","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"gson","slug":"gson","permalink":"http://aofeng.github.io/tags/gson/"},{"name":"json","slug":"json","permalink":"http://aofeng.github.io/tags/json/"},{"name":"serialize","slug":"serialize","permalink":"http://aofeng.github.io/tags/serialize/"},{"name":"序列化","slug":"序列化","permalink":"http://aofeng.github.io/tags/序列化/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Gson-自定义序列化","slug":"Gson-自定义序列化","date":"2015-08-14T12:13:56.000Z","updated":"2016-11-06T12:06:11.000Z","comments":true,"path":"2015/08/14/Gson-自定义序列化/","link":"","permalink":"http://aofeng.github.io/2015/08/14/Gson-自定义序列化/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x9700;&#x6C42; &#x4E8C;&#x3001;&#x5B9E;&#x73B0; 1&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316; 2&#x3001;&#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316; &#x4E09;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; &#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x300A;Gson&#x6559;&#x7A0B;-&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x57FA;&#x7840;&#x64CD;&#x4F5C;&#x300B;&#x4ECB;&#x7ECD;&#x4E86;Gson&#x7684;&#x7279;&#x6027;&#x548C;&#x57FA;&#x672C;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x78B0;&#x4E0A;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#xFF1A; &#x51FA;&#x751F;&#x65E5;&#x671F;&#x5B58;&#x50A8;&#x7684;&#x662F;&#x6BEB;&#x79D2;&#x6570;&#xFF0C;&#x4F46;&#x8F93;&#x51FA;JSON&#x65F6;&#x9700;&#x8981;&#x662F;&#x5E74;&#x6708;&#x65E5;&#x7684;&#x683C;&#x5F0F;&#xFF1B; &#x6709;&#x4E9B;&#x5B57;&#x6BB5;&#x4E0D;&#x60F3;&#x8F93;&#x51FA;&#xFF1B; &#x8F93;&#x51FA;&#x7684;&#x5B57;&#x6BB5;&#x540D;&#x4E0E;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5B57;&#x6BB5;&#x540D;&#x4E0D;&#x76F8;&#x540C;&#x3002; &#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;Gson&#x63D0;&#x4F9B;&#x4E86;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x5E76;&#x4E14;&#x5B9E;&#x73B0;&#x4E5F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x4E24;&#x6B65;&#x641E;&#x5B9A;&#xFF1A; &#x5B9E;&#x73B0;JsonSerializer&#x63A5;&#x53E3;&#x3002; &#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x5B9E;&#x73B0;&#x3002; &#x4E00;&#x3001;&#x9700;&#x6C42;1&#x3001;&#x4E00;&#x4E2A;POJO&#x7C7B;&#xFF1A;Person&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;name&#x548C;age&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#x3002;2&#x3001;&#x5E8F;&#x5217;&#x5316;&#x6210;JSON&#x5B57;&#x7B26;&#x4E32;&#x65F6;&#xFF0C;name&#x5B57;&#x6BB5;&#x540D;&#x8F93;&#x51FA;&#x4E3A;PersonName&#xFF0C;age&#x5B57;&#x6BB5;&#x540D;&#x8F93;&#x51FA;&#x4E3A;PersonAge&#x3002;123456789101112131415161718192021222324252627282930313233343536373839404142/** ** * &#x7B80;&#x5355;&#x7684;Java&#x5BF9;&#x8C61;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class Person { private String name; private int age; public Person() { // nothing } public Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } @Override public String toString() { return &quot;Person [name=&quot; + name + &quot;, age=&quot; + age + &quot;]&quot;; }} &#x4E8C;&#x3001;&#x5B9E;&#x73B0;1&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x5B9E;&#x73B0;JsonSerializer&#x63A5;&#x53E3;&#x7684;serialize&#x65B9;&#x6CD5;&#xFF0C;&#x60F3;&#x600E;&#x4E48;&#x5F04;&#x90FD;&#x53EF;&#x4EE5;&#x968F;&#x5FC3;&#x6240;&#x6B32; :)12345678910111213public class PersonSerializer implements JsonSerializer&lt;Person&gt; { @Override public JsonElement serialize(Person obj, Type type, JsonSerializationContext context) { JsonObject jo = new JsonObject(); jo.addProperty(&quot;PersonName&quot;, obj.getName()); jo.addProperty(&quot;PersonAge&quot;, obj.getAge()); return jo; }} 2&#x3001;&#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;GsonBuilder&#xFF0C;&#x4F7F;&#x7528;registerTypeAdapter&#x65B9;&#x6CD5;&#x6CE8;&#x518C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x5B9E;&#x73B0;&#xFF0C;&#x7136;&#x540E;&#x751F;&#x6210;Gson&#x5BF9;&#x8C61;&#x6765;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x3002;12345678public static void main(String[] args) { GsonBuilder builder = new GsonBuilder(); builder.registerTypeAdapter(Person.class, new PersonSerializer()); Gson gson = builder.create(); Person obj = new Person(&quot;aofeng&quot;, 32); System.out.println( gson.toJson(obj) );} &#x8FD0;&#x884C;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#xFF0C;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#x5982;&#x4E0B;: {&#x201C;PersonName&#x201D;:&#x201D;aofeng&#x201D;,&#x201D;PersonAge&#x201D;:32} &#x9644;&#xFF1A;&#x5B8C;&#x6574;&#x7684;&#x6E90;&#x4EE3;&#x7801; &#x4E09;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; Gson Offical Site Gson User Guide","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"gson","slug":"gson","permalink":"http://aofeng.github.io/tags/gson/"},{"name":"json","slug":"json","permalink":"http://aofeng.github.io/tags/json/"},{"name":"serialize","slug":"serialize","permalink":"http://aofeng.github.io/tags/serialize/"},{"name":"序列化","slug":"序列化","permalink":"http://aofeng.github.io/tags/序列化/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Gson-序列化与反序列化基础操作","slug":"Gson-序列化与反序列化基础操作","date":"2015-08-12T11:57:18.000Z","updated":"2016-11-06T12:06:02.000Z","comments":true,"path":"2015/08/12/Gson-序列化与反序列化基础操作/","link":"","permalink":"http://aofeng.github.io/2015/08/12/Gson-序列化与反序列化基础操作/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x666E;&#x901A;&#x5BF9;&#x8C61;&#xFF08;POJO&#xFF09; &#x4E8C;&#x3001;&#x6570;&#x7EC4; 1&#x3001;&#x5E8F;&#x5217;&#x5316; 2&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316; &#x4E09;&#x3001;&#x96C6;&#x5408;&#x7C7B; 1&#x3001;&#x5E8F;&#x5217;&#x5316; 2&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316; &#x56DB;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; Gson&#x662F;&#x4F17;&#x591A;&#x5F00;&#x6E90;JSON&#x7C7B;&#x5E93;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#xFF0C;&#x4F7F;&#x7528;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x4F7F;&#x7528;toJson&#x548C;fromJson&#x65B9;&#x6CD5;&#x53EF;&#x5C06;JSON&#x5B57;&#x7B26;&#x4E32;&#x548C;Java&#x5BF9;&#x8C61;&#x76F8;&#x4E92;&#x8F6C;&#x6362;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x7279;&#x6027;&#x6709;&#xFF1A; &#x5168;&#x9762;&#x652F;&#x6301;&#x6CDB;&#x578B;&#x3002; Java&#x5BF9;&#x8C61;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x589E;&#x52A0;&#x6CE8;&#x89E3;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x3002; &#x8F6C;&#x6362;&#x65F6;&#x4F7F;&#x7528;Java&#x5BF9;&#x8C61;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x800C;&#x975E;setter&#x548C;getter&#x65B9;&#x6CD5;&#x3002; &#x53EF;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x6EE1;&#x8DB3;&#x4E2A;&#x6027;&#x5316;&#x9700;&#x6C42;&#xFF0C;&#x751A;&#x81F3;&#x7F16;&#x5199;&#x81EA;&#x5DF1;&#x7684;TypeAdapter&#x6539;&#x53D8;&#x5E95;&#x5C42;&#x7684;&#x89E3;&#x6790;&#x3002; &#x4E0B;&#x9762;&#xFF0C;&#x901A;&#x8FC7;&#x51E0;&#x6BB5;&#x4EE3;&#x7801;&#x5C55;&#x793A;Gson&#x5982;&#x4F55;&#x5C06;Java&#x4E2D;&#x5E38;&#x7528;&#x7684;POJO&#x3001;&#x6570;&#x7EC4;&#x548C;&#x96C6;&#x5408;&#x5E8F;&#x5217;&#x5316;&#x6210;JSON&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5E76;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002; &#x4E00;&#x3001;&#x666E;&#x901A;&#x5BF9;&#x8C61;&#xFF08;POJO&#xFF09;1&#x3001;&#x4E00;&#x4E2A;POJO&#x7C7B;&#xFF1A;Person&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;name&#x548C;age&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;123456789101112131415161718192021222324252627282930313233343536373839404142/** ** * &#x7B80;&#x5355;&#x7684;Java&#x5BF9;&#x8C61;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class Person { private String name; private int age; public Person() { // nothing } public Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } @Override public String toString() { return &quot;Person [name=&quot; + name + &quot;, age=&quot; + age + &quot;]&quot;; }} 2&#x3001;&#x5BF9;Person&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;1234567891011121314151617181920212223242526272829303132333435/** * Java&#x7B80;&#x5355;&#x5BF9;&#x8C61;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class SimpleObjectSerialize { /** * &#x5E8F;&#x5217;&#x5316;&#xFF1A;&#x5C06;Java&#x5BF9;&#x8C61;&#x8F6C;&#x6362;&#x6210;JSON&#x5B57;&#x7B26;&#x4E32;&#x3002; */ public void serialize(Person person) { Gson gson = new Gson(); System.out.println( gson.toJson(person) ); } /** * &#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF1A;&#x5C06;JSON&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x6210;Java&#x5BF9;&#x8C61;&#x3002; */ public void deserialize(String json) { Gson gson = new Gson(); Person person = gson.fromJson(json, Person.class); System.out.println( person ); } public static void main(String[] args) { SimpleObjectSerialize ss = new SimpleObjectSerialize(); Person person = new Person(&quot;NieYong&quot;, 33); ss.serialize(person); String json = &quot; {\\&quot;name\\&quot;:\\&quot;AoFeng\\&quot;,\\&quot;age\\&quot;:32}&quot;; ss.deserialize(json); }} &#x8FD0;&#x884C;SimpleObjectSerialize&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; {&#x201C;name&#x201D;:&#x201D;NieYong&#x201D;,&#x201D;age&#x201D;:33}Person [name=AoFeng, age=32] &#x4E8C;&#x3001;&#x6570;&#x7EC4;1&#x3001;&#x5E8F;&#x5217;&#x5316;&#x5C06;&#x6574;&#x578B;&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#x548C;&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#x5E8F;&#x5217;&#x5316;&#x6210;JSON&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;12345678910111213141516171819202122232425262728293031323334353637/** * &#x6570;&#x7EC4;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class ArraySerialize { public void serialize(Object[] arr) { Gson gson = new Gson(); System.out.println( gson.toJson(arr) ); } public static void main(String[] args) { ArraySerialize as = new ArraySerialize(); // &#x6574;&#x578B;&#x5BF9;&#x8C61;&#x6570;&#x7EC4; Integer[] intArr = new Integer[3]; intArr[0] = 9; intArr[1] = 7; intArr[2] = 5; as.serialize(intArr); // &#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4; String[] names = new String[3]; names[0] = &quot;&#x5F20;&#x4E09;&quot;; names[1] = &quot;&#x674E;&#x56DB;&quot;; names[2] = &quot;&#x738B;&#x4E94;&quot;; as.serialize(names); // &#x5BF9;&#x8C61;&#x6570;&#x7EC4; Person[] persons = new Person[2]; persons[0] = new Person(&quot;&#x5C0F;&#x660E;&quot;, 10); persons[1] = new Person(&quot;&#x9A6C;&#x4E3D;&quot;, 9); as.serialize(persons); }} &#x8FD0;&#x884C;ArraySerialize&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; [9,7,5][&#x201C;&#x5F20;&#x4E09;&#x201D;,&#x201D;&#x674E;&#x56DB;&#x201D;,&#x201D;&#x738B;&#x4E94;&#x201D;][{&#x201C;name&#x201D;:&#x201D;&#x5C0F;&#x660E;&#x201D;,&#x201D;age&#x201D;:10},{&#x201C;name&#x201D;:&#x201D;&#x9A6C;&#x4E3D;&#x201D;,&#x201D;age&#x201D;:9}] 2&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x5C06;JSON&#x5B57;&#x7B26;&#x4E32;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x6210;&#x6574;&#x578B;&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#x548C;&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;1234567891011121314151617181920212223242526272829303132333435363738394041/** * &#x6570;&#x7EC4;&#x7684;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class ArrayDeserialize { public &lt;T&gt; T deserialize(String json, Class&lt;T&gt; claz) { Gson gson = new Gson(); return gson.fromJson(json, claz); } public static void main(String[] args) { ArrayDeserialize ad = new ArrayDeserialize(); // &#x6574;&#x578B;&#x6570;&#x7EC4; String intArrJson = &quot;[9,7,5]&quot;; int[] intArr = ad.deserialize(intArrJson, int[].class); System.out.println(&quot;---------- &#x6574;&#x578B;&#x6570;&#x7EC4; ----------&quot;); for (int i : intArr) { System.out.println(i); } // &#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4; String strArrJson = &quot;[\\&quot;&#x5F20;&#x4E09;\\&quot;,\\&quot;&#x674E;&#x56DB;\\&quot;,\\&quot;&#x738B;&#x4E94;\\&quot;]&quot;; String[] strArr = ad.deserialize(strArrJson, String[].class); System.out.println(&quot;---------- &#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4; ----------&quot;); for (String str : strArr) { System.out.println(str); } // &#x5BF9;&#x8C61;&#x6570;&#x7EC4; String objArrJson = &quot;[{\\&quot;name\\&quot;:\\&quot;&#x5C0F;&#x660E;\\&quot;,\\&quot;age\\&quot;:10},{\\&quot;name\\&quot;:\\&quot;&#x9A6C;&#x4E3D;\\&quot;,\\&quot;age\\&quot;:9}]&quot;; Person[] objArr = ad.deserialize(objArrJson, Person[].class); System.out.println(&quot;---------- &#x5BF9;&#x8C61;&#x6570;&#x7EC4; ----------&quot;); for (Person person : objArr) { System.out.println(person); } }} &#x8FD0;&#x884C;ArrayDeserialize&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; &#x2014;&#x2014;&#x2014;- &#x6574;&#x578B;&#x6570;&#x7EC4; &#x2014;&#x2014;&#x2014;-975&#x2014;&#x2014;&#x2014;- &#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4; &#x2014;&#x2014;&#x2014;-&#x5F20;&#x4E09;&#x674E;&#x56DB;&#x738B;&#x4E94;&#x2014;&#x2014;&#x2014;- &#x5BF9;&#x8C61;&#x6570;&#x7EC4; &#x2014;&#x2014;&#x2014;-Person [name=&#x5C0F;&#x660E;, age=10]Person [name=&#x9A6C;&#x4E3D;, age=9] &#x4E09;&#x3001;&#x96C6;&#x5408;&#x7C7B;1&#x3001;&#x5E8F;&#x5217;&#x5316;&#x5C06;List&#x3001;Set&#x548C;Map&#x5E8F;&#x5217;&#x5316;&#x6210;JSON&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;123456789101112131415161718192021222324252627282930313233343536373839404142/** * &#x96C6;&#x5408;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class CollectionsSerialize { public void serialize(Collection&lt;?&gt; c) { Gson gson = new Gson(); System.out.println( gson.toJson(c) ); } public void serialize(Map&lt;?, ?&gt; map) { Gson gson = new Gson(); System.out.println( gson.toJson(map) ); } public static void main(String[] args) { CollectionsSerialize cs = new CollectionsSerialize(); // &#x6574;&#x578B;List List&lt;Integer&gt; intList = new ArrayList&lt;Integer&gt;(); intList.add(9); intList.add(8); intList.add(0); cs.serialize(intList); // &#x5B57;&#x7B26;&#x4E32;Set Set&lt;String&gt; strSet = new HashSet&lt;String&gt;(); strSet.add(&quot;Hello&quot;); strSet.add(&quot;World&quot;); strSet.add(&quot;Best&quot;); cs.serialize(strSet); // Map Map&lt;String, Person&gt; objMap = new HashMap&lt;String, Person&gt;(); objMap.put(&quot;marry&quot;, new Person(&quot;&#x9A6C;&#x4E3D;&quot;, 20)); objMap.put(&quot;xiaomin&quot;, new Person(&quot;&#x5C0F;&#x660E;&quot;, 21)); cs.serialize(objMap); }} &#x8FD0;&#x884C;CollectionsSerialize&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; [9,8,0][&#x201C;Best&#x201D;,&#x201D;World&#x201D;,&#x201D;Hello&#x201D;]{&#x201C;xiaomin&#x201D;:{&#x201C;name&#x201D;:&#x201D;&#x5C0F;&#x660E;&#x201D;,&#x201D;age&#x201D;:21},&#x201D;marry&#x201D;:{&#x201C;name&#x201D;:&#x201D;&#x9A6C;&#x4E3D;&#x201D;,&#x201D;age&#x201D;:20}} 2&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x5C06;JSON&#x5B57;&#x7B26;&#x4E32;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x6210;List&#x3001;Set&#x548C;Map&#x5BF9;&#x8C61;&#x3002;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * &#x96C6;&#x5408;&#x7684;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class CollectionDeserialize { public &lt;T&gt; T deserialize(String json, Type type) { Gson gson = new Gson(); return gson.fromJson(json, type); } public static void main(String[] args) { CollectionDeserialize cd = new CollectionDeserialize(); //&#x6574;&#x578B;List String intListJson = &quot;[9,8,0]&quot;; List&lt;Integer&gt; intList = cd.deserialize( intListJson, new TypeToken&lt;List&lt;Integer&gt;&gt;(){}.getType() ); System.out.println(&quot;---------- &#x6574;&#x578B;List ----------&quot;); for (Integer obj : intList) { System.out.println(obj); } // &#x5B57;&#x7B26;&#x4E32;Set String strSetJson = &quot;[\\&quot;Best\\&quot;,\\&quot;World\\&quot;,\\&quot;Hello\\&quot;]&quot;; Set&lt;String&gt; strSet = cd.deserialize( strSetJson, new TypeToken&lt;Set&lt;String&gt;&gt;(){}.getType() ); System.out.println(&quot;---------- &#x5B57;&#x7B26;&#x4E32;Set ----------&quot;); for (String str : strSet) { System.out.println(str); } // Map String objMapJson = &quot;{\\&quot;xiaomin\\&quot;:{\\&quot;name\\&quot;:\\&quot;&#x5C0F;&#x660E;\\&quot;,\\&quot;age\\&quot;:21},\\&quot;marry\\&quot;:{\\&quot;name\\&quot;:\\&quot;&#x9A6C;&#x4E3D;\\&quot;,\\&quot;age\\&quot;:20}}&quot;; Map&lt;String, Person&gt; objMap = cd.deserialize( objMapJson, new TypeToken&lt;Map&lt;String, Person&gt;&gt;(){}.getType() ); System.out.println(&quot;---------- Map ----------&quot;); for (Entry&lt;String, Person&gt; entry : objMap.entrySet()) { System.out.println(entry); } }} &#x8FD0;&#x884C;CollectionDeserialize&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; &#x2014;&#x2014;&#x2014;- &#x6574;&#x578B;List &#x2014;&#x2014;&#x2014;-980&#x2014;&#x2014;&#x2014;- &#x5B57;&#x7B26;&#x4E32;Set &#x2014;&#x2014;&#x2014;-BestWorldHello&#x2014;&#x2014;&#x2014;- Map &#x2014;&#x2014;&#x2014;-xiaomin=Person [name=&#x5C0F;&#x660E;, age=21]marry=Person [name=&#x9A6C;&#x4E3D;, age=20] &#x56DB;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; Gson Offical Site Gson User Guide","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"gson","slug":"gson","permalink":"http://aofeng.github.io/tags/gson/"},{"name":"json","slug":"json","permalink":"http://aofeng.github.io/tags/json/"},{"name":"serialize","slug":"serialize","permalink":"http://aofeng.github.io/tags/serialize/"},{"name":"序列化","slug":"序列化","permalink":"http://aofeng.github.io/tags/序列化/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"将项目从HG迁移至Git","slug":"将项目从HG迁移至Git","date":"2015-07-21T12:38:18.000Z","updated":"2016-11-06T12:05:35.000Z","comments":true,"path":"2015/07/21/将项目从HG迁移至Git/","link":"","permalink":"http://aofeng.github.io/2015/07/21/将项目从HG迁移至Git/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x9884;&#x5907; &#x4E8C;&#x3001;&#x8FC1;&#x79FB;&#x8FC7;&#x7A0B; GIT&#x5BF9;&#x591A;&#x5206;&#x652F;&#x6709;&#x7740;&#x975E;&#x5E38;&#x597D;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x56E2;&#x961F;&#x7684;&#x9879;&#x76EE;&#x9010;&#x6E10;&#x4ECE;HG&#x8FC1;&#x79FB;&#x81F3;GIT&#x3002;&#x8FC1;&#x79FB;&#x540E;&#xFF0C;&#x5982;&#x4F55;&#x80FD;&#x4FDD;&#x7559;&#x539F;&#x6765;HG&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x63D0;&#x4EA4;&#x5386;&#x53F2;&#x548C;tag&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5FC5;&#x987B;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF0C;fast-export&#x6B63;&#x662F;&#x56E0;&#x6B64;&#x800C;&#x4EA7;&#x751F;&#x3002; &#x4E00;&#x3001;&#x9884;&#x5907; &#x9700;&#x8981;&#x8FC1;&#x79FB;&#x7684;HG&#x9879;&#x76EE;&#x672C;&#x5730;&#x8DEF;&#x5F84;&#xFF1A;/devdata/projects/game/threadpool-jws-merge &#x8FC1;&#x79FB;&#x7684;&#x76EE;&#x7684;GIT&#x4ED3;&#x5E93;&#xFF1A;git@git.aofeng.local:jws-module/threadpool.git &#x4E8C;&#x3001;&#x8FC1;&#x79FB;&#x8FC7;&#x7A0B;1&#x3001;&#x83B7;&#x53D6;fast-export&#x5DE5;&#x5177;&#x3002;12cd $OPEN_SOURCE_DIRgit clone git://repo.or.cz/fast-export.git &#x8BF4;&#x660E;&#xFF1A; $OPEN_SOURCE_DIR&#x4E3A;&#x5B58;&#x653E;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#x7684;&#x76EE;&#x5F55; &#xFF0C;&#x5982;&#xFF1A;/devdata/projects/open_source/ 2&#x3001;&#x65B0;&#x5EFA;GIT&#x672C;&#x5730;&#x4ED3;&#x5E93;&#x5E76;&#x521D;&#x59CB;&#x5316;&#x3002;12345cd $GIT_REPO_ROOTmkdir threadpool-jwscd threadpool-jwsgit init &#x8BF4;&#x660E;&#xFF1A; $GIT_REPO_ROOT&#x4E3A;&#x5B58;&#x653E;GIT&#x9879;&#x76EE;&#x7684;&#x76EE;&#x5F55; &#xFF0C;&#x5982;&#xFF1A;/devdata/projects/git/ 3&#x3001;&#x4F7F;&#x7528;fast-export&#x5C06;HG&#x9879;&#x76EE;&#x8F6C;&#x6362;&#x6210;GIT&#x9879;&#x76EE;&#x3002;1$OPEN_SOURCE_DIR/fast-export/hg-fast-export.sh -r &lt;HG&#x9879;&#x76EE;&#x672C;&#x5730;&#x4ED3;&#x5E93;&#x8DEF;&#x5F84;&gt; &#x8BF4;&#x660E;&#xFF1A; &#x6267;&#x884C;&#x4E0A;&#x8FF0;&#x8F6C;&#x6362;&#x547D;&#x4EE4;&#x540E;&#xFF0C;&#x5728;$GIT_REPO_ROOT/threadpool-jws&#x4E0B;&#x9762;&#x751F;&#x6210;&#x4E86;&#x4E00;&#x4E2A;.git&#x76EE;&#x5F55;&#xFF0C;&#x5B58;&#x653E;&#x7684;&#x662F;&#x4ECE;HG&#x9879;&#x76EE;&#x8F6C;&#x6362;&#x540E;&#x7684;GIT&#x7248;&#x672C;&#x4FE1;&#x606F;&#xFF0C;&#x539F;&#x6765;&#x7684;HG&#x9879;&#x76EE;&#x4E0D;&#x53D7;&#x5F71;&#x54CD;&#x3002; &#x5F53;&#x524D;&#x4F8B;&#x5B50;&#x4E2D;&lt;HG&#x9879;&#x76EE;&#x672C;&#x5730;&#x4ED3;&#x5E93;&#x8DEF;&#x5F84;&gt;&#x4E3A;/devdata/projects/game/threadpool-jws-merge&#x3002; 4&#x3001;&#x5C06;&#x672C;&#x5730;GIT&#x4ED3;&#x5E93;&#x4E0E;&#x8FDC;&#x7A0B;GIT&#x4ED3;&#x5E93;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#x5E76;&#x63A8;&#x9001;&#x4EE3;&#x7801;&#x3002;123git checkout HEADgit remote add origin &lt;&#x8FC1;&#x79FB;&#x7684;&#x76EE;&#x7684;GIT&#x4ED3;&#x5E93;&gt;git push origin master &#x8BF4;&#x660E;&#xFF1B; &#x5F53;&#x524D;&#x4F8B;&#x5B50;&#x4E2D;&lt;&#x8FC1;&#x79FB;&#x7684;&#x76EE;&#x7684;GIT&#x4ED3;&#x5E93;&gt;&#x4E3A; git@git.aofeng.local:jws-module/threadpool.git 5&#x3001;&#x5C06;&#x6807;&#x7B7E;&#xFF08;tag&#xFF09;&#x63A8;&#x9001;&#x81F3;&#x8FDC;&#x7A0B;GIT&#x4ED3;&#x5E93;&#x3002;1git push origin --tags","categories":[{"name":"版本控制","slug":"版本控制","permalink":"http://aofeng.github.io/categories/版本控制/"},{"name":"Git","slug":"版本控制/Git","permalink":"http://aofeng.github.io/categories/版本控制/Git/"}],"tags":[{"name":"hg","slug":"hg","permalink":"http://aofeng.github.io/tags/hg/"},{"name":"git","slug":"git","permalink":"http://aofeng.github.io/tags/git/"},{"name":"版本控制","slug":"版本控制","permalink":"http://aofeng.github.io/tags/版本控制/"}],"keywords":[{"name":"版本控制","slug":"版本控制","permalink":"http://aofeng.github.io/categories/版本控制/"},{"name":"Git","slug":"版本控制/Git","permalink":"http://aofeng.github.io/categories/版本控制/Git/"}]},{"title":"Nginx-编译安装_启动_停止","slug":"Nginx-编译安装-启动-停止","date":"2015-06-30T12:49:04.000Z","updated":"2016-11-06T12:13:13.000Z","comments":true,"path":"2015/06/30/Nginx-编译安装-启动-停止/","link":"","permalink":"http://aofeng.github.io/2015/06/30/Nginx-编译安装-启动-停止/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x9884;&#x5907; | Prerequisites &#x4E8C;&#x3001;&#x914D;&#x7F6E;&#x4F9D;&#x8D56;&#x7EC4;&#x4EF6; | Setup Dependents &#x4E09;&#x3001;&#x5B89;&#x88C5;Nginx | Install Nginx &#x56DB;&#x3001;Nginx&#x542F;&#x52A8;&#x548C;&#x505C;&#x6B62; | How to start and stop nginx &#x4E94;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; | References &#x4E00;&#x3001;&#x9884;&#x5907; | Prerequisites CentOS5 / RedHat5 /CentOS6 / RedHat6 GCC-4.1.2 Nginx-1.9.2 pcre-8.21 zlib-1.2.5 openssl-1.0.2c &#x4E8C;&#x3001;&#x914D;&#x7F6E;&#x4F9D;&#x8D56;&#x7EC4;&#x4EF6; | Setup Dependents1234567891011121314# &#x8FDB;&#x5165;&#x5B58;&#x653E;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x7684;&#x76EE;&#x5F55;cd ~/download# PCRE&#x6E90;&#x7801;&#x4E0B;&#x8F7D;&#x548C;&#x89E3;&#x538B;wget http://sourceforge.net/projects/pcre/files/pcre/8.21/pcre-8.21.tar.gz/downloadtar -zxvf pcre-8.21.tar.gz -C ../build/# zlib&#x6E90;&#x7801;&#x4E0B;&#x8F7D;&#x548C;&#x89E3;&#x538B;wget http://sourceforge.net/projects/libpng/files/zlib/1.2.5/zlib-1.2.5.tar.gz/download?use_mirror=nchc&amp;download=tar -zxvf zlib-1.2.5.tar.gz -C ../build/# OpenSSL&#x6E90;&#x7801;&#x4E0B;&#x8F7D;&#x548C;&#x89E3;&#x538B;wget --no-check-certificate https://www.openssl.org/source/openssl-1.0.2c.tar.gztar -zxvf openssl-1.0.2c.tar.gz -C ../build/ &#x4E09;&#x3001;&#x5B89;&#x88C5;Nginx | Install Nginx1&#x3001;&#x4E0B;&#x8F7D;Nginx&#x6E90;&#x7801;&#x5E76;&#x89E3;&#x538B;&#x3002;123456# &#x8FDB;&#x5165;&#x5B58;&#x653E;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x7684;&#x76EE;&#x5F55;cd ~/download# &#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x5E76;&#x89E3;&#x538B;wget http://nginx.org/download/nginx-1.9.2.tar.gztar -zxvf nginx-1.9.2.tar.gz -C ../build/ 2&#x3001;&#x7F16;&#x8BD1;&#x4E09;&#x6B65;&#x66F2;&#x3002;1&#xFF09;&#x7F16;&#x8BD1;&#x914D;&#x7F6E;&#x3002;123456789./configure --prefix=/home/sdkserver/local/nginx-1.9.2 \\ --with-pcre=/home/sdkserver/build/pcre-8.21 --with-pcre-jit \\ --with-zlib=/home/sdkserver/build/zlib-1.2.5 \\ --with-openssl=/home/sdkserver/build/openssl-1.0.2c --with-http_ssl_module \\ --http-client-body-temp-path=/home/sdkserver/local/nginx-1.9.2/temp/body \\ --http-fastcgi-temp-path=/home/sdkserver/local/nginx-1.9.2/temp/fastcgi \\ --http-proxy-temp-path=/home/sdkserver/local/nginx-1.9.2/temp/proxy \\ --http-scgi-temp-path=/home/sdkserver/local/nginx-1.9.2/temp/scgi \\ --http-uwsgi-temp-path=/home/sdkserver/local/nginx-1.9.2/temp/uwsgi &#x914D;&#x7F6E;&#x6210;&#x529F;&#xFF0C;&#x7CFB;&#x7EDF;&#x8F93;&#x51FA;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; Configuration summary + using PCRE library: /home/sdkserver/build/pcre-8.21 + using OpenSSL library: /home/sdkserver/build/openssl-1.0.2c + md5: using OpenSSL library + sha1: using OpenSSL library + using zlib library: /home/sdkserver/build/zlib-1.2.5 nginx path prefix: &quot;/home/sdkserver/local/nginx-1.9.2&quot; nginx binary file: &quot;/home/sdkserver/local/nginx-1.9.2/sbin/nginx&quot; nginx configuration prefix: &quot;/home/sdkserver/local/nginx-1.9.2/conf&quot; nginx configuration file: &quot;/home/sdkserver/local/nginx-1.9.2/conf/nginx.conf&quot; nginx pid file: &quot;/home/sdkserver/local/nginx-1.9.2/logs/nginx.pid&quot; nginx error log file: &quot;/home/sdkserver/local/nginx-1.9.2/logs/error.log&quot; nginx http access log file: &quot;/home/sdkserver/local/nginx-1.9.2/logs/access.log&quot; nginx http client request body temporary files: &quot;/home/sdkserver/local/nginx-1.9.2/temp/body&quot; nginx http proxy temporary files: &quot;/home/sdkserver/local/nginx-1.9.2/temp/proxy&quot; nginx http fastcgi temporary files: &quot;/home/sdkserver/local/nginx-1.9.2/temp/fastcgi&quot; nginx http uwsgi temporary files: &quot;/home/sdkserver/local/nginx-1.9.2/temp/uwsgi&quot; nginx http scgi temporary files: &quot;/home/sdkserver/local/nginx-1.9.2/temp/scgi&quot; 2)&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x3002;12makemake install &#x56DB;&#x3001;Nginx&#x542F;&#x52A8;&#x548C;&#x505C;&#x6B62; | How to start and stop nginx1&#x3001;&#x542F;&#x52A8;Nginx&#x3002;1./sbin/nginx -c ./conf/nginx.conf 2&#x3001;&#x505C;&#x6B62;Nginx&#x3002;1&#xFF09;&#x5B89;&#x5168;&#x505C;&#x6B62;&#x3002;1kill -QUIT [Nginx&#x4E3B;&#x8FDB;&#x7A0B;&#x53F7;] &#x6216;1./sbin/nginx -s quit 2&#xFF09;&#x5FEB;&#x901F;&#x505C;&#x6B62;&#x3002;1kill -TERM [Nginx&#x4E3B;&#x8FDB;&#x7A0B;&#x53F7;] &#x6216;1kill -INT [Nginx&#x4E3B;&#x8FDB;&#x7A0B;&#x53F7;] &#x6216;1./sbin/nginx -s stop 3&#x3001;&#x91CD;&#x542F;Nginx&#x3002;1kill -HUP [Nginx&#x4E3B;&#x8FDB;&#x7A0B;&#x53F7;] &#x6216;1./sbin/nginx -s reload 4&#x3001;&#x68C0;&#x67E5;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x8BED;&#x6CD5;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;1./sbin/nginx -t -c ./conf/nginx.conf &#x4E94;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; | References Building nginx from Sources Installation and compile-time options Building nginx from source","categories":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Nginx","slug":"开源组件/Nginx","permalink":"http://aofeng.github.io/categories/开源组件/Nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"http://aofeng.github.io/tags/nginx/"}],"keywords":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Nginx","slug":"开源组件/Nginx","permalink":"http://aofeng.github.io/categories/开源组件/Nginx/"}]},{"title":"CentOS6 在VirtualBox中实现全屏和根据窗口大小自动调整分辨率","slug":"CentOS6-在VirtualBox中实现全屏和根据窗口大小自动调整分辨率","date":"2015-06-10T13:05:42.000Z","updated":"2016-11-06T12:45:53.000Z","comments":true,"path":"2015/06/10/CentOS6-在VirtualBox中实现全屏和根据窗口大小自动调整分辨率/","link":"","permalink":"http://aofeng.github.io/2015/06/10/CentOS6-在VirtualBox中实现全屏和根据窗口大小自动调整分辨率/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x73AF;&#x5883; | Enviroment &#x5B89;&#x88C5; | Setup &#x9644;&#x52A0;&#x8BF4;&#x660E; | Additions &#x524D;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x300A;CentOS6 Minimal &#x5B89;&#x88C5;&#x684C;&#x9762;(GNOME)&#x300B;&#x5199;&#x4E86;&#x5982;&#x4F55;&#x7ED9;CentOS&#x5B89;&#x88C5;&#x56FE;&#x5F62;&#x684C;&#x9762;&#x7CFB;&#x7EDF;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x8BF4;&#x660E;&#x901A;&#x8FC7;&#x5B89;&#x88C5;&#x589E;&#x5F3A;&#x5305;&#x6765;&#x5B9E;&#x73B0;VirtualBox&#x4E2D;&#x7684;CentOS6.x&#x5B9E;&#x73B0;&#x5168;&#x5C4F;&#x548C;&#x5206;&#x8FA8;&#x7387;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x3002; &#x73AF;&#x5883; | Enviroment CentOS 6.6 VirtualBox 4.3.28 &#x5B89;&#x88C5; | Setup&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5206;&#x4E3A;4&#x4E2A;&#x6B65;&#x805A;&#xFF0C;&#x8BB8;&#x591A;&#x4EBA;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;&#x5BFC;&#x81F4;&#x5B89;&#x88C5;&#x4E86;&#x589E;&#x5F3A;&#x5305;&#x540E;&#x65E0;&#x6CD5;&#x5B9E;&#x73B0;&#x5206;&#x8FA8;&#x7387;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x3002;&#x6CE8;&#xFF1A;&#x6240;&#x6709;&#x7684;&#x5B89;&#x88C5;&#x5FC5;&#x987B;&#x62E5;&#x6709;root&#x6743;&#x9650;&#x3002; 1&#x3001;&#x5B89;&#x88C5;&#x7F16;&#x8BD1;&#x6240;&#x9700;&#x7684;&#x4F9D;&#x8D56;&#x5305;1yum groupinstall &quot;Development Tools&quot; 2&#x3001;&#x5B89;&#x88C5;&#x5185;&#x6838;&#x5F00;&#x53D1;&#x5305;12yum install kernel-develyum install kernel-headers 3&#x3001;&#x5B89;&#x88C5;ATI/AMD&#x663E;&#x5361;&#x9A71;&#x52A8; 1&#xFF09;&#x589E;&#x52A0;&#x65B0;&#x7684;&#x516C;&#x94A5;&#x3002;1rpm --import http://elrepo.org/RPM-GPG-KEY-elrepo.org 2&#xFF09;&#x5B89;&#x88C5;yum-plugin-fastestmirror&#x3002;12rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpmyum -y install yum-plugin-fastestmirror 3&#xFF09;&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;&#x3002;1yum -y install kmod-fglrx 4&#x3001;&#x5B89;&#x88C5;VirtualBox&#x589E;&#x5F3A;&#x5305;12cd /media/VBOXADDITIONS_4.3.28_100309/./VBoxLinuxAdditions.run &#x7CFB;&#x7EDF;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; Verifying archive integrity&#x2026; All good.Uncompressing VirtualBox 4.3.28 Guest Additions for Linux&#x2026;&#x2026;&#x2026;&#x2026;VirtualBox Guest Additions installerRemoving installed version 4.3.28 of VirtualBox Guest Additions&#x2026;Copying additional installer modules &#x2026;Installing additional modules &#x2026;Removing existing VirtualBox non-DKMS kernel modules [&#x786E;&#x5B9A;]Building the VirtualBox Guest Additions kernel modulesBuilding the main Guest Additions module [&#x786E;&#x5B9A;]Building the shared folder support module [&#x786E;&#x5B9A;]Building the OpenGL support module [&#x786E;&#x5B9A;]Doing non-kernel setup of the Guest Additions [&#x786E;&#x5B9A;]You should restart your guest to make sure the new modules are actually used Installing the Window System driversInstalling X.Org Server 1.15 modules [&#x786E;&#x5B9A;]Setting up the Window System to use the Guest Additions [&#x786E;&#x5B9A;]You may need to restart the the Window System (or just restart the guest system)to enable the Guest Additions. Installing graphics libraries and desktop services componen[&#x786E;&#x5B9A;] &#x91CD;&#x542F;&#x7CFB;&#x7EDF;&#xFF0C;CentOS&#x5C31;&#x53EF;&#x6839;&#x636E;&#x7A97;&#x53E3;&#x5927;&#x5C0F;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x5206;&#x8FA8;&#x7387;&#x4E86;&#xFF1A; &#x9644;&#x52A0;&#x8BF4;&#x660E; | Additions&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;&#xFF0C;&#x5B89;&#x88C5;&#x4E86;&#x589E;&#x5F3A;&#x5305;&#x540E;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#x7684;CentOS&#x4E0D;&#x80FD;&#x81EA;&#x52A8;&#x6839;&#x636E;&#x7A97;&#x53E3;&#x5927;&#x5C0F;&#x7684;&#x6539;&#x53D8;&#x800C;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x53EA;&#x663E;&#x793A;&#x4E86;&#x4E24;&#x4E2A;&#x5206;&#x8FA8;&#x7387;&#xFF1A; 1024*768 60Hz 800*600 60Hz","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"centos","slug":"centos","permalink":"http://aofeng.github.io/tags/centos/"},{"name":"virtualbox","slug":"virtualbox","permalink":"http://aofeng.github.io/tags/virtualbox/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"CentOS6 Minimal 安装桌面GNOME","slug":"CentOS6-Minimal-安装桌面GNOME","date":"2015-06-05T13:35:40.000Z","updated":"2016-11-06T12:37:58.000Z","comments":true,"path":"2015/06/05/CentOS6-Minimal-安装桌面GNOME/","link":"","permalink":"http://aofeng.github.io/2015/06/05/CentOS6-Minimal-安装桌面GNOME/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4F7F;&#x7528;CentOS Minimal ISO&#x5B89;&#x88C5;&#x597D;&#x7CFB;&#x7EDF;&#x540E;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x684C;&#x9762;&#x7CFB;&#x7EDF;&#x65E0;&#x6CD5;&#x8FD0;&#x884C;GUI&#x5E94;&#x7528;&#x3002;&#x5148;&#x53C2;&#x8003;&#x6211;&#x5199;&#x7684;&#x524D;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x300A;CentOS6 Minimal &#x6587;&#x672C;&#x6A21;&#x5F0F;&#x4E0B;&#x914D;&#x7F6E;&#x7F51;&#x7EDC;&#x300B;&#x914D;&#x7F6E;&#x597D;&#x7F51;&#x7EDC;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1yum groupinstall basic-desktop desktop-platform x11 fonts &#x5927;&#x7EA6;&#x8981;&#x4E0B;&#x8F7D;350MB&#x5DE6;&#x53F3;&#x7684;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF0C;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1startx &#x542F;&#x52A8;&#x684C;&#x9762;&#x540E;&#x7684;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x5982;&#x679C;&#x8981;&#x60F3;&#x6BCF;&#x6B21;&#x542F;&#x52A8;&#x540E;&#x81EA;&#x52A8;&#x8FDB;&#x5165;&#x684C;&#x9762;&#x7CFB;&#x7EDF;&#xFF0C;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#xFF1A;1vi /etc/inittab &#x627E;&#x5230;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;12345678910# Default runlevel. The runlevels used are:# 0 - halt (Do NOT set initdefault to this)# 1 - Single user mode# 2 - Multiuser, without NFS (The same as 3, if you do not have networking)# 3 - Full multiuser mode# 4 - unused# 5 - X11# 6 - reboot (Do NOT set initdefault to this)#id:3:initdefault: &#x5C06;id:3:initdefault:&#x6539;&#x6210;id:5:initdefault:&#x3002;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"centos","slug":"centos","permalink":"http://aofeng.github.io/tags/centos/"},{"name":"桌面","slug":"桌面","permalink":"http://aofeng.github.io/tags/桌面/"},{"name":"gnome","slug":"gnome","permalink":"http://aofeng.github.io/tags/gnome/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"CentOS6 Minimal 文本模式下配置网络","slug":"CentOS6-Minimal-文本模式下配置网络","date":"2015-06-05T13:00:08.000Z","updated":"2016-11-06T12:30:07.000Z","comments":true,"path":"2015/06/05/CentOS6-Minimal-文本模式下配置网络/","link":"","permalink":"http://aofeng.github.io/2015/06/05/CentOS6-Minimal-文本模式下配置网络/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x8BBE;&#x7F6E;&#x7F51;&#x5361;1&#xFF08;DHCP&#xFF09; &#x4E8C;&#x3001;&#x8BBE;&#x7F6E;&#x7F51;&#x5361;2&#xFF08;Static&#xFF09; &#x4E09;&#x3001;&#x91CD;&#x542F;&#x7F51;&#x5361; &#x56DB;&#x3001;&#x67E5;&#x770B;&#x7F51;&#x5361;&#x4FE1;&#x606F; &#x4E94;&#x3001;&#x9A8C;&#x8BC1; &#x968F;&#x7740;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x670D;&#x52A1;&#x5668;&#x786C;&#x4EF6;&#x7684;&#x5347;&#x7EA7;&#xFF0C;&#x5176;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4ECE;RedHat5.x&#x6539;&#x7528;RedHat6.x&#xFF0C;&#x4E2A;&#x4EBA;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x4E5F;&#x8981;&#x4ECE;CentOS5.x&#x6539;&#x7528;CentOS6.x&#xFF0C;&#x907F;&#x514D;&#x56E0;&#x4F9D;&#x8D56;&#x5E93;&#x7248;&#x672C;&#x4E0D;&#x540C;&#x5BFC;&#x81F4;&#x517C;&#x5BB9;&#x95EE;&#x9898;&#x3002;CentOS6.6&#x5B89;&#x88C5;&#x5728;VirtualBox&#x4E2D;&#xFF0C;&#x914D;&#x7F6E;&#x6709;&#x4E24;&#x5757;&#x7F51;&#x5361;&#xFF0C;&#x65B0;&#x88C5;&#x540E;&#x7684;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x80FD;&#x8FDE;&#x63A5;&#x7F51;&#x7EDC;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x624B;&#x5DE5;&#x8BBE;&#x7F6E;&#xFF1A; &#x7F51;&#x5361;1&#xFF0C;&#x4F7F;&#x7528;NAT&#xFF0C;&#x7528;&#x4E8E;&#x8FDE;&#x63A5;&#x516C;&#x7F51;&#x3002; &#x7F51;&#x5361;2&#xFF0C;&#x4F7F;&#x7528;Host-Only&#xFF0C;&#x7528;&#x4E8E;&#x4E0E;&#x4E3B;&#x673A;&#x901A;&#x4FE1;&#x3002; &#x7531;&#x4E8E;&#x540C;&#x65F6;&#x5F00;&#x542F;&#x591A;&#x4E2A;&#x865A;&#x62DF;&#x673A;&#xFF0C;&#x4E0D;&#x5E0C;&#x671B;&#x5B83;&#x4EEC;&#x7684;IP&#x5730;&#x5740;&#x56E0;&#x542F;&#x52A8;&#x987A;&#x5E8F;&#x4E0D;&#x540C;&#x800C;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5BF9;&#x7F51;&#x5361;2&#x7684;IP&#x5730;&#x5740;&#x8FDB;&#x884C;&#x9759;&#x6001;&#x8BBE;&#x7F6E;&#xFF0C;&#x7F51;&#x5361;1&#x7684;IP&#x5730;&#x5740;&#x4F7F;&#x7528;DHCP&#x52A8;&#x6001;&#x5206;&#x914D;&#x3002; &#x6CE8;&#xFF1A;&#x4EE5;&#x4E0B;&#x7684;&#x64CD;&#x4F5C;&#x5FC5;&#x987B;&#x5177;&#x6709;root&#x6743;&#x9650;&#x3002; &#x4E00;&#x3001;&#x8BBE;&#x7F6E;&#x7F51;&#x5361;1&#xFF08;DHCP&#xFF09;1&#x3001;&#x8FDB;&#x5165;/etc/sysconfig/network-scripts&#x76EE;&#x5F55;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7F51;&#x5361;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A;12cd /etc/sysconfig/network-scriptsls 2&#x3001;&#x7F16;&#x8F91;&#x7F51;&#x5361;1&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;ifcfg-eth0&#xFF1A;1vi ifcfg-eth0 &#x5C06;ONBOOT&#x7684;&#x503C;&#x6539;&#x6210;yes&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;1234567DEVICE=eth0HWADDR=08:00:27:CD:C3:2ETYPE=EthernetUUID=b40ddfdd-504a-4711-aa89-d554463cd393ONBOOT=yesNM_CONTROLLED=yesBOOTPROTO=dhcp &#x4E8C;&#x3001;&#x8BBE;&#x7F6E;&#x7F51;&#x5361;2&#xFF08;Static&#xFF09;&#x7F16;&#x8F91;&#x7F51;&#x5361;2&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;ifcfg-eth1&#xFF1A;1vi ifcfg-eth1 &#x5C06;ONBOOT&#x7684;&#x503C;&#x6539;&#x6210;yes&#xFF0C;BOOTPROTO&#x7684;&#x503C;&#x6539;&#x6210;static&#xFF0C;&#x5E76;&#x589E;&#x52A0;IPADDR&#x548C;NETMASK&#x4E24;&#x884C;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;123456789DEVICE=eth1HWADDR=08:00:27:20:93:41TYPE=EthernetUUID=b67f7e1c-31b8-4c33-ac52-a38d935b871cONBOOT=yesNM_CONTROLLED=yesBOOTPROTO=staticIPADDR=192.168.56.103NETMASK=255.255.255.0 &#x4E09;&#x3001;&#x91CD;&#x542F;&#x7F51;&#x5361;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x91CD;&#x542F;&#x7F51;&#x5361;&#xFF1A;1service network restart &#x56DB;&#x3001;&#x67E5;&#x770B;&#x7F51;&#x5361;&#x4FE1;&#x606F;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x663E;&#x793A;&#x7F51;&#x5361;&#x4FE1;&#x606F;&#xFF1A;1ip a &#x7CFB;&#x7EDF;&#x663E;&#x793A;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; 1: lo: mtu 65536 qdisc noqueue state UNKNOWN link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo inet6 ::1/128 scope host valid_lft forever preferred_lft forever2: eth0: mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:cd:c3:2e brd ff:ff:ff:ff:ff:ff inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0 inet6 fe80::a00:27ff:fecd:c32e/64 scope link valid_lft forever preferred_lft forever3: eth1: mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:20:93:41 brd ff:ff:ff:ff:ff:ff inet 192.168.56.103/24 brd 192.168.56.255 scope global eth1 inet6 fe80::a00:27ff:fe20:9341/64 scope link valid_lft forever preferred_lft forever &#x4E94;&#x3001;&#x9A8C;&#x8BC1;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x53EF;&#x6B63;&#x5E38;&#x5730;&#x8FDE;&#x63A5;&#x5230;&#x516C;&#x7F51;&#xFF1A;1ping -c 4 www.google.com &#x7CFB;&#x7EDF;&#x663E;&#x793A;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF0C;&#x8BF4;&#x660E;&#x5DF2;&#x7ECF;&#x6210;&#x529F;&#x5730;&#x8FDE;&#x63A5;&#x5230;&#x516C;&#x7F51;&#xFF1A; PING www.google.com (216.58.221.100) 56(84) bytes of data.64 bytes from hkg07s01-in-f4.1e100.net (216.58.221.100): icmp_seq=1 ttl=50 time=7.08 ms64 bytes from hkg07s01-in-f4.1e100.net (216.58.221.100): icmp_seq=2 ttl=50 time=7.79 ms64 bytes from hkg07s01-in-f4.1e100.net (216.58.221.100): icmp_seq=3 ttl=50 time=7.23 ms64 bytes from hkg07s01-in-f4.1e100.net (216.58.221.100): icmp_seq=4 ttl=50 time=6.88 ms &#x2014; www.google.com ping statistics &#x2014;4 packets transmitted, 4 received, 0% packet loss, time 3018msrtt min/avg/max/mdev = 6.889/7.248/7.793/0.342 ms","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"centos","slug":"centos","permalink":"http://aofeng.github.io/tags/centos/"},{"name":"网络","slug":"网络","permalink":"http://aofeng.github.io/tags/网络/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"MySQL5.5-主从复制配置","slug":"MySQL5-5-主从复制配置","date":"2015-06-02T08:11:42.000Z","updated":"2016-11-06T13:04:27.000Z","comments":true,"path":"2015/06/02/MySQL5-5-主从复制配置/","link":"","permalink":"http://aofeng.github.io/2015/06/02/MySQL5-5-主从复制配置/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x73AF;&#x5883; &#x4E8C;&#x3001;&#x914D;&#x7F6E;&#x670D;&#x52A1;&#x5668;ID&#x548C;&#x4E8C;&#x8FDB;&#x5236;&#x65E5;&#x5FD7; 1&#x3001;&#x914D;&#x7F6E;Master 2&#x3001;&#x914D;&#x7F6E;Slave &#x4E09;&#x3001;&#x6388;&#x6743;&#x548C;&#x590D;&#x5236;&#x914D;&#x7F6E; 1&#x3001;&#x914D;&#x7F6E;Master 2&#x3001;&#x914D;&#x7F6E;Slave &#x56DB;&#x3001;&#x9A8C;&#x8BC1; 1&#x3001;&#x67E5;&#x770B;Master&#x7684;&#x8FDB;&#x7A0B; 2&#x3001;&#x67E5;&#x770B;Slave&#x7684;&#x8FDB;&#x7A0B; 3&#x3001;&#x4E3B;&#x4ECE;&#x6570;&#x636E;&#x590D;&#x5236;&#x6821;&#x9A8C; &#x4E94;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; &#x5728;&#x5927;&#x578B;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x8BFB;&#x7684;&#x8BF7;&#x6C42;&#x975E;&#x5E38;&#x9891;&#x7E41;&#xFF0C;&#x5355;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x8282;&#x70B9;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x8BFB;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF1A;&#x8BFB;&#x5199;&#x5206;&#x79BB;&#xFF0C;&#x5C06;&#x8BFB;&#x64CD;&#x4F5C;&#x5206;&#x5E03;&#x81F3;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x4ECE;&#x8282;&#x70B9;&#x3002;&#x9664;&#x4E86;&#x9AD8;&#x6027;&#x80FD;&#x5916;&#xFF0C;&#x9AD8;&#x53EF;&#x7528;&#x548C;&#x5BB9;&#x707E;&#x4E5F;&#x662F;&#x4E0D;&#x5BB9;&#x5FFD;&#x89C6;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x8BB8;&#x591A;&#x7CFB;&#x7EDF;&#x4F1A;&#x505A;&#x6570;&#x636E;&#x5907;&#x4EFD;&#xFF0C;&#x901A;&#x8FC7;&#x4E3B;&#x4ECE;&#x590D;&#x5236;&#x5C06;&#x6570;&#x636E;&#x5907;&#x4EFD;&#x81F3;&#x53E6;&#x4E00;&#x53F0;&#x7269;&#x7406;&#x670D;&#x52A1;&#x5668;&#x6216;&#x8005;&#x5F02;&#x5730;&#x673A;&#x623F;&#x3002;MySQL&#x652F;&#x6301;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x590D;&#x5236;&#xFF1A; &#x57FA;&#x4E8E;&#x8BED;&#x53E5;&#x7684;&#x590D;&#x5236;&#xFF1A;&#x6280;&#x672F;&#x6210;&#x719F;&#x3001;&#x590D;&#x5236;&#x6570;&#x636E;&#x9AD8;&#x6548;&#xFF0C;&#x4F46;&#x5728;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x573A;&#x666F;&#xFF08;&#x5982;&#xFF1A;&#x8BED;&#x53E5;&#x4E2D;&#x542B;&#x6709;now()&#x7B49;&#x8868;&#x793A;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x7684;&#x51FD;&#x6570;&#xFF09;&#x4E2D;&#x4F1A;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x4E0D;&#x4E00;&#x81F4;&#x3002; &#x57FA;&#x4E8E;&#x884C;&#x7684;&#x590D;&#x5236;&#xFF1A;&#x57FA;&#x4E8E;&#x8868;&#x7684;&#x53D8;&#x5316;&#x8BB0;&#x5F55;&#x884C;&#x4FE1;&#x606F;&#xFF0C;&#x662F;&#x6700;&#x5B89;&#x5168;&#x7684;&#x590D;&#x5236;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;&#x679C;&#x8BED;&#x53E5;&#x66F4;&#x65B0;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x884C;&#xFF0C;&#x4F1A;&#x751F;&#x6210;&#x5F88;&#x5927;&#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x6548;&#x7387;&#x53D7;&#x5F71;&#x54CD;&#x3002; &#x6DF7;&#x5408;&#x6A21;&#x5F0F;&#xFF1A;&#x517C;&#x987E;&#x57FA;&#x4E8E;&#x8BED;&#x53E5;&#x548C;&#x57FA;&#x4E8E;&#x884C;&#x7684;&#x4F18;&#x70B9;&#xFF0C;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x7528;&#x57FA;&#x4E8E;&#x8BED;&#x53E5;&#x6765;&#x590D;&#x5236;&#x6570;&#x636E;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x8BED;&#x53E5;&#x91C7;&#x7528;&#x57FA;&#x4E8E;&#x884C;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x590D;&#x5236;&#x6570;&#x636E;&#x3002; MySQL&#x7684;&#x590D;&#x5236;&#x8FC7;&#x7A0B;&#xFF1A;Master&#x8F93;&#x51FA;bin log&#xFF08;&#x4E8C;&#x8FDB;&#x5236;&#x65E5;&#x5FD7;&#xFF09;&#xFF0C;Slave&#x62C9;&#x53D6;bin log&#x5199;&#x5165;&#x672C;&#x5730;&#x7684;relay log&#xFF08;&#x4E2D;&#x7EE7;&#x65E5;&#x5FD7;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x89E3;&#x6790;&#x91CD;&#x653E;&#x64CD;&#x4F5C;&#x3002;&#x8BE6;&#x7EC6;&#x6B65;&#x805A;&#x5982;&#x4E0B;&#xFF1A; Master&#x63D0;&#x4EA4;&#x4E8B;&#x52A1;&#x4E4B;&#x524D;&#xFF0C;&#x5C06;&#x6539;&#x53D8;&#x7684;&#x5185;&#x5BB9;&#x4E32;&#x884C;&#x5730;&#x5199;&#x5165;bin log&#x3002; Slave&#x901A;&#x8FC7;I/O&#x7EBF;&#x7A0B;&#x8FDE;&#x63A5;&#x5230;Master&#xFF0C;&#x8BF7;&#x6C42;&#x4ECE;&#x6307;&#x5B9A;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x7684;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x62C9;&#x53D6;&#x5185;&#x5BB9;&#x3002; Master&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x81EA;&#x8EAB;&#x7684;I/O&#x7EBF;&#x7A0B;&#x8BFB;&#x53D6;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x7684;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x540E;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x5E76;&#x8FD4;&#x56DE;&#x7ED9;Slave&#x3002; Slave&#x6536;&#x5230;&#x54CD;&#x5E94;&#x540E;&#xFF0C;&#x5C06;&#x65E5;&#x5FD7;&#x5185;&#x5BB9;&#x5199;&#x5165;&#x672C;&#x5730;&#x7684;relay log&#x3002; Slave&#x7684;SQL&#x7EBF;&#x7A0B;&#x89E3;&#x6790;relay log&#xFF0C;&#x8FD8;&#x539F;&#x64CD;&#x4F5C;&#xFF08;&#x5728;Slave&#x7AEF;&#x91CD;&#x653E;Master&#x7684;&#x64CD;&#x4F5C;&#xFF09;&#xFF0C;&#x4FDD;&#x6301;&#x6570;&#x636E;&#x4E00;&#x81F4;&#x3002; &#x4E00;&#x3001;&#x73AF;&#x5883; RedHat 5.x / CentOS 5.x GCC 4.1.2 MySQL Master 5.5.43&#xFF0C;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x6570;&#x636E;&#xFF0C;IP&#x5730;&#x5740;&#x4E3A;192.168.56.102&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#x4E3A;19826 MySQL Slave 5.5.43&#xFF0C;&#x65B0;&#x5EFA;&#x7684;&#x5B9E;&#x4F8B;&#xFF08;&#x65E0;&#x6570;&#x636E;&#xFF09;&#xFF0C;IP&#x5730;&#x5740;&#x4E3A;192.168.56.102&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#x4E3A;19836&#x3002; &#x4E8C;&#x3001;&#x914D;&#x7F6E;&#x670D;&#x52A1;&#x5668;ID&#x548C;&#x4E8C;&#x8FDB;&#x5236;&#x65E5;&#x5FD7;&#x8BF4;&#x660E;&#xFF1A; Master&#x548C;Slave&#x5FC5;&#x987B;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5668;ID&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;Slave&#xFF0C;&#x6BCF;&#x4E2A;Slave&#x7684;&#x670D;&#x52A1;&#x5668;ID&#x4E5F;&#x5FC5;&#x987B;&#x552F;&#x4E00;&#x3002; Master&#x5FC5;&#x987B;&#x8F93;&#x51FA;bing log&#x3002; 1&#x3001;&#x914D;&#x7F6E;Master&#x6253;&#x5F00;Master&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;my.cnf&#xFF1A;1vi /home/nieyong/local/mysql-5543/data/data19826/my.cnf &#x4FEE;&#x6539;&#x5185;&#x5BB9;&#xFF1A;1234[mysqld]server-id = 26 #[&#x5FC5;&#x987B;]&#x670D;&#x52A1;&#x5668;ID&#xFF0C;&#x5728;&#x96C6;&#x7FA4;&#x4E2D;&#x5FC5;&#x987B;&#x552F;&#x4E00;log-bin = /home/nieyong/local/mysql-5543/data/data19826/data/mysql-bin #[&#x5FC5;&#x987B;]&#x4E8C;&#x8FDB;&#x5236;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;binlog_format = mixed #[&#x53EF;&#x9009;]&#x914D;&#x7F6E;&#x4E3A;&#x6DF7;&#x5408;&#x6A21;&#x5F0F; 2&#x3001;&#x914D;&#x7F6E;Slave&#x6253;&#x5F00;Slave&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;my.cnf&#xFF1A;1vi /home/nieyong/local/mysql-5543/data/data19836/my.cnf &#x4FEE;&#x6539;&#x5185;&#x5BB9;&#xFF1A;1234[mysqld]server-id = 36 #[&#x5FC5;&#x987B;]&#x670D;&#x52A1;&#x5668;ID&#xFF0C;&#x5728;&#x96C6;&#x7FA4;&#x4E2D;&#x5FC5;&#x987B;&#x552F;&#x4E00;log-bin = /home/nieyong/local/mysql-5543/data/data19836/data/mysql-bin #[&#x5FC5;&#x987B;]&#x4E8C;&#x8FDB;&#x5236;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;binlog_format = mixed #[&#x53EF;&#x9009;]&#x914D;&#x7F6E;&#x4E3A;&#x6DF7;&#x5408;&#x6A21;&#x5F0F; &#x6CE8;&#xFF1A;&#x914D;&#x7F6E;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x91CD;&#x542F;master&#x548C;slave&#x3002; &#x4E09;&#x3001;&#x6388;&#x6743;&#x548C;&#x590D;&#x5236;&#x914D;&#x7F6E;1&#x3001;&#x914D;&#x7F6E;Master1&#xFF09;&#x767B;&#x9646;Master&#x3002;1mysql -S /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock -u root -pmaster123456 2&#xFF09;&#x5728;Master&#x5EFA;&#x7ACB;&#x7528;&#x4E8E;&#x4E3B;&#x4ECE;&#x590D;&#x5236;&#x7684;&#x8D26;&#x53F7;&#x5E76;&#x6388;&#x6743;&#x3002;12CREATE USER &apos;repl_user&apos;@&apos;%&apos; IDENTIFIED BY &apos;repl_123456&apos;;GRANT REPLICATION SLAVE ON *.* TO &apos;repl_user&apos;@&apos;%&apos;; &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 3&#xFF09;&#x5BFC;&#x51FA;Master&#x7684;&#x6570;&#x636E;&#x5E93;&#x3002;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1mysqldump -S /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock -u root -pmaster123456 --master-data=2 --all-databases &gt; /home/nieyong/db19826.sql &#x8BF4;&#x660E;&#xFF1A; &#x2013;master-data=2 &#x8868;&#x793A;&#x8F93;&#x51FA;change master to &#x8BED;&#x53E5;&#x5E76;&#x5728;&#x524D;&#x9762;&#x52A0;&#x4E0A;&#x6CE8;&#x91CA;&#x7B26;(#)&#xFF0C;&#x5728;Slave&#x4E0A;&#x6267;&#x884C;change master to &#x65F6;&#x4F1A;&#x7528;&#x5230;&#x3002; 4&#xFF09;&#x67E5;&#x770B;Master&#x72B6;&#x6001;&#x3002;1show master status; &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 2&#x3001;&#x914D;&#x7F6E;Slave1&#xFF09;&#x767B;&#x9646;Slave&#x3002;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1mysql -S /home/nieyong/local/mysql-5543/data/data19836/tmp/mysql.sock -u root -pslave123456 2&#xFF09;&#x5BFC;&#x5165;&#x6570;&#x636E;&#x5E93;&#x3002;&#x5728;mysql&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1source /home/nieyong/db19826.sql 3&#xFF09;&#x67E5;&#x770B;Slave&#x72B6;&#x6001;&#x3002;&#x5728;mysql&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1show slave status; 4&#xFF09;&#x914D;&#x7F6E;&#x590D;&#x5236;&#x3002;&#x5728;mysql&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1234567change master to master_host=&apos;192.168.56.102&apos;, master_port=19826, master_user=&apos;repl_user&apos;, master_password=&apos;repl_123456&apos;, master_log_file=&apos;mysql-bin.000008&apos;, master_log_pos=107; &#x8BF4;&#x660E;&#xFF1A;db19826.sql&#x4E2D;&#x6709;&#x4E00;&#x884C;&#x5185;&#x5BB9;&#x8BB0;&#x5F55;&#x5BFC;&#x51FA;&#x6570;&#x636E;&#x65F6;bin log&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x53CA;&#x5176;&#x4F4D;&#x7F6E;&#x3002; 5&#xFF09;&#x542F;&#x52A8;Slave&#x7EBF;&#x7A0B;&#x3002;&#x5728;mysql&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1start slave; 6&#xFF09;&#x67E5;&#x770B;Slave&#x72B6;&#x6001;&#x3002;&#x5728;mysql&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1show slave status\\G mysql&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 192.168.56.102 Master_User: repl_user Master_Port: 19826 Connect_Retry: 60 Master_Log_File: mysql-bin.000008 Read_Master_Log_Pos: 107 Relay_Log_File: relay-bin.000002 Relay_Log_Pos: 253 Relay_Master_Log_File: mysql-bin.000008 Slave_IO_Running: Yes Slave_SQL_Running: Yes Replicate_Do_DB: Replicate_Ignore_DB: Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: Last_Errno: 0 Last_Error: Skip_Counter: 0 Exec_Master_Log_Pos: 107 Relay_Log_Space: 403 Until_Condition: None Until_Log_File: Until_Log_Pos: 0 Master_SSL_Allowed: No Master_SSL_CA_File: Master_SSL_CA_Path: Master_SSL_Cert: Master_SSL_Cipher: Master_SSL_Key: Seconds_Behind_Master: 0 Master_SSL_Verify_Server_Cert: No Last_IO_Errno: 0 Last_IO_Error: Last_SQL_Errno: 0 Last_SQL_Error: Replicate_Ignore_Server_Ids: Master_Server_Id: 26 1 row in set (0.00 sec) &#x6CE8;&#xFF1A;Slave_IO_Running&#x548C;Slave_SQL_Running&#x5FC5;&#x987B;&#x90FD;&#x662F;Yes&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x8BF4;&#x660E;&#x5B58;&#x5728;&#x9519;&#x8BEF;&#xFF0C;&#x4E3B;&#x4ECE;&#x540C;&#x6B65;&#x6CA1;&#x6709;&#x914D;&#x7F6E;&#x6210;&#x529F;&#x3002; &#x56DB;&#x3001;&#x9A8C;&#x8BC1;1&#x3001;&#x67E5;&#x770B;Master&#x7684;&#x8FDB;&#x7A0B;&#x5728;Master&#x7684;mysql&#x547D;&#x4EE4;&#x884C;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1show full processlist\\G 2&#x3001;&#x67E5;&#x770B;Slave&#x7684;&#x8FDB;&#x7A0B;&#x5728;Slave&#x7684;mysql&#x547D;&#x4EE4;&#x884C;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1show full processlist\\G 3&#x3001;&#x4E3B;&#x4ECE;&#x6570;&#x636E;&#x590D;&#x5236;&#x6821;&#x9A8C;1&#x3001;&#x5728;Master&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x8868;&#xFF0C;SQL&#x8BED;&#x53E5;&#x5982;&#x4E0B;&#xFF1A;12345678910CREATE TABLE account_cp( cp_id int PRIMARY KEY NOT NULL, cp_name varchar(50) NOT NULL, cp_status tinyint DEFAULT 0 NOT NULL, ctime bigint NOT NULL, creator varchar(20) NOT NULL, mtime bigint, modifier varchar(20)); &#x7136;&#x540E;&#x518D;&#x63D2;&#x5165;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#xFF1A;1insert into account_cp(cp_id, cp_name, cp_status, ctime, creator) values(1, &apos;&#x50B2;&#x98CE;&#x7684;&#x535A;&#x5BA2;&apos;, 0, 0, &apos;nieyong&apos;); 2&#x3001;&#x8FDB;&#x5165;Slave&#x67E5;&#x770B;&#xFF0C;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x65B0;&#x589E;&#x4E86;&#x4E00;&#x4E2A;&#x8868;account_cp&#xFF0C;&#x5E76;&#x4E14;&#x5B58;&#x5728;&#x4E00;&#x6761;&#x4E00;&#x6837;&#x7684;&#x8BB0;&#x5F55;&#x3002; &#x4E94;&#x3001;&#x53C2;&#x8003;&#x8D44;&#x6599; MySQL5.5&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x548C;&#x591A;&#x5B9E;&#x4F8B;&#x914D;&#x7F6E; How to Set Up Replication","categories":[{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/categories/数据库/"},{"name":"MySQL","slug":"数据库/MySQL","permalink":"http://aofeng.github.io/categories/数据库/MySQL/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://aofeng.github.io/tags/mysql/"},{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/tags/数据库/"},{"name":"主从复制","slug":"主从复制","permalink":"http://aofeng.github.io/tags/主从复制/"}],"keywords":[{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/categories/数据库/"},{"name":"MySQL","slug":"数据库/MySQL","permalink":"http://aofeng.github.io/categories/数据库/MySQL/"}]},{"title":"MySQL5.5-编译安装和多实例配置","slug":"MySQL5-5-编译安装和多实例配置","date":"2015-05-12T11:05:00.000Z","updated":"2016-11-07T04:02:18.000Z","comments":true,"path":"2015/05/12/MySQL5-5-编译安装和多实例配置/","link":"","permalink":"http://aofeng.github.io/2015/05/12/MySQL5-5-编译安装和多实例配置/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x73AF;&#x5883; &#x4E8C;&#x3001;&#x5B89;&#x88C5;MySQL &#x89E3;&#x538B; &#x7F16;&#x8BD1;&#x5B89;&#x88C5; &#x4E09;&#x3001;&#x591A;&#x5B9E;&#x4F8B;&#x914D;&#x7F6E; &#x7ED3;&#x6784;&#x8BF4;&#x660E; &#x914D;&#x7F6E;&#x5B9E;&#x4F8B;19826 &#x914D;&#x7F6E;&#x5B9E;&#x4F8B;19836 &#x56DB;&#x3001;&#x542F;&#x52A8;&#x5B9E;&#x4F8B; &#x4E94;&#x3001;&#x914D;&#x7F6E;&#x6743;&#x9650; &#x5B9E;&#x4F8B;19826 &#x5B9E;&#x4F8B;19836 &#x516D;&#x3001;&#x505C;&#x6B62;&#x5B9E;&#x4F8B; &#x5B9E;&#x4F8B;19826 &#x5B9E;&#x4F8B;19836 MySQL&#x6709;&#x591A;&#x79CD;&#x5B89;&#x88C5;&#x65B9;&#x5F0F;&#xFF1A;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x3001;&#x4E8C;&#x8FDB;&#x5236;&#x53D1;&#x5E03;&#x5305;&#x5B89;&#x88C5;&#x3002;&#x6211;&#x60F3;&#x5927;&#x5BB6;&#x7684;&#x7B2C;&#x4E00;&#x53CD;&#x5E94;&#x662F;&#x4F7F;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x5B89;&#x88C5;&#xFF0C;&#x9009;&#x62E9;&#x9488;&#x5BF9;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x53D1;&#x5E03;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x76F4;&#x63A5;&#x5B89;&#x88C5;&#x5C31;&#x884C;&#xFF0C;&#x6BD4;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x7B80;&#x5355;&#x5F97;&#x591A;&#x3002;&#x4F46;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x6709;&#x5B83;&#x7684;&#x597D;&#x5904;&#xFF1A; &#x53EF;&#x9488;&#x5BF9;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#xFF1B; &#x5B9A;&#x5236;&#x9700;&#x8981;&#x7684;&#x5F15;&#x64CE;&#xFF1B; &#x5B9A;&#x5236;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x53EF;&#x591A;&#x7248;&#x672C;&#x5E76;&#x5B58;; &#x5B9A;&#x5236;&#x5404;&#x79CD;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x3002; &#x90A3;&#x591A;&#x5B9E;&#x4F8B;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#x9014;&#x5462;&#xFF1F;&#x5728;&#x4E1A;&#x52A1;&#x65E9;&#x671F;&#xFF0C;&#x7CFB;&#x7EDF;&#x7684;&#x8BBF;&#x95EE;&#x91CF;&#x8F83;&#x5C0F;&#xFF0C;&#x8BB8;&#x591A;&#x6A21;&#x5757;&#x7684;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#x4E0D;&#x9891;&#x7E41;&#xFF0C;&#x4ECE;&#x8282;&#x7EA6;&#x6210;&#x672C;&#x7684;&#x89D2;&#x5EA6;&#x548C;&#x7CFB;&#x7EDF;&#x4EE5;&#x540E;&#x7684;&#x6269;&#x5C55;&#x6027;&#x8003;&#x8651;&#xFF0C;&#x4F1A;&#x5728;&#x4E00;&#x53F0;&#x7269;&#x7406;&#x673A;&#x4E2D;&#x90E8;&#x7F72;&#x591A;&#x4E2A;MySQL&#x5B9E;&#x4F8B;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x5757;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x5982;&#x679C;&#x5176;&#x4E2D;&#x67D0;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x8BFB;&#x5199;&#x91CF;&#x4E0D;&#x65AD;&#x4E0A;&#x5347;&#xFF0C;&#x5230;&#x8FBE;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x540E;&#x518D;&#x5C06;&#x5B83;&#x4F7F;&#x7528;&#x7684;&#x5B9E;&#x4F8B;&#x8FC1;&#x79FB;&#x81F3;&#x53E6;&#x5916;&#x7684;&#x670D;&#x52A1;&#x5668;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5728;&#x7814;&#x53D1;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x548C;&#x6D4B;&#x8BD5;&#x7684;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x4E2D;&#xFF0C;&#x90E8;&#x7F72;&#x7684;&#x73AF;&#x5883;&#x8981;&#x6A21;&#x62DF;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x7684;&#x67B6;&#x6784;&#xFF0C;&#x4E5F;&#x5F80;&#x5F80;&#x91C7;&#x7528;&#x5728;&#x540C;&#x4E00;&#x53F0;&#x7269;&#x7406;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x90E8;&#x7F72;&#x591A;&#x4E2A;MySQL&#x5B9E;&#x4F8B;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8FDB;&#x884C;&#x4E3B;&#x4ECE;&#x540C;&#x6B65;&#x3001;&#x4E3B;&#x4E3B;&#x540C;&#x6B65;&#x7684;&#x914D;&#x7F6E;&#x3002; &#x4E00;&#x3001;&#x73AF;&#x5883; RedHat 5.x / CentOS 5.x GCC 4.1.2 &#x4E8C;&#x3001;&#x5B89;&#x88C5;MySQL&#x89E3;&#x538B;1tar -C build -zxvf mysql-5.5.43.tar.gz &#x7F16;&#x8BD1;&#x5B89;&#x88C5;1&#x3001;&#x914D;&#x7F6E;&#x3002;1cmake -DCMAKE_INSTALL_PREFIX=/home/nieyong/local/mysql-5543 -DWITH_EXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=1 -DMYSQL_UNIX_ADDR=/home/nieyong/local/mysql-5543/mysql-5543.sock -DMYSQL_TCP_PORT=3306 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DWITH_CSV_STORAGE_ENGINE=1 -DWITH_HEAP_STORAGE_ENGINE=1 -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_MYISAMMRG_STORAGE_ENGINE=1 -DWITH_NDB_STORAGE_ENGINE=1 -DWITH_NDB_TEST=ON -DWITH_READLINE=1 2&#x3001;&#x751F;&#x6210;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002;1make 3&#x3001;&#x5B89;&#x88C5;&#x5230;&#x6307;&#x5B9A;&#x76EE;&#x5F55;&#x3002;1make install &#x4E09;&#x3001;&#x591A;&#x5B9E;&#x4F8B;&#x914D;&#x7F6E;&#x8BF4;&#x660E;&#xFF1A;&#x521B;&#x5EFA;&#x4E24;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x5B9E;&#x4F8B;1&#x4F7F;&#x7528;&#x7AEF;&#x53E3;19826&#xFF0C;&#x5B9E;&#x4F8B;2&#x4F7F;&#x7528;&#x7AEF;&#x53E3;19836&#x3002; &#x7ED3;&#x6784;&#x8BF4;&#x660E; &#x8BF4;&#x660E;&#xFF1A; data - &#x5B58;&#x653E;&#x6570;&#x636E;&#x6587;&#x4EF6;&#xFF1A;&#x6570;&#x636E;&#xFF0C;&#x7D22;&#x5F15;&#xFF0C;&#x4E8C;&#x8FDB;&#x5236;&#x65E5;&#x5FD7;&#xFF08;bin log&#xFF09;&#xFF0C;&#x91CD;&#x653E;&#x65E5;&#x5FD7;&#xFF08;replay log&#xFF09;&#x3002; log - &#x5B58;&#x653E;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#xFF1A;&#x6162;&#x67E5;&#x8BE2;&#x65E5;&#x5FD7;&#xFF0C;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#x3002; tmp - &#x5B58;&#x653E;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF1A;&#x8FDB;&#x7A0B;ID&#x6587;&#x4EF6;&#x3002; my.cnf - &#x5B9E;&#x4F8B;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002; &#x914D;&#x7F6E;&#x5B9E;&#x4F8B;198261&#x3001;&#x65B0;&#x5EFA;&#x76EE;&#x5F55;&#x3002;1234cd $MySQL_DATA_DIRmkdir data19826cd data19826mkdir data log tmp 2&#x3001;&#x521B;&#x5EFA;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x8FDB;&#x5165;&#x76EE;&#x5F55;$MySQL_DATA_DIR/data19826&#xFF0C;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;my.cnf&#x3002;&#x5185;&#x5BB9;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748[client]default-character-set = utf8port = 19826socket = /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock[mysqld]server-id = 1collation-server = utf8_unicode_ciinit-connect = &apos;SET NAMES utf8&apos;character-set-server = utf8port = 19826socket = /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sockdatadir = /home/nieyong/local/mysql-5543/data/data19826/data/log-error = /home/nieyong/local/mysql-5543/data/data19826/log/mysql.errpid-file = /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.pidskip-external-lockingkey_buffer_size = 16Mmax_allowed_packet = 1Mtable_open_cache = 64sort_buffer_size = 512Knet_buffer_length = 8Kread_buffer_size = 256Kread_rnd_buffer_size = 512Kmyisam_sort_buffer_size = 8Mlog-bin = /home/nieyong/local/mysql-5543/data/data19826/data/mysql-binrelay_log = /home/nieyong/local/mysql-5543/data/data19826/data/relay-binbinlog_format = mixedslow_query_log = 1slow_query_log_file = /home/nieyong/local/mysql-5543/data/data19826/log/slowquery.loglong_query_time = 1general_log = offgeneral_log_file = /home/nieyong/local/mysql-5543/data/data19826/log/general.log[mysqldump]quickmax_allowed_packet = 16M[mysql]no-auto-rehash[myisamchk]key_buffer_size = 20Msort_buffer_size = 20Mread_buffer = 2Mwrite_buffer = 2M[mysqlhotcopy]interactive-timeout 3&#x3001;&#x521D;&#x59CB;&#x5316;&#x5B9E;&#x4F8B;&#xFF0C;&#x751F;&#x6210;MySQL&#x7CFB;&#x7EDF;&#x6570;&#x636E;&#x5E93;&#x4FE1;&#x606F;&#x3002;&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1./scripts/mysql_install_db --basedir=/home/nieyong/local/mysql-5543 --defaults-file=/home/nieyong/local/mysql-5543/data/data19826/my.cnf --user=nieyong MySQL&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF1A; Installing MySQL system tables... 150512 16:41:35 [Note] /home/nieyong/local/mysql-5543/bin/mysqld (mysqld 5.5.43-log) starting as process 27522 ... OK Filling help tables... 150512 16:41:36 [Note] /home/nieyong/local/mysql-5543/bin/mysqld (mysqld 5.5.43-log) starting as process 27528 ... OK &#x3002;&#x3002;&#x3002; &#x3002;&#x3002;&#x3002; &#x914D;&#x7F6E;&#x5B9E;&#x4F8B;198361&#x3001;&#x65B0;&#x5EFA;&#x76EE;&#x5F55;&#x3002;1234cd $MySQL_DATA_DIRmkdir data19836cd data19836mkdir data log tmp 2&#x3001;&#x521B;&#x5EFA;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x5C06;\\$MySQL_DATA_DIR/data19826/my.cnf&#x590D;&#x5236;&#x5230;&#x76EE;&#x5F55;\\$MySQL_DATA_DIR/data19836&#x4E0B;&#xFF0C;&#x5C06;&#x5185;&#x5BB9;&#x4E2D;&#x6240;&#x6709;&#x7684;19826&#x90FD;&#x6539;&#x6210;19836&#x3002; 3&#x3001;&#x521D;&#x59CB;&#x5316;&#x5B9E;&#x4F8B;&#xFF0C;&#x751F;&#x6210;MySQL&#x7CFB;&#x7EDF;&#x6570;&#x636E;&#x5E93;&#x4FE1;&#x606F;&#x3002;&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1./scripts/mysql_install_db --basedir=/home/nieyong/local/mysql-5543 --defaults-file=/home/nieyong/local/mysql-5543/data/data19836/my.cnf --user=nieyong &#x56DB;&#x3001;&#x542F;&#x52A8;&#x5B9E;&#x4F8B;1&#x3001;&#x542F;&#x52A8;&#x5B9E;&#x4F8B;19826&#x3002;&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1./bin/mysqld_safe --defaults-file=/home/nieyong/local/mysql-5543/data/data19826/my.cnf &amp; 2&#x3001;&#x542F;&#x52A8;&#x5B9E;&#x4F8B;19836&#x3002;&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1./bin/mysqld_safe --defaults-file=/home/nieyong/local/mysql-5543/data/data19836/my.cnf &amp; 3&#x3001;&#x67E5;&#x770B;MySQL&#x5404;&#x5B9E;&#x4F8B;&#x8FDB;&#x7A0B;&#x4FE1;&#x606F;&#x3002;&#x5728;&#x7EC8;&#x7AEF;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1ps -ef | grep mysqld | grep -v grep &#x7CFB;&#x7EDF;&#x663E;&#x793A;&#x5982;&#x4E0B;&#x8FDB;&#x7A0B;&#x4FE1;&#x606F;&#xFF1A; nieyong 28452 26805 0 17:34 pts/2 00:00:00 /bin/sh ./bin/mysqld_safe --defaults-file=/home/nieyong/local/mysql-5543/data/data19826/my.cnf nieyong 28857 28452 0 17:34 pts/2 00:00:00 /home/nieyong/local/mysql-5543/bin/mysqld --defaults-file=/home/nieyong/local/mysql-5543/data/data19826/my.cnf --basedir=/home/nieyong/local/mysql-5543 --datadir=/home/nieyong/local/mysql-5543/data/data19826/data/ --plugin-dir=/home/nieyong/local/mysql-5543/lib/plugin --log-error=/home/nieyong/local/mysql-5543/data/data19826/log/mysql.err --pid-file=/home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.pid --socket=/home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock --port=19826 nieyong 28886 26805 0 17:36 pts/2 00:00:00 /bin/sh ./bin/mysqld_safe --defaults-file=/home/nieyong/local/mysql-5543/data/data19836/my.cnf nieyong 29291 28886 0 17:36 pts/2 00:00:00 /home/nieyong/local/mysql-5543/bin/mysqld --defaults-file=/home/nieyong/local/mysql-5543/data/data19836/my.cnf --basedir=/home/nieyong/local/mysql-5543 --datadir=/home/nieyong/local/mysql-5543/data/data19836/data/ --plugin-dir=/home/nieyong/local/mysql-5543/lib/plugin --log-error=/home/nieyong/local/mysql-5543/data/data19836/log/mysql.err --pid-file=/home/nieyong/local/mysql-5543/data/data19836/tmp/mysql.pid --socket=/home/nieyong/local/mysql-5543/data/data19836/tmp/mysql.sock --port=19836 &#x4E94;&#x3001;&#x914D;&#x7F6E;&#x6743;&#x9650;&#x5B9E;&#x4F8B;198261&#x3001;&#x4FEE;&#x6539;&#x7684;root&#x7528;&#x6237;&#x7684;&#x5BC6;&#x7801;&#x5E76;&#x4E14;&#x9650;&#x5236;&#x53EA;&#x80FD;&#x672C;&#x673A;&#x767B;&#x9646;&#x3002;&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1./bin/mysqladmin -S /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock -u root -h &apos;localhost&apos; password &apos;new-password&apos; &#x6CE8;&#xFF1A;&#x5C06;new-password&#x66FF;&#x4EE3;&#x6210;&#x5B9E;&#x9645;&#x7684;&#x5BC6;&#x7801;&#x3002; 2&#x3001;&#x4F7F;&#x7528;root&#x7528;&#x6237;&#x767B;&#x9646;&#x3002;1./bin/mysql -S /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock -u root -p 3&#x3001;&#x67E5;&#x770B;&#x6570;&#x636E;&#x5E93;&#x4FE1;&#x606F;&#x3002;&#x5728;mysql&#x63D0;&#x793A;&#x7B26;&#x540E;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF1A;1show databases; &#x5B9E;&#x4F8B;198361&#x3001;&#x4FEE;&#x6539;root&#x7528;&#x6237;&#x7684;&#x5BC6;&#x7801;&#x5E76;&#x4E14;&#x9650;&#x5236;&#x53EA;&#x80FD;&#x672C;&#x673A;&#x767B;&#x9646;&#x3002;1./bin/mysqladmin -S /home/nieyong/local/mysql-5543/data/data19836/tmp/mysql.sock -u root -h &apos;localhost&apos; password &apos;new-password&apos; &#x6CE8;&#xFF1A;&#x5C06;new-password&#x66FF;&#x4EE3;&#x6210;&#x5B9E;&#x9645;&#x7684;&#x5BC6;&#x7801;&#x3002; &#x516D;&#x3001;&#x505C;&#x6B62;&#x5B9E;&#x4F8B;&#x5B9E;&#x4F8B;19826&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1./bin/mysqladmin -S /home/nieyong/local/mysql-5543/data/data19826/tmp/mysql.sock -u root -p shutdown &#x5B9E;&#x4F8B;19836&#x8FDB;&#x5165;MySQL&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1./bin/mysqladmin -S /home/nieyong/local/mysql-5543/data/data19836/tmp/mysql.sock -u root -p shutdown","categories":[{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/categories/数据库/"},{"name":"MySQL","slug":"数据库/MySQL","permalink":"http://aofeng.github.io/categories/数据库/MySQL/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://aofeng.github.io/tags/mysql/"},{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/tags/数据库/"}],"keywords":[{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/categories/数据库/"},{"name":"MySQL","slug":"数据库/MySQL","permalink":"http://aofeng.github.io/categories/数据库/MySQL/"}]},{"title":"HTTP缓存 - If-Modified-Since与Last-Modified","slug":"HTTP缓存-If-Modified-Since与Last-Modified","date":"2015-04-14T09:34:38.000Z","updated":"2016-11-07T04:56:56.000Z","comments":true,"path":"2015/04/14/HTTP缓存-If-Modified-Since与Last-Modified/","link":"","permalink":"http://aofeng.github.io/2015/04/14/HTTP缓存-If-Modified-Since与Last-Modified/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x5B9E;&#x4F8B; &#x9996;&#x6B21;&#x8BF7;&#x6C42;&#x4E0E;&#x54CD;&#x5E94; &#x672C;&#x5730;&#x6709;&#x7F13;&#x5B58;&#xFF0C;&#x6587;&#x6863;&#x5728;&#x670D;&#x52A1;&#x5668;&#x672A;&#x4FEE;&#x6539; &#x672C;&#x5730;&#x6709;&#x7F13;&#x5B58;&#xFF0C;&#x6587;&#x6863;&#x5728;&#x670D;&#x52A1;&#x5668;&#x6709;&#x4FEE;&#x6539; &#x5F53;&#x6D4F;&#x89C8;&#x5668;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x7684;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x8FC7;&#x671F;&#x6216;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x662F;&#x5426;&#x4E3A;&#x6700;&#x65B0;&#x7248;&#x672C;&#xFF0C;&#x5C31;&#x4F1A;&#x5411;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x6838;&#x5BF9;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x662F;Last-Modified&#x4E0E;If-Modified-Since&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#x3002; &#x5982;&#x679C;&#x81EA;&#x6307;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x4E4B;&#x540E;&#xFF0C;&#x6587;&#x6863;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x5C31;&#x8FD4;&#x56DE;&#x6587;&#x6863;&#x5185;&#x5BB9;&#x548C;&#x65B0;&#x7684;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x7528;&#x65B0;&#x7684;&#x6570;&#x636E;&#x8986;&#x76D6;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x3002; &#x5982;&#x679C;&#x6587;&#x6863;&#x6CA1;&#x6709;&#x53D8;&#x5316;&#xFF0C;&#x8FD4;&#x56DE;304 Not Modified&#xFF0C;&#x53EA;&#x8FD4;&#x56DE;&#x4E00;&#x4E9B;&#x9700;&#x8981;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x66F4;&#x65B0;&#x7684;Header&#x4FE1;&#x606F;&#x3002; &#x6CE8;&#xFF1A;&#x4E00;&#x4E9B;WEB&#x670D;&#x52A1;&#x5668;&#x5728;&#x5B9E;&#x73B0;&#x65F6;&#xFF0C;&#x53EA;&#x662F;&#x6BD4;&#x8F83;If-Modified-Since&#x4E0E;&#x6587;&#x6863;&#x7684;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#x662F;&#x5426;&#x4E00;&#x81F4;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x786E;&#x8BA4;&#x662F;&#x5426;&#x5728;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x4E4B;&#x540E;&#x4FEE;&#x6539;&#x8FC7;&#x3002; &#x5B9E;&#x4F8B;&#x9996;&#x6B21;&#x8BF7;&#x6C42;&#x4E0E;&#x54CD;&#x5E94;1&#xFF09;&#x6D4F;&#x89C8;&#x5668;&#x9996;&#x6B21;&#x8BBF;&#x95EE;&#x65F6;&#xFF0C;&#x8BF7;&#x6C42;&#x7684;Header&#x4E2D;&#x6CA1;&#x6709;If-Modified-Since&#x3002;2&#xFF09;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;200&#xFF0C;&#x54CD;&#x5E94;&#x7684;Header&#x4E2D;&#x8FD4;&#x56DE;&#x4E86;Last-Modified&#x5E76;&#x5B8C;&#x6574;&#x5730;&#x8FD4;&#x56DE;&#x4E86;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x3002; &#x672C;&#x5730;&#x6709;&#x7F13;&#x5B58;&#xFF0C;&#x6587;&#x6863;&#x5728;&#x670D;&#x52A1;&#x5668;&#x672A;&#x4FEE;&#x6539;1&#xFF09;&#x6D4F;&#x89C8;&#x5668;&#x518D;&#x6B21;&#x8BBF;&#x95EE;&#xFF0C;&#x8BF7;&#x6C42;&#x7684;Header&#x643A;&#x5E26;&#x4E86;If-Modified-Since&#xFF0C;&#x5176;&#x503C;&#x4E3A;&#x4E0A;&#x6B21;&#x54CD;&#x5E94;&#x7684;Last-Modified&#x7684;&#x65F6;&#x95F4;&#x3002;2&#xFF09;&#x6B64;&#x6587;&#x4EF6;&#x6CA1;&#x6709;&#x4FEE;&#x6539;&#x8FC7;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;304&#xFF0C;&#x54CD;&#x5E94;&#x7684;Body&#x4E3A;&#x7A7A;&#x3002; &#x672C;&#x5730;&#x6709;&#x7F13;&#x5B58;&#xFF0C;&#x6587;&#x6863;&#x5728;&#x670D;&#x52A1;&#x5668;&#x6709;&#x4FEE;&#x6539;1&#xFF09;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x3002;2&#xFF09;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x8BF7;&#x6C42;&#x7684;Header&#x643A;&#x5E26;If-Modified-Since&#x3002;3&#xFF09;&#x7531;&#x4E8E;&#x6587;&#x4EF6;&#x5DF2;&#x4FEE;&#x6539;&#x5E76;&#x4E14;&#x6BD4;If-Modified-Since&#x7684;&#x65F6;&#x95F4;&#x65B0;&#xFF0C;&#x56E0;&#x6B64;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;200&#xFF0C;&#x8FD4;&#x56DE;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5E76;&#x5728;&#x54CD;&#x5E94;&#x7684;Header&#x4E2D;&#x8FD4;&#x56DE;&#x4E86;Last-Modified&#xFF0C;&#x5176;&#x503C;&#x4E3A;&#x6587;&#x4EF6;&#x7684;&#x6700;&#x65B0;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"HTTP","slug":"编程/HTTP","permalink":"http://aofeng.github.io/categories/编程/HTTP/"}],"tags":[{"name":"http","slug":"http","permalink":"http://aofeng.github.io/tags/http/"},{"name":"cache","slug":"cache","permalink":"http://aofeng.github.io/tags/cache/"},{"name":"缓存","slug":"缓存","permalink":"http://aofeng.github.io/tags/缓存/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"HTTP","slug":"编程/HTTP","permalink":"http://aofeng.github.io/categories/编程/HTTP/"}]},{"title":"Python-使用python-memcache操作Memcached","slug":"Python-使用python-memcache操作Memcached","date":"2015-04-01T12:21:49.000Z","updated":"2016-11-08T01:54:06.000Z","comments":true,"path":"2015/04/01/Python-使用python-memcache操作Memcached/","link":"","permalink":"http://aofeng.github.io/2015/04/01/Python-使用python-memcache操作Memcached/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x5B89;&#x88C5; &#x7F16;&#x7A0B; &#x9884;&#x5907; Python 2.7 Memcached 1.4.x python-memcached-1.54 &#x5B89;&#x88C5;1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x5305;&#x3002;1wget http://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.54.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x7F29;&#x3002;1tar -zxvf python-memcached-1.54.tar.gz 3&#x3001;&#x5B89;&#x88C5;&#x3002;1python setup.py install &#x6CE8;&#xFF1A;&#x9700;&#x8981;root&#x6743;&#x9650; &#x7F16;&#x7A0B;123456789101112131415161718192021222324252627282930#coding:utf8import memcacheclass MemcachedClient(): &apos;&apos;&apos; python memcached &#x5BA2;&#x6237;&#x7AEF;&#x64CD;&#x4F5C;&#x793A;&#x4F8B; &apos;&apos;&apos; def __init__(self, hostList): self.__mc = memcache.Client(hostList); def set(self, key, value): result = self.__mc.set(&quot;name&quot;, &quot;NieYong&quot;) return result def get(self, key): name = self.__mc.get(&quot;name&quot;) return name def delete(self, key): result = self.__mc.delete(&quot;name&quot;) return resultif __name__ == &apos;__main__&apos;: mc = MemcachedClient([&quot;127.0.0.1:11511&quot;, &quot;127.0.0.1:11512&quot;]) key = &quot;name&quot; result = mc.set(key, &quot;NieYong&quot;) print &quot;set&#x7684;&#x7ED3;&#x679C;&#xFF1A;&quot;, result name = mc.get(key) print &quot;get&#x7684;&#x7ED3;&#x679C;&#xFF1A;&quot;, name result = mc.delete(key) print &quot;delete&#x7684;&#x7ED3;&#x679C;&#xFF1A;&quot;, result &#x6267;&#x884C;&#x811A;&#x672C;&#x7684;&#x7ED3;&#x679C;: set&#x7684;&#x7ED3;&#x679C;&#xFF1A; Trueget&#x7684;&#x7ED3;&#x679C;&#xFF1A; NieYongdelete&#x7684;&#x7ED3;&#x679C;&#xFF1A; 1","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Python","slug":"编程/Python","permalink":"http://aofeng.github.io/categories/编程/Python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://aofeng.github.io/tags/python/"},{"name":"memcached","slug":"memcached","permalink":"http://aofeng.github.io/tags/memcached/"},{"name":"nosql","slug":"nosql","permalink":"http://aofeng.github.io/tags/nosql/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Python","slug":"编程/Python","permalink":"http://aofeng.github.io/categories/编程/Python/"}]},{"title":"Python - 使用Connector/Python操作MySQL","slug":"Python-使用Connector-Python操作MySQL","date":"2015-03-20T12:47:15.000Z","updated":"2016-11-08T01:53:36.000Z","comments":true,"path":"2015/03/20/Python-使用Connector-Python操作MySQL/","link":"","permalink":"http://aofeng.github.io/2015/03/20/Python-使用Connector-Python操作MySQL/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x5B89;&#x88C5; &#x7F16;&#x7801; &#x95EE;&#x9898; umask&#x5BFC;&#x81F4;&#x7684;&#x95EE;&#x9898; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x9884;&#x5907; Python 2.7 Connector/Python 2.1.1 &#x5B89;&#x88C5;1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x5305;&#x3002;1wget http://dev.mysql.com/get/Downloads/Connector-Python/mysql-connector-python-2.1.1.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x7F29;&#x3002;1tar -zxvf mysql-connector-python-2.1.1.tar.gz 3&#x3001;&#x5B89;&#x88C5;&#x3002;1python setup.py install &#x6CE8;&#xFF1A;&#x9700;&#x8981;root&#x6743;&#x9650; &#x7F16;&#x7801;123456789101112131415161718192021222324252627282930#coding:utf8# &#x4F7F;&#x7528; Connector/Python &#x8FDB;&#x884C;&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;&#x3002;import mysql.connector# &#x521B;&#x5EFA;&#x8FDE;&#x63A5;config = { &apos;user&apos;:&apos;uzone&apos;, &apos;password&apos;:&apos;uzone&apos;, &apos;host&apos;:&apos;127.0.0.1&apos;, &apos;port&apos;:19816, &apos;database&apos;:&apos;ucgc_sdk&apos;}conn = mysql.connector.connect(**config)# &#x521B;&#x5EFA;&#x6E38;&#x6807;cur = conn.cursor()# &#x6267;&#x884C;&#x67E5;&#x8BE2;SQLsql = &quot;SELECT notice_id,notice_name,creator,ctime,modifier,mtime FROM notice&quot;cur.execute(sql)# &#x83B7;&#x53D6;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;result_set = cur.fetchall()if result_set: for row in result_set: print &quot;%d, %s, %s, %d, %s, %s&quot; % (row[0],row[1],row[2],row[3],row[4],row[5])# &#x5173;&#x95ED;&#x6E38;&#x6807;&#x548C;&#x8FDE;&#x63A5; cur.close()conn.close() &#x95EE;&#x9898;umask&#x5BFC;&#x81F4;&#x7684;&#x95EE;&#x9898;&#x6211;&#x7684;&#x5F00;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x9ED8;&#x8BA4;&#x7684;umask&#x8BBE;&#x7F6E;&#x4E3A;0037&#xFF0C;&#x7ED3;&#x679C;&#x5B89;&#x88C5;&#x540E;&#xFF0C;&#x5728;root&#x7528;&#x6237;&#x4E0B;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x5730;&#x4F7F;&#x7528;mysql.connector&#x6A21;&#x5757;&#xFF0C;&#x4F46;&#x662F;&#x5207;&#x6362;&#x81F3;&#x5176;&#x4ED6;&#x7684;&#x666E;&#x901A;&#x8D26;&#x53F7;&#x65F6;&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;ImportError: No module named mysql.connector &#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#xFF1A;&#x5728;&#x6267;&#x884C;python setup.py install&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x6267;&#x884C;umask 0022&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599; Installing Connector/Python from a Source Distribution Connecting to MySQL Using Connector/Python","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Python","slug":"编程/Python","permalink":"http://aofeng.github.io/categories/编程/Python/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://aofeng.github.io/tags/mysql/"},{"name":"python","slug":"python","permalink":"http://aofeng.github.io/tags/python/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Python","slug":"编程/Python","permalink":"http://aofeng.github.io/categories/编程/Python/"}]},{"title":"TCP/IP-三次握手和四次挥手","slug":"TCP-IP-三次握手和四次挥手","date":"2015-03-03T07:53:07.000Z","updated":"2016-11-07T08:00:14.000Z","comments":true,"path":"2015/03/03/TCP-IP-三次握手和四次挥手/","link":"","permalink":"http://aofeng.github.io/2015/03/03/TCP-IP-三次握手和四次挥手/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF08;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF09; &#x4E3A;&#x4EC0;&#x4E48;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x8981;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF1F; &#x4E09;&#x6B21;&#x63E1;&#x624B;&#x5B58;&#x5728;&#x7684;&#x98CE;&#x9669; &#x4E8C;&#x3001;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF08;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF09; &#x4E3A;&#x4EC0;&#x4E48;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x8981;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF1F; &#x4E09;&#x3001;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x548C;&#x56DB;&#x6B21;&#x6325;&#x624B;&#x72B6;&#x6001;&#x626D;&#x8F6C; &#x5728;&#x65E5;&#x5E38;&#x5206;&#x6790;&#x548C;&#x5B9A;&#x4F4D;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x7684;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x7ECF;&#x5E38;&#x4F1A;&#x78B0;&#x5230;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x7F51;&#x7EDC;&#x95EE;&#x9898;&#xFF0C;&#x67E5;&#x770B;&#x5E94;&#x7528;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#x4E0A;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x91CF;&#x3001;&#x5404;&#x79CD;&#x72B6;&#x6001;&#x7684;&#x8FDE;&#x63A5;&#x6570;&#x91CF;&#x5206;&#x5E03;&#x6210;&#x4E3A;&#x5E38;&#x7528;&#x7684;&#x624B;&#x6BB5;&#x4E4B;&#x4E00;&#x3002;&#x4F46;&#x4E00;&#x4E9B;&#x540C;&#x5B66;&#x770B;&#x4E0D;&#x61C2;&#x4F7F;&#x7528;netstat&#x8FC7;&#x6EE4;&#x51FA;&#x6765;&#x7684;&#x5404;&#x79CD;&#x72B6;&#x6001;&#x662F;&#x4EC0;&#x4E48;&#x542B;&#x4E49;&#x4EE5;&#x53CA;&#x5404;&#x79CD;&#x72B6;&#x6001;&#x7684;&#x8FDE;&#x63A5;&#x6570;&#x91CF;&#x5206;&#x5E03;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x3002;&#x5176;&#x5B9E;&#x53EA;&#x8981;&#x5F04;&#x61C2;&#x4E86;TCP/IP&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF08;&#x5373;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF09;&#x548C;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF08;&#x5373;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF09;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x95EE;&#x9898;&#x8FCE;&#x5203;&#x800C;&#x89E3;&#x3002; &#x4E00;&#x3001;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF08;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF09; &#x7B2C;&#x4E00;&#x6B21;&#x63E1;&#x624B;&#xFF1A;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x65F6;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;SYN&#xFF08;seq=x&#xFF09;&#x5305;&#x5230;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5E76;&#x8FDB;&#x5165;SYN_SENT&#x72B6;&#x6001;&#xFF0C;&#x7B49;&#x5F85;&#x670D;&#x52A1;&#x5668;&#x7684;&#x786E;&#x8BA4;&#x3002;SYN&#xFF1A;&#x540C;&#x6B65;&#x5E8F;&#x5217;&#x7F16;&#x53F7;&#xFF08;Synchronize Sequence Numbers&#xFF09;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x63E1;&#x624B;&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;SYN&#x5305;&#xFF0C;&#x5FC5;&#x987B;&#x786E;&#x8BA4;&#x5BA2;&#x6237;&#x7684;SYN&#xFF08;ack=x+1&#xFF09;&#xFF0C;&#x540C;&#x65F6;&#x81EA;&#x5DF1;&#x4E5F;&#x53D1;&#x9001;&#x4E00;&#x4E2A;SYN&#x5305;&#xFF08;seq=y&#xFF09;&#xFF0C;&#x5373;&#x53D1;&#x9001;SYN+ACK&#x5305;&#xFF0C;&#x6B64;&#x65F6;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x5165;SYN_RECV&#x72B6;&#x6001;&#xFF1B; &#x7B2C;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x6536;&#x5230;SYN+ACK&#x5305;&#xFF0C;&#x5411;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;ACK(ack=y+1&#xFF09;&#x5305;&#xFF0C;&#x6B64;&#x5305;&#x53D1;&#x9001;&#x5B8C;&#x6BD5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x5165;ESTABLISHED&#x72B6;&#x6001;&#xFF0C;&#x5B8C;&#x6210;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x3002; &#x5B8C;&#x6210;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x5F00;&#x59CB;&#x4F20;&#x9001;&#x6570;&#x636E;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x901A;&#x8FC7;Wirkshark&#x6293;&#x5305;&#x5F97;&#x5230;&#x7684;TCP/IP&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x7684;&#x6570;&#x636E;&#x5305;&#x622A;&#x56FE;&#xFF1A; &#x8BF4;&#x660E;&#xFF1A; 10.0.2.15&#x662F;&#x5EFA;&#x7ACB;&#x8BF7;&#x6C42;&#x7684;&#x53D1;&#x8D77;&#x65B9;&#xFF08;&#x5373;&#x5BA2;&#x6237;&#x7AEF;&#xFF09;&#x3002; 42.121.252.58&#x662F;&#x5EFA;&#x7ACB;&#x8BF7;&#x6C42;&#x7684;&#x63A5;&#x6536;&#x65B9;&#xFF08;&#x5373;&#x670D;&#x52A1;&#x7AEF;&#xFF09;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x8981;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF1F;&#x76EE;&#x7684;&#xFF1A; &#x9632;&#x6B62;&#x5DF2;&#x7ECF;&#x5931;&#x6548;&#x7684;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x5230;&#x8FBE;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x521B;&#x5EFA;&#x65E0;&#x6548;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x6D6A;&#x8D39;&#x8D44;&#x6E90;&#x3002;&#x8BF4;&#x660E;&#xFF1A; &#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x5728;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#x88AB;&#x6EDE;&#x7559;&#x4E86;&#xFF08;&#x7F51;&#x7EDC;&#x4F1A;&#x5B58;&#x5728;&#x8BB8;&#x591A;&#x4E0D;&#x53EF;&#x9760;&#x7684;&#x56E0;&#x7D20;&#xFF09;&#xFF0C;&#x8FC7;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#x7A81;&#x7136;&#x53C8;&#x5230;&#x8FBE;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x8BEF;&#x4EE5;&#x4E3A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x4F1A;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x786E;&#x8BA4;&#x5305;&#x5E76;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#x5BA2;&#x6237;&#x7AEF;&#x5F53;&#x524D;&#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x51FA;&#x521B;&#x5EFA;&#x8FDE;&#x63A5;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x4F1A;&#x4E22;&#x5F03;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x786E;&#x8BA4;&#x5305;&#x3002;&#x800C;&#x670D;&#x52A1;&#x7AEF;&#x5374;&#x521B;&#x5EFA;&#x4E86;&#x8FDE;&#x63A5;&#x5E76;&#x7B49;&#x5F85;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x6D6A;&#x8D39;&#x4E86;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x3002; &#x4E09;&#x6B21;&#x63E1;&#x624B;&#x5B58;&#x5728;&#x7684;&#x98CE;&#x9669;&#x653B;&#x51FB;&#x65B9;&#x4F2A;&#x9020;IP&#x5730;&#x5740;&#x53D1;&#x9001;&#x5927;&#x91CF;&#x7684;SYN&#x5305;&#xFF0C;&#x4F7F;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x9001;&#x7684;SYN+ACK&#x5305;&#x5F97;&#x4E0D;&#x5230;&#x786E;&#x8BA4;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5C06;&#x4E3A;&#x4E86;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5927;&#x7684;&#x534A;&#x8FDE;&#x63A5;&#x5217;&#x8868;&#x800C;&#x6D88;&#x8017;&#x975E;&#x5E38;&#x591A;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5931;&#x53BB;&#x54CD;&#x5E94;&#xFF0C;&#x5373;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53D7;&#x5230;&#x4E86;SYN Flood&#x653B;&#x51FB;&#x3002; &#x4E8C;&#x3001;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF08;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF09; &#x6CE8;&#xFF1A;&#x6325;&#x624B;&#x52A8;&#x4F5C;&#x53EF;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x6216;&#x670D;&#x52A1;&#x5668;&#x4EFB;&#x610F;&#x4E00;&#x65B9;&#x53D1;&#x8D77;&#x3002; &#x7B2C;&#x4E00;&#x6B21;&#x6325;&#x624B;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;FIN+ACK&#x5305;&#xFF08;&#x5E8F;&#x53F7;&#x4E3A;seq=a&#xFF0C;&#x786E;&#x8BA4;&#x5E8F;&#x53F7;ack=b&#xFF09;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x7528;&#x6765;&#x5173;&#x95ED;&#x5BA2;&#x6237;&#x7AEF;&#x5230;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x6570;&#x636E;&#x4F20;&#x9001;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8FDB;&#x5165;FIN_WAIT_1&#x72B6;&#x6001;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x6325;&#x624B;&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;FIN+ACK&#x5305;&#x540E;&#xFF0C;&#x53D1;&#x9001;ACK&#x5305;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x8FDB;&#x884C;&#x786E;&#x8BA4;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x8FDB;&#x5165;CLOSE_WAIT&#x72B6;&#x6001;&#x3002;&#x5BA2;&#x6237;&#x7AEF;&#x6536;&#x5230;ACK&#x5305;&#x540E;&#x8FDB;&#x5165;FIN_WAIT_2&#x72B6;&#x6001;&#x3002;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5173;&#x95ED;&#x4E00;&#x4E2A;&#x5355;&#x5411;&#x901A;&#x9053;&#x3002; &#x7B2C;&#x4E09;&#x6B21;&#x6325;&#x624B;&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x9001;FIN+ACK&#x5305;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x8FDB;&#x5165;LAST_ACK&#x72B6;&#x6001;&#x3002; &#x7B2C;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x6536;&#x5230;FIN+ACK&#x5305;&#x540E;&#xFF0C;&#x53D1;&#x9001;ACK&#x5305;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#x8FDB;&#x884C;&#x786E;&#x8BA4;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8FDB;&#x5165;TIME_WAIT&#x72B6;&#x6001;&#xFF0C;&#x5728;&#x7B49;&#x5F85;30&#x79D2;&#xFF08;&#x53EF;&#x4FEE;&#x6539;&#xFF09;&#x540E;&#x8FDB;&#x5165;CLOSED&#x72B6;&#x6001;&#x3002;&#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;ACK&#x5305;&#x540E;&#x8FDB;&#x5165;CLOSED&#x72B6;&#x6001;&#xFF0C;&#x5173;&#x95ED;&#x53E6;&#x4E00;&#x4E2A;&#x5355;&#x5411;&#x901A;&#x9053;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x901A;&#x8FC7;Wirkshark&#x6293;&#x5305;&#x5F97;&#x5230;&#x7684;TCP/IP&#x56DB;&#x6B21;&#x6325;&#x624B;&#x7684;&#x6570;&#x636E;&#x5305;&#x622A;&#x56FE;&#xFF1A; &#x8BF4;&#x660E;&#xFF1A; 42.121.252.58&#x662F;&#x5173;&#x95ED;&#x8BF7;&#x6C42;&#x7684;&#x53D1;&#x8D77;&#x65B9;&#xFF08;&#x5373;&#x5BA2;&#x6237;&#x7AEF;&#xFF09;&#x3002; 10.0.2.15&#x662F;&#x5173;&#x95ED;&#x8BF7;&#x6C42;&#x7684;&#x63A5;&#x6536;&#x65B9;&#xFF08;&#x5373;&#x670D;&#x52A1;&#x7AEF;&#xFF09;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x8981;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF1F;TCP&#x662F;&#x5168;&#x53CC;&#x5DE5;&#x901A;&#x9053;&#xFF0C;&#x4E00;&#x65B9;&#x53D1;&#x8D77;&#x5173;&#x95ED;&#x8BF7;&#x6C42;&#x53EA;&#x5173;&#x95ED;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x901A;&#x9053;&#xFF0C;&#x6240;&#x4EE5;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x7684;&#x53CC;&#x65B9;&#x90FD;&#x8981;&#x53D1;&#x8D77;&#x5173;&#x95ED;&#x8BF7;&#x6C42;&#x5E76;&#x786E;&#x8BA4;&#x6765;&#x5173;&#x95ED;&#x5404;&#x81EA;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x901A;&#x9053;&#x3002; &#x4E09;&#x3001;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x548C;&#x56DB;&#x6B21;&#x6325;&#x624B;&#x72B6;&#x6001;&#x626D;&#x8F6C;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"TCP/IP","slug":"编程/TCP-IP","permalink":"http://aofeng.github.io/categories/编程/TCP-IP/"}],"tags":[{"name":"tcp","slug":"tcp","permalink":"http://aofeng.github.io/tags/tcp/"},{"name":"ip","slug":"ip","permalink":"http://aofeng.github.io/tags/ip/"},{"name":"连接","slug":"连接","permalink":"http://aofeng.github.io/tags/连接/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"TCP/IP","slug":"编程/TCP-IP","permalink":"http://aofeng.github.io/categories/编程/TCP-IP/"}]},{"title":"在Windows中使用Putty+Xming在终端运行Linux GUI程序","slug":"在Windows中使用Putty-Xming在终端运行Linux-GUI程序","date":"2015-01-30T12:51:57.000Z","updated":"2016-11-07T08:34:29.000Z","comments":true,"path":"2015/01/30/在Windows中使用Putty-Xming在终端运行Linux-GUI程序/","link":"","permalink":"http://aofeng.github.io/2015/01/30/在Windows中使用Putty-Xming在终端运行Linux-GUI程序/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x73AF;&#x5883; &#x4E00;&#x3001;&#x5B89;&#x88C5;Xming &#x4E8C;&#x3001;&#x914D;&#x7F6E;Kitty / Putty &#x4E09;&#x3001;&#x914D;&#x7F6E;Linux&#x670D;&#x52A1;&#x5668; &#x56DB;&#x3001;&#x9A8C;&#x8BC1; FAQ 1&#x3001;&#x65E0;&#x6CD5;&#x8FDE;&#x63A5;Xming 2&#x3001;&#x65E0;&#x6CD5;&#x8F93;&#x5165;&#x4E2D;&#x6587; &#x4E4B;&#x524D;&#x5199;&#x8FC7;&#x4E00;&#x7BC7;&#x300A;&#x7528;X Window&#x5728;&#x7EC8;&#x7AEF;&#x8FD0;&#x884C;GUI&#x7A0B;&#x5E8F;&#x548C;&#x8FDC;&#x7A0B;&#x64CD;&#x4F5C;Linux&#x684C;&#x9762;&#x300B;&#xFF0C;&#x8BB2;&#x7684;&#x662F;&#x5728;Windows&#x4E0B;&#x4F7F;&#x7528;XManager&#x6765;&#x5728;&#x7EC8;&#x7AEF;&#x547D;&#x4EE4;&#x884C;&#x4E0A;&#x8FD0;&#x884C;SUSE Linux&#x4E0A;&#x7684;GUI&#x7A0B;&#x5E8F;&#xFF0C;&#x4F46;XManager&#x662F;&#x5546;&#x4E1A;&#x4ED8;&#x8D39;&#x8F6F;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5728;&#x5546;&#x4E1A;&#x73AF;&#x5883;&#xFF08;&#x516C;&#x53F8;&#xFF09;&#x4F7F;&#x7528;&#x7834;&#x89E3;&#x7248;&#x5B58;&#x5728;&#x6CD5;&#x5F8B;&#x98CE;&#x9669;&#x3002;&#x4E00;&#x76F4;&#x4F7F;&#x7528;Kitty / Putty&#x4F5C;&#x4E3A;SSH&#x5BA2;&#x6237;&#x7AEF;&#x6765;&#x767B;&#x9646;Linux&#x670D;&#x52A1;&#x5668;&#x6267;&#x884C;&#x6307;&#x4EE4;&#xFF0C;&#x4F46;&#x6709;&#x65F6;&#x8981;&#x6267;&#x884C;&#x4E00;&#x4E9B;GUI&#x7A0B;&#x5E8F;&#x53C8;&#x5F97;&#x5207;&#x6362;&#x5C4F;&#x5E55;&#x6253;&#x5F00;Linux&#x7684;&#x56FE;&#x5F62;&#x754C;&#x9762;&#xFF0C;&#x603B;&#x662F;&#x611F;&#x89C9;&#x8FD9;&#x6837;&#x4E0D;&#x592A;&#x987A;&#x7545;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x60F3;&#x5230;&#x4E86;x Windows&#x8FD9;&#x4E2A;&#x5229;&#x5668;&#x3002;&#x901A;&#x8FC7;Google&#x548C;Stackflow&#x627E;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x514D;&#x8D39;&#x7684;&#x66FF;&#x4EE3;XManager&#x7684;&#x8F6F;&#x4EF6;&#xFF0C;&#x6700;&#x540E;&#x9009;&#x62E9;Xming&#x3002; &#x73AF;&#x5883; WindowsXP (&#x5B89;&#x88C5;Xming, Putty) CentOS 6 / RedHat 6 (X11 Forward) &#x4E00;&#x3001;&#x5B89;&#x88C5;Xming1&#x3001;&#x4ECE;http://sourceforge.net/projects/xming/&#x4E0B;&#x8F7D;Xming 6.9&#x7248;&#x672C;&#x3002;2&#x3001;&#x53CC;&#x51FB;&#x201D;Xming-6-9-0-31-setup.exe&#x201D;&#x5F00;&#x59CB;&#x5B89;&#x88C5;&#x3002; &#x5B9A;&#x4E49;Xming&#x7684;&#x5B89;&#x88C5;&#x8DEF;&#x5F84;&#xFF1A; &#x8BBE;&#x7F6E;&#x662F;&#x5426;&#x5B89;&#x88C5;Putty&#x505A;&#x4E3A;SSH&#x5BA2;&#x6237;&#x7AEF;&#x3002;&#x56E0;&#x4E3A;&#x8981;&#x4E0E;&#x5DF2;&#x6709;&#x7684;Kitty / Putty&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x9009;&#x62E9;&#x201D;Don&#x2019;t install an SSH client&#x201D;&#xFF1A; &#x9009;&#x62E9;&#x5173;&#x8054;.xlaunch&#x6587;&#x4EF6;&#xFF1A; &#x5982;&#x679C;&#x52FE;&#x9009;&#x201D;Launch Xming&#x201D;&#x4F1A;&#x9ED8;&#x8BA4;Display Number&#x4E3A;0&#x3002; &#x4E8C;&#x3001;&#x914D;&#x7F6E;Kitty / Putty&#x4EE5;Kitty&#x4E3A;&#x4F8B;&#xFF0C;&#x9009;&#x62E9;&#x4E00;&#x4E2A;Session&#xFF0C;&#x9009;&#x62E9;&#x83DC;&#x5355;&#x9879;&#xFF1A;Connection -&gt; SSH -&gt; X11&#xFF0C;&#x52FE;&#x9009;Enable X11 forwarding&#xFF0C;&#x7136;&#x540E;&#x5728;X display location&#x4E2D;&#x586B;&#x5165;&#x201D;127.0.0.1:0&#x201D;&#x3002; &#x4E09;&#x3001;&#x914D;&#x7F6E;Linux&#x670D;&#x52A1;&#x5668;1&#x3001;&#x4EE5;root&#x8D26;&#x53F7;&#x767B;&#x9646;&#xFF0C;&#x7F16;&#x8F91;SSH&#x670D;&#x52A1;&#x5668;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;1vi /etc/ssh/sshd_config &#x5F00;&#x542F;TCP&#x8F6C;&#x53D1;&#x548C;X11&#x8F6C;&#x53D1;&#xFF1A;12AllowTcpForwarding yesX11Forwarding yes &#x56DB;&#x3001;&#x9A8C;&#x8BC1;1&#x3001;&#x6253;&#x5F00;Kitty&#x7684;Session&#xFF0C;&#x5728;&#x7EC8;&#x7AEF;&#x767B;&#x9646;Linux&#x3002; 2&#x3001;&#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;DISPLAY&#x3002;12DISPLAY=192.168.56.101:0.0export DISPLAY &#x8BF4;&#x660E;&#xFF1A; 192.168.56.101&#x4E3A;Windows&#x670D;&#x52A1;&#x5668;&#x7684;IP&#x5730;&#x5740;&#x3002; 0.0&#x8868;&#x793A;Xming&#x7684;display number&#x4E3A;0&#xFF0C;&#x5982;&#x679C;display number&#x8BBE;&#x7F6E;&#x6210;&#x5176;&#x4ED6;&#x503C;&#x9700;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002; 3&#x3001;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x6307;&#x4EE4;&#x542F;&#x52A8;eclipse&#xFF1A;1eclipse eclipse&#x542F;&#x8FD0;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5728;Windows&#x7684;&#x7A97;&#x53E3;&#x4F1A;&#x663E;&#x793A;&#x5982;&#x4E0B;&#x7684;&#x754C;&#x9762;&#xFF1A; FAQ1&#x3001;&#x65E0;&#x6CD5;&#x8FDE;&#x63A5;Xming&#x5982;&#x679C;&#x5728;&#x7EC8;&#x7AEF;&#x6267;&#x884C;&#x6307;&#x4EE4;&#x542F;&#x52A8;eclipse&#x65F6;&#x62A5;&#x9519;:Xlib: connection to &#x201C;192.168.56.101:0.0&#x201D; refused by serverXlib: No protocol specified &#x8BF4;&#x660E;Xming&#x7684;&#x6743;&#x9650;&#x8BBE;&#x7F6E;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x6253;&#x5F00;Xming&#x7684;&#x65E5;&#x5FD7;&#xFF1A; &#x4F1A;&#x53D1;&#x73B0;&#x6709;&#x7C7B;&#x4F3C;client 4 rejected From ip 192.168.56.102&#x7684;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF1A; 2&#x3001;&#x5728;&#x684C;&#x9762;&#x4E0A;&#x6253;&#x5F00;Xming&#x7684;&#x5FEB;&#x6377;&#x65B9;&#x5F0F;&#xFF0C;&#x5728;&#x76EE;&#x6807;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x52A0;&#x4E0A;-ac&#x7684;&#x53C2;&#x6570;&#xFF1A; 2&#x3001;&#x65E0;&#x6CD5;&#x8F93;&#x5165;&#x4E2D;&#x6587;1&#x3001;&#x5728;&#x542F;&#x52A8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E4B;&#x524D;&#xFF0C;&#x5728;&#x7EC8;&#x7AEF;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;&#x6211;&#x76EE;&#x524D;&#x7528;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x662F;scim&#xFF1A;1export GTK_IM_MODULE=scim &#x5982;&#x679C;&#x7528;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x662F;gcin&#xFF0C;&#x5219;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1export GTK_IM_MODULE=gcin 2&#x3001;&#x5728;&#x6253;&#x5F00;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x8F93;&#x5165;&#x4E2D;&#x6587;&#x4E86;&#xFF1A;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Windows","slug":"操作系统/Windows","permalink":"http://aofeng.github.io/categories/操作系统/Windows/"}],"tags":[{"name":"xwindow","slug":"xwindow","permalink":"http://aofeng.github.io/tags/xwindow/"},{"name":"xming","slug":"xming","permalink":"http://aofeng.github.io/tags/xming/"},{"name":"putty","slug":"putty","permalink":"http://aofeng.github.io/tags/putty/"},{"name":"gui","slug":"gui","permalink":"http://aofeng.github.io/tags/gui/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Windows","slug":"操作系统/Windows","permalink":"http://aofeng.github.io/categories/操作系统/Windows/"}]},{"title":"让KiTTY/Putty支持ZModem","slug":"让KiTTY-Putty支持ZModem","date":"2014-10-31T11:54:35.000Z","updated":"2016-11-07T08:44:08.000Z","comments":true,"path":"2014/10/31/让KiTTY-Putty支持ZModem/","link":"","permalink":"http://aofeng.github.io/2014/10/31/让KiTTY-Putty支持ZModem/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x4E0B;&#x8F7D;LePutty&#x3002; &#x4E8C;&#x3001;&#x83B7;&#x53D6;rz.exe&#x548C;sz.exe&#x3002; &#x4E09;&#x3001;&#x914D;&#x7F6E;KiTTY SecureCRT&#x652F;&#x6301;&#x7528;sz&#x548C;rz&#x547D;&#x4EE4;&#x5728;SSH&#x4F1A;&#x8BDD;&#x4E2D;&#x4E0A;&#x4F20;&#x548C;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x7528;KiTTY&#x548C;Putty&#x7684;&#x540C;&#x5B66;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;&#x5DF2;&#x7ECF;&#x6709;&#x4EBA;&#x63D0;&#x4F9B;&#x4E86;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5728;Putty&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x65B0;&#x505A;&#x4E86;&#x4E00;&#x4E2A;LePutty&#xFF0C;&#x652F;&#x6301;ZModem&#x534F;&#x8BAE;&#xFF0C;&#x65B0;&#x7248;&#x672C;&#x7684;KiTTY&#x4E5F;&#x652F;&#x6301;ZModem&#x3002; &#x4E00;&#x3001;&#x4E0B;&#x8F7D;LePutty&#x3002;&#x8FDB;&#x5165;LePutty&#x5B98;&#x7F51;&#xFF0C;&#x70B9;&#x51FB;&#x7EA2;&#x8272;&#x65B9;&#x6846;&#x4E0B;&#x8F7D;LePutty&#x3002; &#x4E8C;&#x3001;&#x83B7;&#x53D6;rz.exe&#x548C;sz.exe&#x3002;1&#x3001;&#x6253;&#x5F00;LePutty&#x7684;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x53EF;&#x770B;&#x5230;&#x91CC;&#x9762;&#x6709;&#x4E00;&#x4E2A;win32-lrzsz-*.zip&#x7684;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x3002; 2&#x3001;&#x6253;&#x5F00;win32-lrzsz-.zip&#xFF0C;&#x53EF;&#x770B;&#x5230;&#x91CC;&#x9762;&#x6709;sz.exe&#x548C;rz.exe&#x3002; 3&#x3001;&#x5C06;sz.exe&#x548C;rz.exe&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x3002; &#x4E09;&#x3001;&#x914D;&#x7F6E;KiTTY1&#x3001;&#x6253;&#x5F00;KiTTY&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A;%APPDATA%/KiTTY/kitty.ini&#xFF0C;&#x589E;&#x52A0;zmodem&#x652F;&#x6301;&#x3002;12[KiTTY]zmodem=yes 2&#x3001;&#x6253;&#x5F00;Session&#xFF0C;&#x627E;&#x5230;ZModem&#x9879;&#xFF0C;&#x5206;&#x522B;&#x586B;&#x5165;rz&#x548C;sz&#x547D;&#x4EE4;&#x7684;&#x5B8C;&#x6574;&#x5730;&#x5740;&#x3002; 3&#x3001;&#x6253;&#x5F00;Session&#xFF0C;&#x5728;&#x6807;&#x9898;&#x680F;&#x4E0A;&#x53F3;&#x952E;&#xFF0C;&#x6253;&#x5F00;&#x53F3;&#x952E;&#x83DC;&#x5355;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x51FA;&#x73B0;&#x4E86;&#x201D;Zmodem Receive&#x201D;&#x548C;&#x201D;Zmodem Upload&#x201D;&#x4E24;&#x4E2A;&#x83DC;&#x5355;&#x9879;&#x3002; &#xFF03; &#x56DB;&#x3001;&#x4F7F;&#x7528;ZModem&#x4E0A;&#x4F20;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6; 1&#x3001;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x3002;&#x8F93;&#x5165;&#x547D;&#x4EE4;sz &#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF0C;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;1sz ~/20150208-account.register-ucidlist.log &#x7136;&#x540E;&#x5728;KiTTY/Putty&#x7684;&#x6807;&#x9898;&#x680F;&#x53F3;&#x952E;, &#x9009;&#x62E9;Zmodem Receive &#x3002; 2&#x3001;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#x3002;&#x8F93;&#x5165;&#x547D;&#x4EE4;rz&#xFF0C;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;1rz &#x7136;&#x540E;&#x5728;KiTTY/Putty&#x7684;&#x6807;&#x9898;&#x680F;&#x53F3;&#x952E;, &#x9009;&#x62E9;Zmodem Upload &#x3002;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Windows","slug":"操作系统/Windows","permalink":"http://aofeng.github.io/categories/操作系统/Windows/"}],"tags":[{"name":"putty","slug":"putty","permalink":"http://aofeng.github.io/tags/putty/"},{"name":"kitty","slug":"kitty","permalink":"http://aofeng.github.io/tags/kitty/"},{"name":"ssh","slug":"ssh","permalink":"http://aofeng.github.io/tags/ssh/"},{"name":"zmodem","slug":"zmodem","permalink":"http://aofeng.github.io/tags/zmodem/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Windows","slug":"操作系统/Windows","permalink":"http://aofeng.github.io/categories/操作系统/Windows/"}]},{"title":"Linux-用less命令让man帮助手册彩色显示","slug":"Linux-用less命令让man帮助手册彩色显示","date":"2014-09-12T05:54:54.000Z","updated":"2016-11-07T08:53:14.000Z","comments":true,"path":"2014/09/12/Linux-用less命令让man帮助手册彩色显示/","link":"","permalink":"http://aofeng.github.io/2014/09/12/Linux-用less命令让man帮助手册彩色显示/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x73AF;&#x5883; | Environment &#x914D;&#x7F6E; | Steps &#x5728;Linux&#x4E2D;&#xFF0C;&#x6267;&#x884C;man &#x547D;&#x4EE4;&#x4F1A;&#x663E;&#x793A;&#x8BE5;&#x547D;&#x4EE4;&#x7684;&#x8BE6;&#x7EC6;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x9ED8;&#x8BA4;&#x7684;&#x9ED1;&#x5E95;&#x767D;&#x5B57;&#x770B;&#x8D77;&#x6765;&#x4E0D;&#x662F;&#x5F88;&#x8212;&#x670D;&#xFF0C;&#x5C06;&#x4E0D;&#x540C;&#x7684;&#x5173;&#x952E;&#x5B57;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x989C;&#x8272;&#x663E;&#x793A;&#x6709;&#x52A9;&#x4E8E;&#x9605;&#x8BFB;&#xFF0C;&#x65B9;&#x4FBF;&#x5FEB;&#x901F;&#x5B9A;&#x4F4D;&#x6240;&#x9700;&#x5185;&#x5BB9;&#x3002; &#x73AF;&#x5883; | Environment CentOS 5.x / Redhat 5.x &#x914D;&#x7F6E; | Steps1&#x3001;&#x6253;&#x5F00;&#x7528;&#x6237;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;1vi ~/.bash_profile 2&#x3001;&#x589E;&#x52A0;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#x3002;12345678# &#x5F69;&#x8272;man pagesexport LESS_TERMCAP_mb=$&apos;\\E[01;31m&apos;export LESS_TERMCAP_md=$&apos;\\E[01;31m&apos;export LESS_TERMCAP_me=$&apos;\\E[0m&apos;export LESS_TERMCAP_se=$&apos;\\E[0m&apos;export LESS_TERMCAP_so=$&apos;\\E[01;44;33m&apos;export LESS_TERMCAP_ue=$&apos;\\E[0m&apos;export LESS_TERMCAP_us=$&apos;\\E[01;32m&apos;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"less","slug":"less","permalink":"http://aofeng.github.io/tags/less/"},{"name":"man","slug":"man","permalink":"http://aofeng.github.io/tags/man/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"在windows上用netsh动态配置端口转发","slug":"在windows上用netsh动态配置端口转发","date":"2014-09-05T11:56:48.000Z","updated":"2016-11-07T10:59:17.000Z","comments":true,"path":"2014/09/05/在windows上用netsh动态配置端口转发/","link":"","permalink":"http://aofeng.github.io/2014/09/05/在windows上用netsh动态配置端口转发/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x65B0;&#x589E;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1; 1&#x3001;&#x547D;&#x4EE4; 2&#x3001;&#x547D;&#x4EE4;&#x8BED;&#x6CD5; 3&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x663E;&#x793A;&#x6240;&#x6709;&#x7684;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E;&#x4FE1;&#x606F; 1&#x3001;&#x547D;&#x4EE4; 2&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x4FEE;&#x6539;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E; 1&#x3001;&#x547D;&#x4EE4; 2&#x3001;&#x547D;&#x4EE4;&#x8BED;&#x6CD5; 3&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x5220;&#x9664;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E; 1&#x3001;&#x547D;&#x4EE4; 2&#x3001;&#x547D;&#x4EE4;&#x8BED;&#x6CD5; 3&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x865A;&#x62DF;&#x673A;&#xFF0C;&#x5C06;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x4F5C;&#x6C9F;&#x901A;&#x73AF;&#x5883;&#x5206;&#x5F00;&#xFF08;&#x5373;&#x65F6;&#x901A;&#xFF0C;&#x529E;&#x516C;&#x7CFB;&#x7EDF;&#x90FD;&#x53EA;&#x80FD;&#x5728;windows&#x4E0B;&#x4F7F;&#x7528;&#x2026;&#xFF09;&#xFF0C;&#x5C06;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x7684;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x7ED9;&#x5916;&#x90E8;&#x8BBF;&#x95EE;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x4E3B;&#x673A;&#x4E0A;&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x914D;&#x7F6E;&#x6570;&#x636E;&#x8F6C;&#x53D1;&#x3002; VirtualBox&#x63D0;&#x4F9B;&#x4E86;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x4E3B;&#x673A;&#x4E2D;&#x7684;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x81F3;&#x6307;&#x5B9A;IP&#x7684;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x652F;&#x6301;TCP&#x534F;&#x8BAE;&#x548C;UDP&#x534F;&#x8BAE;&#x3002;&#x4F46;&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x70B9;&#xFF1A;&#x9700;&#x8981;&#x91CD;&#x542F;&#x865A;&#x62DF;&#x4E3B;&#x673A;&#x624D;&#x751F;&#x6548;&#x3002; &#x5176;&#x5B9E;&#x5728;Windows&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x505A;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Windows&#x81EA;&#x8EAB;&#x643A;&#x5E26;&#x7684;&#x670D;&#x52A1;:netsh&#xFF0C;&#x4F7F;&#x7528;netsh interface portproxy&#x6307;&#x4EE4;&#xFF0C;&#x65B0;&#x589E;&#x548C;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x540E;&#xFF0C;&#x5373;&#x65F6;&#x751F;&#x6548;&#xFF0C;&#x5E76;&#x4E14;&#x91CD;&#x542F;&#x7CFB;&#x7EDF;&#x540E;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4ECD;&#x7136;&#x5B58;&#x5728;&#xFF0C;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x3002;&#x9002;&#x7528;&#x4E8E;WindowsXP&#x3001;Windows7&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x7248;&#x672C;&#x8FD8;&#x6CA1;&#x6709;&#x8BD5;&#x8FC7;&#xFF0C;&#x652F;&#x6301;IPv4&#x548C;IPv6&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x652F;&#x6301;TCP&#x534F;&#x8BAE;&#x3002; &#x65B0;&#x589E;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;1&#x3001;&#x547D;&#x4EE4;netsh interface portproxy add v4tov4 - &#x6DFB;&#x52A0;&#x901A;&#x8FC7; IPv4 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy add v4tov6 - &#x6DFB;&#x52A0;&#x901A;&#x8FC7; IPv6 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy add v6tov4 - &#x6DFB;&#x52A0;&#x901A;&#x8FC7; IPv4 &#x7684; IPv6 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy add v6tov6 - &#x6DFB;&#x52A0;&#x901A;&#x8FC7; IPv6 &#x7684; IPv6 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002; 2&#x3001;&#x547D;&#x4EE4;&#x8BED;&#x6CD5;&#x4EE5;netsh interface portproxy add v4tov4&#x4E3A;&#x4F8B;&#xFF0C;&#x5176;&#x8BED;&#x6CD5;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;12345netsh interface portproxy add v4tov4 [listenport=]&lt;integer&gt;|&lt;servicename&gt; [connectaddress=]&lt;IPv4 address&gt;|&lt;hostname&gt; [[connectport=]&lt;integer&gt;|&lt;servicename&gt;] [[listenaddress=]&lt;IPv4 address&gt;|&lt;hostname&gt;] [[protocol=]tcp] &#x53C2;&#x6570;: &#x6807;&#x8BB0; &#x503C; listenport IPv4 &#x4FA6;&#x542C;&#x7AEF;&#x53E3;&#x3002; connectaddress IPv4 &#x8FDE;&#x63A5;&#x5730;&#x5740;&#x3002; connectport IPv4 &#x8FDE;&#x63A5;&#x7AEF;&#x53E3;&#x3002; listenaddress IPv4 &#x4FA6;&#x542C;&#x5730;&#x5740;&#x3002; protocol &#x4F7F;&#x7528;&#x7684;&#x534F;&#x8BAE;&#x3002;&#x73B0;&#x5728;&#x53EA;&#x652F;&#x6301; TCP&#x3002; &#x8BF4;&#x660E;: &#x6DFB;&#x52A0;&#x901A;&#x8FC7; IPv4 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002; 3&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1netsh interface portproxy add v4tov4 listenport=8080 connectaddress=192.168.56.101 connectport=8080 &#x5C06;&#x672C;&#x5730;&#x7684;8080&#x7AEF;&#x53E3;&#x7684;&#x6570;&#x636E;&#x8F6C;&#x53D1;&#x81F3;192.168.56.101&#x4E0A;&#x7684;8080&#x7AEF;&#x53E3;&#x3002; 1netsh interface portproxy add v4tov4 listenport=9090 connectaddress=192.168.56.101 connectport=9090 &#x5C06;&#x672C;&#x5730;&#x7684;9090&#x7AEF;&#x53E3;&#x7684;&#x6570;&#x636E;&#x8F6C;&#x53D1;&#x81F3;192.168.56.101&#x4E0A;&#x7684;9090&#x7AEF;&#x53E3;&#x3002; &#x663E;&#x793A;&#x6240;&#x6709;&#x7684;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E;&#x4FE1;&#x606F;1&#x3001;&#x547D;&#x4EE4;netsh interface portproxy show all - &#x663E;&#x793A;&#x6240;&#x6709;&#x7AEF;&#x53E3;&#x4EE3;&#x7406;&#x53C2;&#x6570;&#x3002;netsh interface portproxy show v4tov4 - &#x663E;&#x793A; IPv4 &#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x53E6;&#x4E00;&#x4E2A; IPv4 &#x7AEF;&#x53E3;&#x7684;&#x53C2;&#x6570;&#x3002;netsh interface portproxy show v4tov6 - &#x663E;&#x793A; IPv4 &#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230; IPv6 &#x7684;&#x53C2;&#x6570;&#x3002;netsh interface portproxy show v6tov4 - &#x663E;&#x793A; IPv6 &#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230; IPv4 &#x7684;&#x53C2;&#x6570;&#x3002;netsh interface portproxy show v6tov6 - &#x663E;&#x793A; IPv6 &#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x53E6;&#x4E00;&#x4E2A; IPv6 &#x7AEF;&#x53E3;&#x7684;&#x53C2;&#x6570;&#x3002; 2&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1netsh interface portproxy show all &#x63A7;&#x5236;&#x53F0;&#x663E;&#x793A;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; &#x4FA6;&#x542C; ipv4 &#x8FDE;&#x63A5;&#x5230; ipv4 &#x5730;&#x5740; &#x7AEF;&#x53E3; &#x5730;&#x5740; &#x7AEF;&#x53E3; 1 8080 192.168.56.101 8080 1 9090 192.168.56.101 9080 &#x4FEE;&#x6539;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E;1&#x3001;&#x547D;&#x4EE4;netsh interface portproxy set v4tov4 - &#x66F4;&#x65B0;&#x901A;&#x8FC7; IPv4 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy set v4tov6 - &#x66F4;&#x65B0;&#x901A;&#x8FC7; IPv6 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy set v6tov4 - &#x66F4;&#x65B0;&#x901A;&#x8FC7; IPv4 &#x7684; IPv6 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy set v6tov6 - &#x66F4;&#x65B0;&#x901A;&#x8FC7; IPv6 &#x7684; IPv6 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002; 2&#x3001;&#x547D;&#x4EE4;&#x8BED;&#x6CD5;&#x4EE5;netsh interface portproxy set v4tov4&#x4E3A;&#x4F8B;&#xFF0C;&#x5176;&#x8BED;&#x6CD5;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;12345netsh interface portproxy set v4tov4 [listenport=]&lt;integer&gt;|&lt;servicename&gt; [connectaddress=]&lt;IPv4 address&gt;|&lt;hostname&gt; [[connectport=]&lt;integer&gt;|&lt;servicename&gt;] [[listenaddress=]&lt;IPv4 address&gt;|&lt;hostname&gt;] [[protocol=]tcp] &#x53C2;&#x6570;: &#x6807;&#x8BB0; &#x503C; listenport IPv4 &#x4FA6;&#x542C;&#x7AEF;&#x53E3;&#x3002; connectaddress IPv4 &#x8FDE;&#x63A5;&#x5730;&#x5740;&#x3002; connectport IPv4 &#x8FDE;&#x63A5;&#x7AEF;&#x53E3;&#x3002; listenaddress IPv4 &#x4FA6;&#x542C;&#x5730;&#x5740;&#x3002; protocol &#x4F7F;&#x7528;&#x7684;&#x534F;&#x8BAE;&#x3002;&#x73B0;&#x5728;&#x53EA;&#x652F;&#x6301; TCP&#x3002; &#x8BF4;&#x660E;: &#x66F4;&#x65B0;&#x901A;&#x8FC7; IPv4 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002; 3&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1netsh interface portproxy set v4tov4 listenport=9090 connectaddress=192.168.56.101 connectport=9080 &#x5C06;&#x672C;&#x5730;9090&#x7AEF;&#x53E3;&#x6539;&#x6210;&#x8F6C;&#x53D1;&#x81F3;192.168.56.101&#x7684;9080&#x7AEF;&#x53E3;&#x4E2D;&#x3002; &#x5220;&#x9664;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E;1&#x3001;&#x547D;&#x4EE4;netsh interface portproxy delete v4tov4 - &#x5220;&#x9664;&#x901A;&#x8FC7; IPv4 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy delete v4tov6 - &#x5220;&#x9664;&#x901A;&#x8FC7; IPv6 &#x7684; IPv4 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy delete v6tov4 - &#x5220;&#x9664;&#x901A;&#x8FC7; IPv4 &#x7684; IPv6 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002;netsh interface portproxy delete v6tov6 - &#x5220;&#x9664;&#x901A;&#x8FC7; IPv6 &#x7684; IPv6 &#x548C;&#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x5230;&#x7684;&#x4FA6;&#x542C;&#x9879;&#x76EE;&#x3002; 2&#x3001;&#x547D;&#x4EE4;&#x8BED;&#x6CD5;&#x4EE5;netsh interface portproxy delete v4tov4&#x4E3A;&#x4F8B;&#xFF0C;&#x5176;&#x8BED;&#x6CD5;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;123netsh interface portproxy delete v4tov4 [listenport=]&lt;integer&gt;|&lt;servicename&gt; [[listenaddress=]&lt;IPv4 address&gt;|&lt;hostname&gt;] [[protocol=]tcp] &#x53C2;&#x6570;: &#x6807;&#x8BB0; &#x503C; listenport &#x8981;&#x4FA6;&#x542C;&#x7684; IPv4 &#x7AEF;&#x53E3;&#x3002; listenport &#x8981;&#x4FA6;&#x542C;&#x7684; IPv4 &#x5730;&#x5740;&#x3002; protocol &#x8981;&#x4F7F;&#x7528;&#x7684;&#x534F;&#x8BAE;&#x3002;&#x5F53;&#x524D;&#x4EC5;&#x652F;&#x6301; TCP&#x3002; &#x6CE8;&#x91CA;: &#x5220;&#x9664;&#x8981;&#x4FA6;&#x542C;&#x7684; IPv4 &#x7684;&#x9879;&#x5E76;&#x901A;&#x8FC7; Ipv4 &#x4EE3;&#x7406;&#x8FDE;&#x63A5;&#x3002; 3&#x3001;&#x4F7F;&#x7528;&#x793A;&#x4F8B;12netsh interface portproxy delete v4tov4 listenport=9090` &#x5220;&#x9664;&#x672C;&#x5730;&#x7AEF;&#x53E3;9090&#x7684;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x914D;&#x7F6E;&#x3002;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Windows","slug":"操作系统/Windows","permalink":"http://aofeng.github.io/categories/操作系统/Windows/"}],"tags":[{"name":"netsh","slug":"netsh","permalink":"http://aofeng.github.io/tags/netsh/"},{"name":"转发","slug":"转发","permalink":"http://aofeng.github.io/tags/转发/"},{"name":"windows","slug":"windows","permalink":"http://aofeng.github.io/tags/windows/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Windows","slug":"操作系统/Windows","permalink":"http://aofeng.github.io/categories/操作系统/Windows/"}]},{"title":"Redis-使用Java客户端Jedis","slug":"Redis-使用Java客户端Jedis","date":"2014-08-29T12:31:07.000Z","updated":"2016-11-08T07:35:45.000Z","comments":true,"path":"2014/08/29/Redis-使用Java客户端Jedis/","link":"","permalink":"http://aofeng.github.io/2014/08/29/Redis-使用Java客户端Jedis/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x4F7F;&#x7528;&#x5355;&#x8FDE;&#x63A5; &#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60; &#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60;+&#x5206;&#x5E03;&#x5F0F; &#x524D;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x300A;Redis&#x547D;&#x4EE4;&#x6307;&#x5357;&#x300B;&#x8BB2;&#x89E3;&#x4E86;&#x901A;&#x8FC7;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x65B9;&#x5F0F;&#x6267;&#x884C;Key=&gt;&#x7684;&#x5B58;&#x50A8;&#x64CD;&#x4F5C;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x7684;&#x9879;&#x76EE;&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x5404;&#x79CD;&#x8BED;&#x8A00;&#x662F;&#x4F7F;&#x7528;Redis&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x5E93;&#x6765;&#x4E0E;Redis&#x4EA4;&#x4E92;&#x3002;&#x9488;&#x5BF9;Java&#x8BED;&#x8A00;&#xFF0C;Redis&#x5B98;&#x65B9;&#x63A8;&#x8350;Jedis&#x3002; Jedis&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x64CD;&#x4F5C;&#x65B9;&#x5F0F;&#xFF1A;&#x5355;&#x673A;&#x5355;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#x3001;&#x5355;&#x673A;&#x8FDE;&#x63A5;&#x6C60;&#x65B9;&#x5F0F;&#x3001;&#x591A;&#x673A;&#x5206;&#x5E03;&#x5F0F;+&#x8FDE;&#x63A5;&#x6C60;&#x65B9;&#x5F0F;&#x3002; &#x9884;&#x5907; jedis-2.5.2 commons-pool2-2.2.jar &#x4F7F;&#x7528;&#x5355;&#x8FDE;&#x63A5;&#x6B64;&#x65B9;&#x5F0F;&#x4EC5;&#x5EFA;&#x8BAE;&#x7528;&#x4E8E;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x505A;&#x8C03;&#x8BD5;&#x7528;&#x3002;123456789101112// &#x521B;&#x5EFA;&#x8FDE;&#x63A5;String host = &quot;192.168.56.102&quot;;int port = 6379;Jedis client = new Jedis(host, port);// &#x6267;&#x884C;set&#x6307;&#x4EE4;String result = client.set(&quot;key-string&quot;, &quot;Hello, Redis!&quot;);System.out.println( String.format(&quot;set&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:%s&quot;, result) );// &#x6267;&#x884C;get&#x6307;&#x4EE4;String value = client.get(&quot;key-string&quot;);System.out.println( String.format(&quot;get&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:%s&quot;, value) ); &#x8FD0;&#x884C;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#xFF1A; set&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:OKget&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:Hello, Redis! &#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60;&#x6B64;&#x65B9;&#x5F0F;&#x9002;&#x7528;&#x4E8E;&#x4EC5;&#x4F7F;&#x7528;&#x5355;&#x4E2A;Redis&#x5B9E;&#x4F8B;&#x7684;&#x573A;&#x666F;&#x3002;12345678910111213141516171819202122232425262728// &#x751F;&#x6210;&#x8FDE;&#x63A5;&#x6C60;&#x914D;&#x7F6E;&#x4FE1;&#x606F;JedisPoolConfig config = new JedisPoolConfig();config.setMaxIdle(10);config.setMaxTotal(30);config.setMaxWaitMillis(3*1000);// &#x5728;&#x5E94;&#x7528;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x751F;&#x6210;&#x8FDE;&#x63A5;&#x6C60;JedisPool pool = new JedisPool(config, &quot;192.168.56.102&quot;, 6379);// &#x5728;&#x4E1A;&#x52A1;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x4ECE;&#x8FDE;&#x63A5;&#x6C60;&#x83B7;&#x53D6;&#x8FDE;&#x63A5;Jedis client = pool.getResource();try { // &#x6267;&#x884C;&#x6307;&#x4EE4; String result = client.set(&quot;key-string&quot;, &quot;Hello, Redis!&quot;); System.out.println( String.format(&quot;set&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:%s&quot;, result) ); String value = client.get(&quot;key-string&quot;); System.out.println( String.format(&quot;get&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:%s&quot;, value) );} catch (Exception e) { // TODO: handle exception} finally { // &#x4E1A;&#x52A1;&#x64CD;&#x4F5C;&#x5B8C;&#x6210;&#xFF0C;&#x5C06;&#x8FDE;&#x63A5;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60; if (null != client) { pool.returnResource(client); }} // end of try block// &#x5E94;&#x7528;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x91CA;&#x653E;&#x8FDE;&#x63A5;&#x6C60;&#x8D44;&#x6E90;pool.destroy(); &#x8FD0;&#x884C;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#xFF1A; set&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:OKget&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:Hello, Redis! &#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60;+&#x5206;&#x5E03;&#x5F0F;&#x5728;&#x89C4;&#x6A21;&#x8F83;&#x5927;&#x7684;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5F80;&#x5F80;&#x4F1A;&#x6709;&#x591A;&#x4E2A;Redis&#x5B9E;&#x4F8B;&#x505A;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x3002;&#x5E76;&#x4E14;&#x8FD8;&#x5B9E;&#x73B0;&#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#xFF0C;&#x5F53;&#x4E3B;&#x5B9E;&#x4F8B;&#x53D1;&#x751F;&#x6545;&#x969C;&#x65F6;&#xFF0C;&#x5207;&#x6362;&#x81F3;&#x4ECE;&#x5B9E;&#x4F8B;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x3002;&#x7C7B;&#x4F3C;&#x4E8E;Memcached&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;Jedis&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x5206;&#x5E03;&#x5F0F;&#x64CD;&#x4F5C;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x91C7;&#x7528;&#x4E00;&#x81F4;&#x6027;&#x54C8;&#x5E0C;&#x7B97;&#x6CD5;&#x3002;123456789101112131415161718192021222324252627282930313233// &#x751F;&#x6210;&#x591A;&#x673A;&#x8FDE;&#x63A5;&#x4FE1;&#x606F;&#x5217;&#x8868;List&lt;JedisShardInfo&gt; shards = new ArrayList&lt;JedisShardInfo&gt;();shards.add( new JedisShardInfo(&quot;127.0.0.1&quot;, 6379) );shards.add( new JedisShardInfo(&quot;192.168.56.102&quot;, 6379) );// &#x751F;&#x6210;&#x8FDE;&#x63A5;&#x6C60;&#x914D;&#x7F6E;&#x4FE1;&#x606F;JedisPoolConfig config = new JedisPoolConfig();config.setMaxIdle(10);config.setMaxTotal(30);config.setMaxWaitMillis(3*1000);// &#x5728;&#x5E94;&#x7528;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x751F;&#x6210;&#x8FDE;&#x63A5;&#x6C60;ShardedJedisPool pool = new ShardedJedisPool(config, shards);// &#x5728;&#x4E1A;&#x52A1;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x4ECE;&#x8FDE;&#x63A5;&#x6C60;&#x83B7;&#x53D6;&#x8FDE;&#x63A5;ShardedJedis client = pool.getResource();try { // &#x6267;&#x884C;&#x6307;&#x4EE4; String result = client.set(&quot;key-string&quot;, &quot;Hello, Redis!&quot;); System.out.println( String.format(&quot;set&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:%s&quot;, result) ); String value = client.get(&quot;key-string&quot;); System.out.println( String.format(&quot;get&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:%s&quot;, value) );} catch (Exception e) { // TODO: handle exception} finally { // &#x4E1A;&#x52A1;&#x64CD;&#x4F5C;&#x5B8C;&#x6210;&#xFF0C;&#x5C06;&#x8FDE;&#x63A5;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60; if (null != client) { pool.returnResource(client); }} // end of try block// &#x5E94;&#x7528;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x91CA;&#x653E;&#x8FDE;&#x63A5;&#x6C60;&#x8D44;&#x6E90;pool.destroy(); &#x8FD0;&#x884C;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#xFF1A; set&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:OKget&#x6307;&#x4EE4;&#x6267;&#x884C;&#x7ED3;&#x679C;:Hello, Redis!","categories":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Redis","slug":"开源组件/Redis","permalink":"http://aofeng.github.io/categories/开源组件/Redis/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"redis","slug":"redis","permalink":"http://aofeng.github.io/tags/redis/"},{"name":"jedis","slug":"jedis","permalink":"http://aofeng.github.io/tags/jedis/"}],"keywords":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Redis","slug":"开源组件/Redis","permalink":"http://aofeng.github.io/categories/开源组件/Redis/"}]},{"title":"Redis-命令指南","slug":"Redis-命令指南","date":"2014-08-22T10:36:18.000Z","updated":"2016-11-08T07:35:34.000Z","comments":true,"path":"2014/08/22/Redis-命令指南/","link":"","permalink":"http://aofeng.github.io/2014/08/22/Redis-命令指南/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x547D;&#x4EE4;&#x6982;&#x8FF0; &#x547D;&#x4EE4;&#x884C;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F; &#x5B57;&#x7B26;&#x4E32;&#xFF08;String&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x6570;&#x5B57;&#xFF08;Number&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x96C6;&#x5408;&#xFF08;Set&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x5217;&#x8868;&#xFF08;List&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x53D1;&#x5E03;/&#x8BA2;&#x9605;&#xFF08;Publish/Subscribe&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; &#x670D;&#x52A1;&#x7BA1;&#x7406;&#xFF08;Server&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; 1&#x3001;&#x67E5;&#x770B;&#x8FDE;&#x63A5;&#x5230;Redis&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4FE1;&#x606F;&#x3002; Redis&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;BSD&#x534F;&#x8BAE;&#xFF0C;&#x5F00;&#x6E90;&#x4E14;&#x514D;&#x8D39;&#x7684;Key=&gt;Value&#x5B58;&#x50A8;&#x4EA7;&#x54C1;&#xFF08;NoSQL&#xFF09;&#xFF0C;&#x4E0E;Memcached&#x76F8;&#x6BD4;&#xFF0C;&#x529F;&#x80FD;&#x66F4;&#x52A0;&#x4E30;&#x5BCC;&#xFF1A;1&#x3001;&#x652F;&#x6301;List, Set, Hash&#x7B49;&#x96C6;&#x5408;&#x7684;&#x64CD;&#x4F5C;&#x3002;2&#x3001;&#x652F;&#x6301;&#x6570;&#x636E;&#x6301;&#x4E45;&#x5316;&#xFF08;&#x9ED8;&#x8BA4;&#x5F00;&#x542F;&#xFF09;&#x3002;3&#x3001;&#x652F;&#x6301;&#x4E8B;&#x52A1;&#x3002;4&#x3001;&#x652F;&#x6301;&#x53D1;&#x5E03;/&#x8BA2;&#x9605;&#x529F;&#x80FD;&#x3002;5&#x3001;&#x652F;&#x6301;&#x6267;&#x884C;Lua&#x811A;&#x672C;&#x3002;6&#x3001;&#x53E6;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4EBA;&#x628A;&#x5B83;&#x5F53;&#x4F5C;&#x961F;&#x5217;&#x4F7F;&#x7528;&#x3002;&#x5982;&#xFF1A;logstash&#x5C31;&#x9ED8;&#x8BA4;&#x628A;redis&#x5F53;&#x4F5C;&#x961F;&#x5217;&#x670D;&#x52A1;&#x5668;&#x3002; &#x547D;&#x4EE4;&#x6982;&#x8FF0;&#x6839;&#x636E;&#x547D;&#x4EE4;&#x7684;&#x4F5C;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x5206;&#x7C7B;&#x6210;&#xFF1A;&#x901A;&#x7528;&#x7C7B;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x6570;&#x5B57;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x96C6;&#x5408;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x5217;&#x8868;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x54C8;&#x5E0C;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x53D1;&#x5E03;/&#x8BA2;&#x9605;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x8FDE;&#x63A5;&#x64CD;&#x4F5C;&#x7C7B;&#x3001;&#x670D;&#x52A1;&#x7BA1;&#x7406;&#x7C7B;&#x3002;&#x628A;&#x5E38;&#x7528;&#x7684;Redis&#x547D;&#x4EE4;&#x5206;&#x7C7B;&#x6574;&#x7406;&#x6210;&#x601D;&#x7EF4;&#x5BFC;&#x56FE;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x547D;&#x4EE4;&#x884C;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;1&#x3001;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;telnet&#x7684;&#x65B9;&#x5F0F;&#x8FDC;&#x7A0B;&#x8FDE;&#x63A5;Redis&#xFF1A;1telnet 192.168.56.102 6379 Trying 192.168.56.102&#x2026;Connected to 192.168.56.102 (192.168.56.102).Escape character is &#x2018;^]&#x2019;. 2&#x3001;&#x5982;&#x679C;&#x662F;&#x5728;Redis&#x5B89;&#x88C5;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6267;&#x884C;bin&#x76EE;&#x5F55;&#x4E0B;&#x7684;redis-cli&#x5E94;&#x7528;&#xFF1A;1./redis-cli 127.0.0.1:6379&gt; &#x5B57;&#x7B26;&#x4E32;&#xFF08;String&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1&#x3001;&#x5C06;&#x5B57;&#x7B26;&#x4E32;Hello, Redis!&#x5B58;&#x50A8;&#x5230;&#x6307;&#x5B9A;&#x7684;Key&#xFF08;key-hello&#xFF09;&#x3002;1set key-hello &quot;Hello, Redis!&quot; +OK 2&#x3001;&#x83B7;&#x53D6;Key&#xFF08;key-hello&#xFF09;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x503C;&#x3002;1get key-hello $13Hello, Redis! 3&#x3001;&#x5C06;&#x5B57;&#x7B26;&#x4E32;This is an append string&#x8FFD;&#x52A0;&#x5230;Key&#xFF08;key-hello&#xFF09;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x503C;&#x7684;&#x672B;&#x5C3E;&#x3002;1append key-hello &quot;This is an append string&quot; :37 1get key-hello $37Hello, Redis!This is an append string 4&#x3001;&#x83B7;&#x53D6;Key&#xFF08;key-hello&#xFF09;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x503C;&#xFF08;&#x5B57;&#x7B26;&#x4E32;&#xFF09;&#x7684;&#x957F;&#x5EA6;&#x3002;1strlen key-hello :37 &#x6570;&#x5B57;&#xFF08;Number&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1&#x3001;&#x5C06;&#x6574;&#x6570;1&#x5B58;&#x50A8;&#x5230;&#x6307;&#x5B9A;&#x7684;Key&#xFF08;key-int&#xFF09;&#x3002;1set key-int 1 +OK 2&#x3001;&#x5C06;Key&#xFF08;key-int&#xFF09;&#x4E2D;&#x7684;&#x503C;&#x52A0;1&#x3002;1incr key-int :2 3&#x3001;&#x5C06;Key&#xFF08;key-int&#xFF09;&#x4E2D;&#x7684;&#x503C;&#x52A0;7&#x3002;1incrby key-int 7 :9 4&#x3001;&#x5C06;Key&#xFF08;key-int&#xFF09;&#x4E2D;&#x7684;&#x503C;&#x51CF;1&#x3002;1decr key-int :8 5&#x3001;&#x5C06;Key&#xFF08;key-int&#xFF09;&#x4E2D;&#x7684;&#x503C;&#x51CF;7&#x3002;1decrby key-int 7 :1 &#x96C6;&#x5408;&#xFF08;Set&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1&#x3001;&#x5C06;&#x56DB;&#x4E2A;&#x5143;&#x7D20;&#x5B58;&#x50A8;&#x5230;Key&#xFF08;key-set&#xFF09;&#x4E2D;&#x3002;1sadd key-set element-1 element2 hello redis :4 2&#x3001;&#x83B7;&#x53D6;Key&#xFF08;key-set&#xFF09;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x3002;1scard key-set :4 3&#x3001;&#x83B7;&#x53D6;Key&#xFF08;key-set&#xFF09;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x5143;&#x7D20;&#x5217;&#x8868;&#x3002;1smembers key-set *4$5hello$5redis$8element2$9element-1 4&#x3001;&#x4ECE;Key&#xFF08;key-set&#xFF09;&#x4E2D;&#x5220;&#x9664;&#x5E76;&#x83B7;&#x53D6;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;1spop key-set $8element2 5&#x3001;&#x4ECE;Key&#xFF08;key-set&#xFF09;&#x4E2D;&#x5220;&#x9664;&#x6307;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x3002;1srem key-set hello :1 1smembers key-set *2$5redis$9element-1 &#x5217;&#x8868;&#xFF08;List&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1&#x3001;&#x5C06;5&#x4E2A;&#x5143;&#x7D20;&#x5B58;&#x50A8;&#x5230;Key&#xFF08;key-list&#xFF09;&#x4E2D;&#x3002;1lpush key-list abc hello go redis &quot;this is a string&quot; :5 2&#x3001;&#x5C06;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x4E3A;1&#x7684;&#x5143;&#x7D20;&#x66FF;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;insert-1&#x3002;1lset key-list 1 insert-1 +OK 1llen key-list :5 3&#x3001;&#x4ECE;&#x961F;&#x5217;&#x5DE6;&#x8FB9;&#x51FA;&#x961F;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;1lpop key-list $16this is a string 4&#x3001;&#x4ECE;&#x961F;&#x5217;&#x53F3;&#x8FB9;&#x51FA;&#x961F;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;1rpop key-list $3abc 5&#x3001;&#x4ECE;&#x961F;&#x5217;&#x53F3;&#x8FB9;&#x518D;&#x51FA;&#x961F;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;1rpop key-list $5hello 6&#x3001;&#x4ECE;&#x961F;&#x5217;&#x5DE6;&#x8FB9;&#x518D;&#x51FA;&#x961F;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;1lpop key-list $8insert-1 &#xFF03; &#x54C8;&#x5E0C;&#xFF08;Hash&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B; 1&#x3001;&#x5C06;1&#x4E2A;&#x5143;&#x7D20;&#x5B58;&#x50A8;&#x5230;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x3002;1hset key-hash field-1 one :1 2&#x3001;&#x5C06;4&#x4E2A;&#x5143;&#x7D20;&#x6279;&#x91CF;&#x5B58;&#x50A8;&#x5230;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x3002;1hmset key-hash field-2 two field-3 three field-4 four field-5 five +OK 3&#x3001;&#x83B7;&#x53D6;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x7684;key&#x5217;&#x8868;&#x3002;1hkeys key-hash *5$7field-1$7field-2$7field-3$7field-4$7field-5 4&#x3001;&#x83B7;&#x53D6;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x503C;&#x5217;&#x8868;&#x3002;1hvals key-hash *5$3one$3two$5three$4four$4five 5&#x3001;&#x83B7;&#x53D6;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x6307;&#x5B9A;key&#x7684;&#x503C;&#x3002;1hget key-hash field-3 $5three 6&#x3001;&#x6279;&#x91CF;&#x83B7;&#x53D6;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x6307;&#x5B9A;key&#x7684;&#x503C;&#x3002;1hmget key-hash field-1 field-5 *2$3one$4five 7&#x3001;&#x83B7;&#x53D6;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x3002;1hgetall key-hash *10$7field-1$3one$7field-2$3two$7field-3$5three$7field-4$4four$7field-5$4five 8&#x3001;&#x83B7;&#x53D6;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x6570;&#x91CF;&#x3002;1hlen key-hash :5 9&#x3001;&#x5220;&#x9664;&#x54C8;&#x5E0C;&#x5217;&#x8868;&#x4E2D;&#x6307;&#x5B9A;key&#x7684;&#x952E;&#x503C;&#x5BF9;&#x3002;1hdel key-hash field-4 field-5 :2 &#x53D1;&#x5E03;/&#x8BA2;&#x9605;&#xFF08;Publish/Subscribe&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1&#x3001;&#x5728;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x7528;subscribe&#x547D;&#x4EE4;&#x8BA2;&#x9605;&#x6E20;&#x9053;ch-one&#x3002;2&#x3001;&#x53E6;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x7528;publish&#x547D;&#x4EE4;&#x8FDE;&#x7EED;&#x5411;&#x6E20;&#x9053;ch-one&#x53D1;&#x5E03;&#x4E86;&#x4E09;&#x6761;&#x6D88;&#x606F;&#x3002;3&#x3001;&#x8BA2;&#x9605;&#x4E86;ch-one&#x6E20;&#x9053;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x63A5;&#x6536;&#x5230;&#x4E09;&#x6761;&#x6D88;&#x606F;&#x3002; &#x53D1;&#x5E03; &#x8BA2;&#x9605; &#x670D;&#x52A1;&#x7BA1;&#x7406;&#xFF08;Server&#xFF09;&#x547D;&#x4EE4;&#x4F7F;&#x7528;&#x793A;&#x4F8B;1&#x3001;&#x67E5;&#x770B;&#x8FDE;&#x63A5;&#x5230;Redis&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4FE1;&#x606F;&#x3002;1client list $718addr=127.0.0.1:40165 fd=6 name= age=24524 idle=24477 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=infoaddr=127.0.0.1:60394 fd=5 name= age=3410 idle=1543 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=publishaddr=127.0.0.1:53840 fd=7 name= age=1653 idle=641 flags=N db=0 sub=1 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=subscribeaddr=127.0.0.1:47668 fd=8 name= age=64 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=clientaddr=192.168.56.101:2992 fd=9 name= age=12 idle=8 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=get","categories":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Redis","slug":"开源组件/Redis","permalink":"http://aofeng.github.io/categories/开源组件/Redis/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"redis","slug":"redis","permalink":"http://aofeng.github.io/tags/redis/"},{"name":"jedis","slug":"jedis","permalink":"http://aofeng.github.io/tags/jedis/"}],"keywords":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Redis","slug":"开源组件/Redis","permalink":"http://aofeng.github.io/categories/开源组件/Redis/"}]},{"title":"JDK HashMap源码分析","slug":"JDK-HashMap源码分析","date":"2014-08-14T12:09:19.000Z","updated":"2016-11-07T12:40:46.000Z","comments":true,"path":"2014/08/14/JDK-HashMap源码分析/","link":"","permalink":"http://aofeng.github.io/2014/08/14/JDK-HashMap源码分析/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x6570;&#x636E;&#x5B58;&#x50A8;&#x7ED3;&#x6784; &#x63D2;&#x5165;&#x6570;&#x636E;&#xFF08;put&#x65B9;&#x6CD5;&#xFF09; &#x751F;&#x6210;&#x5355;&#x5411;&#x94FE;&#x8868; &#x6269;&#x5BB9; &#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF08;get&#x65B9;&#x6CD5;&#xFF09; &#x6CE8;&#x610F;&#x4E8B;&#x9879; JDK&#x63D0;&#x4F9B;&#x4E86;&#x975E;&#x5E38;&#x591A;&#x7684;&#x96C6;&#x5408;&#x7C7B;&#xFF0C;&#x4E0D;&#x4EC5;&#x4F7F;&#x7528;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x529F;&#x80FD;&#x4E30;&#x5BCC;&#xFF0C;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x4F60;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x7684;&#x9700;&#x6C42;&#x3002;&#x4F46;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x5982;&#x679C;&#x4E0D;&#x4E86;&#x89E3;&#x5176;&#x5B9E;&#x73B0;&#x7684;&#x539F;&#x7406;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x78B0;&#x5230;&#x6027;&#x80FD;&#x65B9;&#x9762;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6216;&#x8005;&#x5728;&#x4E00;&#x8D77;&#x573A;&#x666F;&#x4E0B;&#x4F1A;&#x5BFC;&#x81F4;&#x7CFB;&#x7EDF;&#x6545;&#x969C;&#x3002;&#x524D;&#x6BB5;&#x65F6;&#x95F4;Review&#x4EE3;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x6709;&#x540C;&#x5B66;&#x5728;&#x4F7F;&#x7528;HashMap&#x65F6;&#x5B58;&#x5728;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF1A;1&#x3001;&#x5728;&#x5E76;&#x53D1;&#x573A;&#x666F;&#x4E0B;&#x4F7F;&#x7528;HashMap&#x3002;2&#x3001;&#x6570;&#x636E;&#x91CF;&#x8F83;&#x5927;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x5BB9;&#x91CF;&#x3002; &#x4E0B;&#x9762;&#x4E3B;&#x8981;&#x8BB2;&#x89E3;HashMap&#x7684;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x3001;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x548C;&#x63D2;&#x5165;&#x6570;&#x636E;&#x7684;&#x5B9E;&#x73B0;&#x3002; &#x6570;&#x636E;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x91C7;&#x7528;&#x53CC;&#x8868;&#x7ED3;&#x6784;&#xFF1A;&#x6570;&#x7EC4;+&#x5355;&#x5411;&#x94FE;&#x8868;&#x3002; &#x4EE3;&#x7801;&#x793A;&#x4F8B;&#xFF1A;12345678910// &#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x5143;&#x7D20;&#x7684;&#x6570;&#x7EC4;transient Entry[] table;// Entry&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4E2D;&#x6709;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x4E2A;Entry&#x7684;&#x6307;&#x9488;&#xFF0C;&#x7528;&#x4E8E;&#x6784;&#x9020;&#x5355;&#x5411;&#x94FE;&#x8868;Entry(int h, K k, V v, Entry&lt;K,V&gt; n) { value = v; next = n; key = k; hash = h;} &#x63D2;&#x5165;&#x6570;&#x636E;&#xFF08;put&#x65B9;&#x6CD5;&#xFF09;put&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#x975E;&#x5E38;&#x6E05;&#x6670;&#x7B80;&#x5355;&#xFF1A;12345678910111213141516171819202122232425public V put(K key, V value) { if (key == null) return putForNullKey(value); // 1&#x3001;&#x5BF9;key&#x7684;hash&#x503C;&#x8FDB;&#x884C;&#x4E8C;&#x6B21;hash&#x8FD0;&#x7B97;&#x3002; int hash = hash(key.hashCode()); // 2&#x3001;&#x5C06;&#x4E8C;&#x6B21;hash&#x503C;&#x4E0E;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x4F4D;&#x4E0E;&#x8FD0;&#x7B97;&#xFF0C;&#x5F97;&#x5230;&#x5B58;&#x50A8;&#x7684;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x3002; int i = indexFor(hash, table.length); // 3&#x3001;&#x5982;&#x679C;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x7684;&#x4F4D;&#x7F6E;&#x5DF2;&#x7ECF;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x5386;&#x904D;&#x94FE;&#x8868;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x76F8;&#x540C;&#x7684;key&#x5B58;&#x5728;&#xFF0C;&#x7528;&#x65B0;&#x6570;&#x636E;&#x8986;&#x76D6;&#x5E76;&#x8FD4;&#x56DE;&#x65E7;&#x6570;&#x636E;&#x3002; for (Entry&lt;K,V&gt; e = table[i]; e != null; e = e.next) { Object k; if (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) { V oldValue = e.value; e.value = value; e.recordAccess(this); return oldValue; } } modCount++; // 4&#x3001;&#x5982;&#x679C;key&#x4E0D;&#x5B58;&#x5728;&#x5F53;&#x524D;&#x7D22;&#x5F15;&#x4F4D;&#x7F6E;&#x7684;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x5728;&#x5355;&#x5411;&#x94FE;&#x8868;&#x4E2D;&#x589E;&#x52A0;&#x65B0;&#x6570;&#x636E;&#x3002; addEntry(hash, key, value, i); return null;} &#x751F;&#x6210;&#x5355;&#x5411;&#x94FE;&#x8868;&#x518D;&#x6765;&#x770B;&#x770B;&#x65B0;&#x589E;&#x6570;&#x636E;&#x65F6;&#xFF08;addEntry&#x65B9;&#x6CD5;&#xFF09;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#xFF1A;PS&#xFF1A;&#x65B0;&#x589E;&#x7684;&#x6570;&#x636E;&#x59CB;&#x7EC8;&#x4F4D;&#x4E8E;&#x94FE;&#x8868;&#x7684;&#x5934;&#x90E8;&#x3002;123456789void addEntry(int hash, K key, V value, int bucketIndex) { // 1&#x3001;&#x9996;&#x5148;&#x6839;&#x636E;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x627E;&#x5230;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x7684;Entry&#x3002; Entry&lt;K,V&gt; e = table[bucketIndex]; // 2&#x3001;&#x7528;key&#x548C;value&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Entry&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x65B0;Entry&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7684;&#x6307;&#x9488;&#x6307;&#x5411;&#x539F;&#x6765;&#x5B58;&#x50A8;&#x5728;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x4F4D;&#x7F6E;&#x7684;Entry&#x3002;&#x5C06;&#x65B0;&#x7684;Entry&#x5B58;&#x50A8;&#x5728;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x7684;&#x4F4D;&#x7F6E;&#x3002; table[bucketIndex] = new Entry&lt;K,V&gt;(hash, key, value, e); if (size++ &gt;= threshold) resize(2 * table.length);} &#x6269;&#x5BB9;1&#x3001;&#x5728;&#x63D2;&#x5165;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x91CF;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x9608;&#x503C;&#xFF08;threshold&#xFF09;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x6267;&#x884C;&#x6269;&#x5BB9;&#xFF08;resize&#xFF09;&#x64CD;&#x4F5C;&#x3002; &#x9608;&#x503C;=&#x5BB9;&#x91CF; x &#x9608;&#x503C;&#x7CFB;&#x6570;&#x3002; &#x5BB9;&#x91CF;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;16&#x3002; &#x9608;&#x503C;&#x7CFB;&#x6570;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;0.75&#x3002; 2&#x3001;&#x5982;&#x4F55;&#x6269;&#x5BB9;&#xFF1A;&#x6309;&#x65B0;&#x5BB9;&#x91CF;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#xFF0C;&#x5C06;&#x65E7;&#x6570;&#x636E;&#x4E2D;&#x7684;&#x65E0;&#x7D20;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x5730;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x7D22;&#x5F15;&#x4F4D;&#x7F6E;&#x5E76;&#x5199;&#x5165;&#xFF08;&#x89C1;transfer&#x65B9;&#x6CD5;&#xFF09;&#x3002; &#x65B0;&#x5BB9;&#x91CF;=&#x65E7;&#x5BB9;&#x91CF; x 2&#x3002; 12345678910111213141516171819202122232425262728293031void resize(int newCapacity) { Entry[] oldTable = table; int oldCapacity = oldTable.length; if (oldCapacity == MAXIMUM_CAPACITY) { threshold = Integer.MAX_VALUE; return; } Entry[] newTable = new Entry[newCapacity]; transfer(newTable); table = newTable; threshold = (int)(newCapacity * loadFactor);}void transfer(Entry[] newTable) { Entry[] src = table; int newCapacity = newTable.length; for (int j = 0; j &lt; src.length; j++) { Entry&lt;K,V&gt; e = src[j]; if (e != null) { src[j] = null; do { Entry&lt;K,V&gt; next = e.next; int i = indexFor(e.hash, newCapacity); e.next = newTable[i]; newTable[i] = e; e = next; } while (e != null); } }} &#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF08;get&#x65B9;&#x6CD5;&#xFF09;get&#x65B9;&#x6CD5;&#x6BD4;put&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#x66F4;&#x7B80;&#x5355;&#xFF1A;12345678910111213141516public V get(Object key) { if (key == null) return getForNullKey(); // 1&#x3001;&#x5BF9;key&#x7684;hash&#x503C;&#x8FDB;&#x884C;&#x4E8C;&#x6B21;hash&#x8FD0;&#x7B97;&#x3002; int hash = hash(key.hashCode()); // 2&#x3001;&#x5C06;&#x4E8C;&#x6B21;hash&#x503C;&#x4E0E;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x4F4D;&#x4E0E;&#x8FD0;&#x7B97;&#xFF0C;&#x5F97;&#x5230;&#x5B58;&#x50A8;&#x7684;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x3002;&#x5386;&#x904D;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x6240;&#x5728;&#x4F4D;&#x7F6E;&#x7684;&#x5355;&#x5411;&#x94FE;&#x8868;&#xFF0C;&#x6839;&#x636E;key&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x3002; for (Entry&lt;K,V&gt; e = table[indexFor(hash, table.length)]; e != null; e = e.next) { Object k; if (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) return e.value; } return null;} &#x6CE8;&#x610F;&#x4E8B;&#x9879;1&#x3001;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x9884;&#x4F30;&#x6570;&#x636E;&#x91CF;&#xFF0C;&#x5728;&#x521B;&#x5EFA;HashMap&#x5B9E;&#x4F8B;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;&#x5408;&#x9002;&#x7684;&#x521D;&#x59CB;&#x5BB9;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x6269;&#x5BB9;&#x64CD;&#x4F5C;&#xFF0C;&#x63D0;&#x5347;&#x6027;&#x80FD;&#x3002;2&#x3001;&#x5C06;&#x5BB9;&#x91CF;&#x8BBE;&#x7F6E;&#x4E3A;2&#x7684;n&#x6B21;&#x65B9;&#x6027;&#x80FD;&#x6700;&#x597D;&#xFF0C;&#x5982;&#xFF1A;16&#xFF0C;32&#x3002;&#x539F;&#x56E0;&#xFF1A;&#x548C;HashMap&#x7684;indexFor&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x6709;&#x5173;&#x3002;3&#x3001;&#x7528;&#x4F5C;Key&#x7684;&#x5BF9;&#x8C61;&#x987B;&#x5B9E;&#x73B0;equals&#x548C;hashCode&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x7528;String&#x5BF9;&#x8C61;&#x4F5C;Key&#xFF0C;&#x5C31;&#x4E0D;&#x7528;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;equals&#x548C;hashCode&#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x4E3A;String&#x5BF9;&#x8C61;&#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;&#x3002;4&#x3001;HashMap&#x662F;&#x975E;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x64CD;&#x4F5C;&#x65F6;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x5FAA;&#x73AF;&#x3002;&#x539F;&#x56E0;&#xFF1A;&#x6267;&#x884C;&#x6269;&#x5BB9;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x5C06;&#x65E7;&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x63D2;&#x5165;&#x65B0;&#x8868;&#x65F6;&#x6709;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5355;&#x5411;&#x94FE;&#x8868;&#x5F62;&#x6210;&#x95ED;&#x73AF;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"hashmap","slug":"hashmap","permalink":"http://aofeng.github.io/tags/hashmap/"},{"name":"哈希表","slug":"哈希表","permalink":"http://aofeng.github.io/tags/哈希表/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"使用Precision Helper制作CHM","slug":"使用Precision-Helper制作CHM","date":"2014-08-12T11:31:28.000Z","updated":"2016-11-07T12:57:52.000Z","comments":true,"path":"2014/08/12/使用Precision-Helper制作CHM/","link":"","permalink":"http://aofeng.github.io/2014/08/12/使用Precision-Helper制作CHM/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x65B0;&#x5EFA;&#x9879;&#x76EE; &#x4E8C;&#x3001;&#x5BFC;&#x5165;&#x6587;&#x4EF6;&#x5217;&#x8868; &#x4E09;&#x3001;&#x751F;&#x6210;&#x83DC;&#x5355; &#x56DB;&#x3001;&#x751F;&#x6210;&#x7D22;&#x5F15; &#x4E94;&#x3001;&#x8BBE;&#x7F6E;&#x9879;&#x76EE;&#x4FE1;&#x606F; &#x516D;&#x3001;&#x751F;&#x6210;CHM &#x7528;&#x722C;&#x866B;&#x4ECE;&#x7F51;&#x4E0A;&#x6293;&#x53D6;&#x4E00;&#x5806;&#x7F51;&#x9875;&#x8D44;&#x6599;&#x540E;&#xFF0C;&#x65E2;&#x4E0D;&#x65B9;&#x4FBF;&#x67E5;&#x770B;&#x548C;&#x641C;&#x7D22;&#xFF0C;&#x4E5F;&#x4E0D;&#x65B9;&#x4FBF;&#x5B58;&#x50A8;&#x548C;&#x7BA1;&#x7406;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C06;&#x5B83;&#x4EEC;&#x5236;&#x4F5C;&#x6210;&#x4E00;&#x4E2A;CHM&#x6587;&#x4EF6;&#xFF0C;&#x7528;CHM&#x7684;&#x4E3B;&#x9898;&#x83DC;&#x5355;&#x6765;&#x89E3;&#x51B3;&#x67E5;&#x770B;&#x548C;&#x9009;&#x62E9;&#x7AE0;&#x8282;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7528;CHM&#x7684;&#x7D22;&#x5F15;&#x6765;&#x89E3;&#x51B3;&#x641C;&#x7D22;&#x7684;&#x95EE;&#x9898;&#x3002;&#x901A;&#x8FC7;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#xFF0C;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x8BB8;&#x591A;&#x5236;&#x4F5C;CHM&#x7684;&#x8F6F;&#x4EF6;&#xFF0C;&#x4F46;&#x8FD9;&#x91CC;&#x63A8;&#x8350;&#x4E00;&#x6B3E;&#x514D;&#x8D39;&#x7684;&#x8F6F;&#x4EF6;&#xFF1A;Precision Helper&#x3002;&#x9009;&#x62E9;&#x5B83;&#x9664;&#x4E86;&#x514D;&#x8D39;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x7B80;&#x5355;&#x3002; &#x6CE8;&#xFF1A;Precision Helper&#x751F;&#x6210;CHM&#x6587;&#x4EF6;&#x9700;&#x8981;&#x7528;&#x5230;&#x5FAE;&#x8F6F;&#x7684;Microsoft HTML Help Workshop&#x3002; &#x4E00;&#x3001;&#x65B0;&#x5EFA;&#x9879;&#x76EE;1&#x3001;&#x51C6;&#x5907;&#x7528;&#x4E8E;&#x5236;&#x4F5C;CHM&#x7684;HTML&#x6587;&#x4EF6;&#x548C;&#x56FE;&#x7247;&#x5217;&#x8868;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; 2&#x3001;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x767D;&#x9879;&#x76EE;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; 3&#x3001;&#x5728;&#x5B58;&#x653E;HTML&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x4FDD;&#x5B58;Precision Helper&#x7684;&#x9879;&#x76EE;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x4E8C;&#x3001;&#x5BFC;&#x5165;&#x6587;&#x4EF6;&#x5217;&#x8868;1&#x3001;&#x70B9;&#x51FB;&#x5DE6;&#x4E0B;&#x89D2;&#x7684;&#x201D;Included files&#x201D;&#x83DC;&#x5355;&#x9879;&#xFF0C;&#x7136;&#x540E;&#x5728;Included files&#x9762;&#x677F;&#x4E0A;&#x70B9;&#x51FB;&#x201C;Add&#x201D;&#x4E0B;&#x62C9;&#x83DC;&#x5355;&#x9009;&#x62E9;&#x8981;&#x5236;&#x4F5C;CHM&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;&#x6CE8;&#xFF1A;&#x5982;&#x679C;&#x9009;&#x62E9;&#x201C;Add files&#x201D;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x6307;&#x5B9A;&#x7684;&#x591A;&#x4E2A;HTML&#x6587;&#x4EF6;&#xFF1B;&#x5982;&#x679C;&#x9009;&#x62E9;&#x201D;Add files from folder&#x201D; &#x4F1A;&#x6DFB;&#x52A0;&#x6307;&#x5B9A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6240;&#x6709;HTML&#x6587;&#x4EF6;&#x3002; 2&#x3001;&#x70B9;&#x51FB;&#x201D;Add files&#x201D;&#x540E;&#xFF0C;&#x5F39;&#x51FA;&#x9009;&#x62E9;&#x6587;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; 3&#x3001;&#x5BFC;&#x5165;&#x9009;&#x62E9;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x540E;&#xFF0C;&#x5728;Included files&#x754C;&#x9762;&#x7684;&#x5217;&#x8868;&#x4E2D;&#x663E;&#x793A;&#x5BFC;&#x5165;&#x7684;&#x6587;&#x4EF6;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;&#x6CE8;&#xFF1A;&#x53EF;&#x4EE5;&#x591A;&#x6B21;&#x64CD;&#x4F5C;&#x52A0;&#x5165;&#x66F4;&#x591A;&#x7684;&#x6587;&#x4EF6;&#x3002; &#x4E09;&#x3001;&#x751F;&#x6210;&#x83DC;&#x5355;1&#x3001;&#x9009;&#x62E9;&#x201C;Tools&#x201D;&#x83DC;&#x5355;&#xFF0C;&#x70B9;&#x51FB;&#x201C;Auto add topics&#x201D;&#x5B50;&#x83DC;&#x5355;&#xFF0C;&#x5F39;&#x51FA;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x9ED8;&#x8BA4;&#x9009;&#x62E9;&#x201C;Topics of project include files&#x201D;&#x3002; 2&#x3001;&#x70B9;&#x51FB;&#x201D;Next&#x201D;&#x6309;&#x94AE;&#x751F;&#x6210;&#x83DC;&#x5355;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;&#x6CE8;&#xFF1A;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;&#x201D;Table of contents&#x201D;&#x5217;&#x8868;&#x7684;&#x5411;&#x4E0A;&#xFF0C;&#x5411;&#x4E0B;&#x6309;&#x94AE;&#x8C03;&#x6574;&#x5404;&#x4E2A;&#x83DC;&#x5355;&#x9879;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x91CD;&#x547D;&#x540D;&#x83DC;&#x5355;&#x9879;&#x7684;&#x540D;&#x5B57;&#x3002; &#x56DB;&#x3001;&#x751F;&#x6210;&#x7D22;&#x5F15;1&#x3001;&#x9009;&#x62E9;&#x201C;Tools&#x201D;&#x83DC;&#x5355;&#xFF0C;&#x70B9;&#x51FB;&#x201C;Auto add keywords&#x201D;&#x5B50;&#x83DC;&#x5355;&#xFF0C;&#x5F39;&#x51FA;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x9ED8;&#x8BA4;&#x9009;&#x62E9;&#x201C;Topics of current table of contents&#x201D;&#x3002; &#x70B9;&#x51FB;&#x201D;Next&#x201D;&#x6309;&#x94AE;&#x751F;&#x6210;&#x7D22;&#x5F15;&#x3002;&#x540C;&#x6837;&#xFF0C;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x7D22;&#x5F15;&#x7684;&#x5173;&#x952E;&#x5B57;&#x3002; &#x4E94;&#x3001;&#x8BBE;&#x7F6E;&#x9879;&#x76EE;&#x4FE1;&#x606F;1&#x3001;&#x5207;&#x6362;&#x5230;&#x201C;Project properties&#x201D;&#x9762;&#x677F;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;Contents file&#x548C;Index file&#x5DF2;&#x7ECF;&#x81EA;&#x52A8;&#x586B;&#x5165;&#x4E86;&#x5185;&#x5BB9;&#x3002;&#x70B9;&#x51FB;&#x201D;Default topic&#x201D;&#x540E;&#x9762;&#x7684;&#x6309;&#x94AE;&#x6765;&#x9009;&#x62E9;&#x4E3B;&#x9875;&#xFF0C;&#x70B9;&#x51FB;&#x201D;Compiled help file&#x201D;&#x540E;&#x9762;&#x7684;&#x6309;&#x94AE;&#x6765;&#x9009;&#x62E9;&#x4FDD;&#x5B58;CHM&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x6587;&#x4EF6;&#x540D;&#x3002;&#x6CE8;&#xFF1A;&#x8FD8;&#x53EF;&#x4EE5;&#x5728;Language and font&#x533A;&#x57DF;&#x8BBE;&#x7F6E;&#x8BED;&#x8A00;&#x548C;&#x5B57;&#x7B26;&#x96C6;&#x3002; 2&#x3001;&#x8BBE;&#x7F6E;CHM&#x6587;&#x4EF6;&#x7684;&#x6807;&#x9898;&#x3002;&#x5728;&#x754C;&#x9762;&#x7684;&#x6700;&#x53F3;&#x8FB9;&#x6709;&#x56DB;&#x4E2A;&#x83DC;&#x5355;&#x9879;&#xFF0C;&#x70B9;&#x51FB;&#x201D;Object Inspector&#x201D;&#xFF0C;&#x5728;Current project&#x540E;&#x9762;&#x7684;&#x8F93;&#x5165;&#x6846;&#x4E2D;&#x8F93;&#x5165;&#x6807;&#x9898;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x516D;&#x3001;&#x751F;&#x6210;CHM1&#x3001;&#x9009;&#x62E9;&#x201C;Publishing&#x201D;&#x83DC;&#x5355;&#xFF0C;&#x70B9;&#x51FB;&#x201C;Compile&#x201D;&#x5B50;&#x83DC;&#x5355;&#xFF0C;&#x751F;&#x6210;CHM&#x6587;&#x4EF6;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;&#x6CE8;&#xFF1A;&#x70B9;&#x51FB;&#x201D;Run&#x201D;&#x5B50;&#x83DC;&#x5355;&#x5728;&#x751F;&#x6210;CHM&#x6587;&#x4EF6;&#x540E;&#x4F1A;&#x81EA;&#x52A8;&#x6253;&#x5F00;&#x751F;&#x6210;&#x7684;CHM&#x6587;&#x4EF6;&#x3002; 2&#x3001;&#x6253;&#x5F00;&#x751F;&#x6210;&#x7684;CHM&#xFF0C;&#x6548;&#x679C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;","categories":[{"name":"大众软件","slug":"大众软件","permalink":"http://aofeng.github.io/categories/大众软件/"},{"name":"CHM","slug":"大众软件/CHM","permalink":"http://aofeng.github.io/categories/大众软件/CHM/"}],"tags":[{"name":"precisionhelper","slug":"precisionhelper","permalink":"http://aofeng.github.io/tags/precisionhelper/"},{"name":"chm","slug":"chm","permalink":"http://aofeng.github.io/tags/chm/"},{"name":"电子书","slug":"电子书","permalink":"http://aofeng.github.io/tags/电子书/"}],"keywords":[{"name":"大众软件","slug":"大众软件","permalink":"http://aofeng.github.io/categories/大众软件/"},{"name":"CHM","slug":"大众软件/CHM","permalink":"http://aofeng.github.io/categories/大众软件/CHM/"}]},{"title":"Apache Commons Pool2 源码分析","slug":"Apache-Commons-Pool2-源码分析","date":"2014-08-06T11:59:27.000Z","updated":"2016-11-07T13:19:09.000Z","comments":true,"path":"2014/08/06/Apache-Commons-Pool2-源码分析/","link":"","permalink":"http://aofeng.github.io/2014/08/06/Apache-Commons-Pool2-源码分析/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; PooledObject&#xFF08;&#x6C60;&#x5BF9;&#x8C61;&#xFF09; PooledObjectFactory&#xFF08;&#x6C60;&#x5BF9;&#x8C61;&#x5DE5;&#x5382;&#xFF09; Object Pool &#xFF08;&#x5BF9;&#x8C61;&#x6C60;&#xFF09; BorrowObject &#xFF08;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#xFF09; ReturnObject &#xFF08;&#x8FD4;&#x8FD8;&#x5BF9;&#x8C61;&#xFF09; &#x53C2;&#x8003;&#x8D44;&#x6599; Apache Commons Pool&#x5B9E;&#x73B0;&#x4E86;&#x5BF9;&#x8C61;&#x6C60;&#x7684;&#x529F;&#x80FD;&#x3002;&#x5B9A;&#x4E49;&#x4E86;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x6210;&#x3001;&#x9500;&#x6BC1;&#x3001;&#x6FC0;&#x6D3B;&#x3001;&#x949D;&#x5316;&#x7B49;&#x64CD;&#x4F5C;&#x53CA;&#x5176;&#x72B6;&#x6001;&#x8F6C;&#x6362;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x51E0;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5BF9;&#x8C61;&#x6C60;&#x5B9E;&#x73B0;&#x3002;&#x5728;&#x8BB2;&#x8FF0;&#x5176;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x524D;&#xFF0C;&#x5148;&#x63D0;&#x4E00;&#x4E0B;&#x5176;&#x4E2D;&#x6709;&#x51E0;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x5BF9;&#x8C61;&#xFF1A; PooledObject&#xFF08;&#x6C60;&#x5BF9;&#x8C61;&#xFF09;&#x3002; PooledObjectFactory&#xFF08;&#x6C60;&#x5BF9;&#x8C61;&#x5DE5;&#x5382;&#xFF09;&#x3002; Object Pool&#xFF08;&#x5BF9;&#x8C61;&#x6C60;&#xFF09;&#x3002; &#x4E0B;&#x9762;&#x5206;&#x522B;&#x8BE6;&#x7EC6;&#x8BB2;&#x89E3;&#x5B83;&#x4EEC;&#x7684;&#x5B9E;&#x73B0;&#x3002; PooledObject&#xFF08;&#x6C60;&#x5BF9;&#x8C61;&#xFF09;&#x7528;&#x4E8E;&#x5C01;&#x88C5;&#x5BF9;&#x8C61;&#xFF08;&#x5982;&#xFF1A;&#x7EBF;&#x7A0B;&#x3001;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x3001;TCP&#x8FDE;&#x63A5;&#xFF09;&#xFF0C;&#x5C06;&#x5176;&#x5305;&#x88F9;&#x6210;&#x53EF;&#x88AB;&#x6C60;&#x7BA1;&#x7406;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x6C60;&#x5BF9;&#x8C61;&#x5B9E;&#x73B0;&#xFF1A; DefaultPoolObject&#x3002;&#x7528;&#x4E8E;&#x975E;&#x8F6F;&#x5F15;&#x7528;&#x7684;&#x666E;&#x901A;&#x5BF9;&#x8C61;&#x3002; PooledSoftReference&#x3002;&#x7528;&#x4E8E;&#x8F6F;&#x5F15;&#x7528;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x5728;&#x5F00;&#x53D1;&#x8FDE;&#x63A5;&#x6C60;&#x3001;&#x7EBF;&#x7A0B;&#x6C60;&#x7B49;&#x7EC4;&#x4EF6;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x91CD;&#x8F7D;5&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;startEvictionTest&#x3001;endEvictionTest&#x3001;allocate&#x3001;deallocate&#x548C;invalidate&#xFF0C;&#x7528;&#x4E8E;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x573A;&#x666F;&#x4E0B;&#x4FEE;&#x6539;&#x88AB;&#x5305;&#x88F9;&#x5BF9;&#x8C61;&#x7684;&#x5185;&#x90E8;&#x72B6;&#x6001;&#x3002; PooledObject&#x6709;&#x591A;&#x79CD;&#x72B6;&#x6001;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x73AF;&#x8282;&#x6216;&#x7ECF;&#x8FC7;&#x5904;&#x7406;&#x540E;&#x72B6;&#x6001;&#x4F1A;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x3002; &#x72B6;&#x6001; &#x63CF;&#x8FF0; IDLE &#x4F4D;&#x4E8E;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x672A;&#x4F7F;&#x7528; ALLOCATED &#x5728;&#x4F7F;&#x7528; EVICTION &#x4F4D;&#x4E8E;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x6D4B;&#x8BD5;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x56DE;&#x6536; EVICTION_RETURN_TO_HEAD &#x4E0D;&#x5728;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x6D4B;&#x8BD5;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x56DE;&#x6536;&#x3002;&#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#x65F6;&#x9700;&#x8981;&#x4ECE;&#x961F;&#x5217;&#x51FA;&#x79FB;&#x9664;&#x5E76;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5; VALIDATION &#x4F4D;&#x4E8E;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x9A8C;&#x8BC1; VALIDATION_PREALLOCATION &#x4E0D;&#x5728;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x9A8C;&#x8BC1;&#x3002;&#x5F53;&#x5BF9;&#x8C61;&#x4ECE;&#x6C60;&#x4E2D;&#x88AB;&#x501F;&#x51FA;&#xFF0C;&#x5728;&#x914D;&#x7F6E;&#x4E86;testOnBorrow&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5BF9;&#x50CF;&#x4ECE;&#x961F;&#x5217;&#x79FB;&#x9664;&#x548C;&#x8FDB;&#x884C;&#x9884;&#x5206;&#x914D;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1; VALIDATION_RETURN_TO_HEAD &#x4E0D;&#x5728;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x6B63;&#x5728;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x3002;&#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x4ECE;&#x961F;&#x5217;&#x79FB;&#x9664;&#x5BF9;&#x8C61;&#x65F6;&#x4F1A;&#x5148;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;&#x8FD4;&#x56DE;&#x5230;&#x961F;&#x5217;&#x5934;&#x90E8;&#x7684;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x505A;&#x4E00;&#x6B21;&#x5B8C;&#x6574;&#x7684;&#x9A8C;&#x8BC1; INVALID &#x56DE;&#x6536;&#x6216;&#x9A8C;&#x8BC1;&#x5931;&#x8D25;&#xFF0C;&#x5C06;&#x9500;&#x6BC1; ABANDONED &#x5373;&#x5C06;&#x65E0;&#x6548; RETURN &#x8FD4;&#x8FD8;&#x5230;&#x6C60;&#x4E2D; &#x6839;&#x636E;Apache Commons Pool2&#x7684;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#xFF0C;&#x5176;&#x72B6;&#x6001;&#x53D8;&#x5316;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; PooledObjectFactory&#xFF08;&#x6C60;&#x5BF9;&#x8C61;&#x5DE5;&#x5382;&#xFF09;&#x5B9A;&#x4E49;&#x4E86;&#x64CD;&#x4F5C;PooledObject&#x5B9E;&#x4F8B;&#x751F;&#x547D;&#x5468;&#x671F;&#x7684;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;&#xFF0C;PooledObjectFactory&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x3002;&#x5DF2;&#x7ECF;&#x6709;&#x4E24;&#x4E2A;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#xFF1A; BasePooledObjectFactory&#x3002; BaseKeyedPooledObjectFactory&#x3002; &#x76F4;&#x63A5;&#x7EE7;&#x627F;&#x5B83;&#x4EEC;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x6C60;&#x5BF9;&#x8C61;&#x5DE5;&#x5382;&#x3002; &#x65B9;&#x6CD5; &#x63CF;&#x8FF0; makeObject &#x7528;&#x4E8E;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;ObjectPool&#x5B9E;&#x4F8B; activateObject &#x6BCF;&#x4E00;&#x4E2A;&#x949D;&#x5316;&#xFF08;passivated&#xFF09;&#x7684;ObjectPool&#x5B9E;&#x4F8B;&#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#xFF08;borrowed&#xFF09;&#x524D;&#x8C03;&#x7528; validateObject &#x53EF;&#x80FD;&#x7528;&#x4E8E;&#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x5BF9;&#x5904;&#x4E8E;&#x6FC0;&#x6D3B;&#xFF08;activated&#xFF09;&#x72B6;&#x6001;&#x7684;ObjectPool&#x5B9E;&#x4F8B;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x786E;&#x4FDD;&#x5B83;&#x662F;&#x6709;&#x6548;&#x7684;&#x3002;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x5728;ObjectPool&#x5B9E;&#x4F8B;&#x8FD4;&#x8FD8;&#x6C60;&#x4E2D;&#x8FDB;&#x884C;&#x949D;&#x5316;&#x524D;&#x8C03;&#x7528;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x6709;&#x6548;&#x3002;&#x5B83;&#x53EA;&#x5BF9;&#x5904;&#x4E8E;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;&#x7684;&#x5B9E;&#x4F8B;&#x8C03;&#x7528; passivateObject &#x5F53;ObjectPool&#x5B9E;&#x4F8B;&#x8FD4;&#x8FD8;&#x6C60;&#x4E2D;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528; destroyObject &#x5F53;ObjectPool&#x5B9E;&#x4F8B;&#x4ECE;&#x6C60;&#x4E2D;&#x88AB;&#x6E05;&#x7406;&#x51FA;&#x53BB;&#x4E22;&#x5F03;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#xFF08;&#x662F;&#x5426;&#x6839;&#x636E;validateObject&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x7531;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#x5728;&#x800C;&#x5B9A;&#xFF09; Object Pool &#xFF08;&#x5BF9;&#x8C61;&#x6C60;&#xFF09;Object Pool&#x8D1F;&#x8D23;&#x7BA1;&#x7406;PooledObject&#xFF0C;&#x5982;&#xFF1A;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;&#xFF0C;&#x6821;&#x9A8C;&#x5BF9;&#x8C61;&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x6FC0;&#x6D3B;&#x5BF9;&#x8C61;&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x7A7A;&#x95F2;&#x5BF9;&#x8C61;&#x3002;&#x6709;&#x4E09;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF1A; GenericObjectPool&#x3002; ProsiedObjectPool&#x3002; SoftReferenceObjectPool&#x3002; &#x65B9;&#x6CD5; &#x63CF;&#x8FF0; borrowObject &#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;&#x8981;&#x4E48;&#x8C03;&#x7528;PooledObjectFactory.makeObject&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#xFF0C;&#x8981;&#x4E48;&#x5BF9;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x5BF9;&#x8C61;&#x4F7F;&#x7528;PooledObjectFactory.activeObject&#x8FDB;&#x884C;&#x6FC0;&#x6D3B;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;PooledObjectFactory.validateObject&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x540E;&#x518D;&#x8FD4;&#x56DE; returnObject &#x5C06;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x8FD4;&#x8FD8;&#x7ED9;&#x6C60;&#x3002;&#x6839;&#x636E;&#x7EA6;&#x5B9A;&#xFF1A;&#x5BF9;&#x8C61;&#x5FC5;&#x987B; &#x662F;&#x4F7F;&#x7528;borrowObject&#x65B9;&#x6CD5;&#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#x7684; invalidateObject &#x5E9F;&#x5F03;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;&#x6839;&#x636E;&#x7EA6;&#x5B9A;&#xFF1A;&#x5BF9;&#x8C61;&#x5FC5;&#x987B; &#x662F;&#x4F7F;&#x7528;borrowObject&#x65B9;&#x6CD5;&#x4ECE;&#x6C60;&#x4E2D;&#x501F;&#x51FA;&#x7684;&#x3002;&#x901A;&#x5E38;&#x5728;&#x5BF9;&#x8C61;&#x53D1;&#x751F;&#x4E86;&#x5F02;&#x5E38;&#x6216;&#x5176;&#x4ED6;&#x95EE;&#x9898;&#x65F6;&#x4F7F;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#x5E9F;&#x5F03;&#x5B83; addObject &#x4F7F;&#x7528;&#x5DE5;&#x5382;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x949D;&#x5316;&#x5E76;&#x4E14;&#x5C06;&#x5B83;&#x653E;&#x5165;&#x7A7A;&#x95F2;&#x5BF9;&#x8C61;&#x6C60; getNumberIdle &#x8FD4;&#x56DE;&#x6C60;&#x4E2D;&#x7A7A;&#x95F2;&#x7684;&#x5BF9;&#x8C61;&#x6570;&#x91CF;&#x3002;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x6C60;&#x4E2D;&#x53EF;&#x4F9B;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#x7684;&#x8FD1;&#x4F3C;&#x503C;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x4FE1;&#x606F;&#x65E0;&#x6548;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x8D1F;&#x6570; getNumActive &#x8FD4;&#x56DE;&#x4ECE;&#x501F;&#x51FA;&#x7684;&#x5BF9;&#x8C61;&#x6570;&#x91CF;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x4FE1;&#x606F;&#x4E0D;&#x53EF;&#x7528;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x8D1F;&#x6570; clear &#x6E05;&#x9664;&#x6C60;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x7A7A;&#x95F2;&#x5BF9;&#x8C61;&#xFF0C;&#x91CA;&#x653E;&#x5176;&#x5173;&#x8054;&#x7684;&#x8D44;&#x6E90;&#xFF08;&#x53EF;&#x9009;&#xFF09;&#x3002;&#x6E05;&#x9664;&#x7A7A;&#x95F2;&#x5BF9;&#x8C61;&#x5FC5;&#x987B;&#x4F7F;&#x7528;PooledObjectFactory.destroyObject&#x65B9;&#x6CD5; close &#x5173;&#x95ED;&#x6C60;&#x5E76;&#x91CA;&#x653E;&#x5173;&#x8054;&#x7684;&#x8D44;&#x6E90; BorrowObject &#xFF08;&#x501F;&#x51FA;&#x5BF9;&#x8C61;&#xFF09;&#x4E0B;&#x9762;&#x662F;GenericObjectPool&#x4E2D;borrowObject&#x65B9;&#x6CD5;&#x7684;&#x903B;&#x8F91;&#x5B9E;&#x73B0;&#xFF0C;&#x6709;&#x963B;&#x585E;&#x5F0F;&#x548C;&#x975E;&#x963B;&#x585E;&#x5F0F;&#x4E24;&#x79CD;&#x83B7;&#x53D6;&#x5BF9;&#x8C61;&#x7684;&#x6A21;&#x5F0F;&#x3002; ReturnObject &#xFF08;&#x8FD4;&#x8FD8;&#x5BF9;&#x8C61;&#xFF09;&#x4E0B;&#x9762;&#x662F;GenericObjectPool&#x4E2D;returnObject&#x65B9;&#x6CD5;&#x7684;&#x903B;&#x8F91;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5B9E;&#x73B0;&#x7684;FIFO&#xFF08;&#x5148;&#x8FDB;&#x5148;&#x51FA;&#xFF09;&#x548C;LIFO&#xFF08;&#x540E;&#x8FDB;&#x5148;&#x51FA;&#xFF09;&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599; Apache Commons Pool Overview Apache Commons Pool API","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"pool","slug":"pool","permalink":"http://aofeng.github.io/tags/pool/"},{"name":"对象池","slug":"对象池","permalink":"http://aofeng.github.io/tags/对象池/"},{"name":"apache","slug":"apache","permalink":"http://aofeng.github.io/tags/apache/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Apache Commons DbUtils 源码分析","slug":"Apache-Commons-DbUtils-源码分析","date":"2014-06-13T12:12:53.000Z","updated":"2016-11-08T06:04:30.000Z","comments":true,"path":"2014/06/13/Apache-Commons-DbUtils-源码分析/","link":"","permalink":"http://aofeng.github.io/2014/06/13/Apache-Commons-DbUtils-源码分析/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x6982;&#x8FF0; QueryRunner ResultSetHandler RowProcessor &#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;Apache DbUtils&#x4F7F;&#x7528;&#x6559;&#x7A0B;&#x8BE6;&#x7EC6;&#x8BB2;&#x89E3;&#x4E86;DbUtils&#x7684;&#x7279;&#x6027;&#x548C;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x538C;&#x5026;&#x4E86;Hibernate&#x7684;&#x7B28;&#x91CD;&#xFF0C;&#x4E5F;&#x4E0D;&#x60F3;&#x7528;IBatis&#xFF0C;&#x5EFA;&#x8BAE;&#x8BD5;&#x8BD5;DbUtils&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x771F;&#x7684;&#x5F88;&#x8F7B;&#x91CF;&#xFF0C;&#x4E00;&#x5207;&#x5C3D;&#x5728;&#x638C;&#x63A7;&#x4E2D;&#x3002; &#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x8BB2;&#x89E3;DbUtils&#x7684;&#x539F;&#x7406;&#x548C;&#x5B9E;&#x73B0;&#x3002; &#x6982;&#x8FF0;DbUtils&#x6709;&#x4E09;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x7EC4;&#x4EF6;&#xFF1A; QueryRunner ResultSetHandler RowProcessor &#x5B83;&#x4EEC;&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x3002;QueryRunner&#x5728;&#x6267;&#x884C;&#x67E5;&#x8BE2;&#x7684;SQL&#x8BED;&#x53E5;&#x540E;&#xFF0C;&#x8C03;&#x7528;ResultSetHandler&#x5C06;ResultSet&#x8F6C;&#x6362;&#x6210;&#x6307;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;DbUtils&#x81EA;&#x5E26;&#x7684;ResultSetHandler&#x5B9E;&#x73B0;&#x7C7B;&#x90FD;&#x662F;&#x8C03;&#x7528;RowProcessor&#x8F6C;&#x6362;&#x884C;&#x8BB0;&#x5F55;&#x3002; QueryRunnerQueryRunner&#x662F;DbUtils&#x6267;&#x884C;&#x67E5;&#x8BE2;&#x3001;&#x66F4;&#x65B0;&#x548C;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x7684;&#x5165;&#x53E3;&#x670D;&#x52A1;&#x7C7B;&#x3002;&#x5B9E;&#x73B0;&#x4E86;&#x540C;&#x6B65;&#x548C;&#x5F02;&#x6B65;&#x670D;&#x52A1;&#xFF0C;QueryRunner&#x63D0;&#x4F9B;&#x540C;&#x6B65;&#x670D;&#x52A1;&#xFF0C;AsyncQueryRunner&#x63D0;&#x4F9B;&#x5F02;&#x6B65;&#x670D;&#x52A1;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x7EE7;&#x627F;&#x81EA;AbstractQueryRunner&#x3002; &#x63D0;&#x4F9B;&#x7684;&#x529F;&#x80FD;&#x6709;&#xFF1A; query&#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x6267;&#x884C;&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;SQL&#xFF0C;&#x5982;&#xFF1A;select * from table&#x3002; update&#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x6267;&#x884C;&#x66F4;&#x65B0;&#x548C;&#x5220;&#x9664;&#x64CD;&#x4F5C;SQL&#xFF0C;&#x5982;&#xFF1A;update table set b=&#x2019;b1&#x2019; where a=&#x2019;a&#x2019;&#xFF0C;delete from table where a=&#x2019;a&#x2019;&#x3002; batch&#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x6267;&#x884C;&#x66F4;&#x65B0;&#x548C;&#x5220;&#x9664;SQL&#x7684;&#x6279;&#x91CF;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#xFF1A;update table set b=? where a=?&#x3002; insert&#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x6267;&#x884C;&#x63D2;&#x5165;&#x64CD;&#x4F5C;SQL&#xFF0C;&#x5982;&#xFF1A;insert into table(a, b) values(&#x2018;a&#x2019;, &#x2018;b&#x2019;)&#x3002; &#x4E0A;&#x8FF0;&#x56DB;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x5747;&#x63D0;&#x4F9B;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x65B9;&#x5F0F;&#xFF1A; &#x521B;&#x5EFA;QueryRunner&#x5B9E;&#x4F8B;&#x65F6;&#x4F20;&#x5165;DataSource&#x5B9E;&#x4F8B;&#xFF0C;&#x5373;&#x53EF;&#x4F7F;&#x7528;&#x65E0;&#x9700;Connection&#x53C2;&#x6570;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4F8B;&#xFF1A;12QueryRunner run = new QueryRunner(ds);result = run.query(sql, handler); QueryRunner&#x4F1A;&#x5E2E;&#x4F60;&#x81EA;&#x52A8;&#x521B;&#x5EFA;Connection&#x3001;Statement&#x3001;ResultSet&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x5B89;&#x5168;&#x5730;&#x5173;&#x95ED;&#x5B83;&#x4EEC;&#x3002; &#x521B;&#x5EFA;QueryRunner&#x5B9E;&#x4F8B;&#x65F6;&#x672A;&#x4F20;&#x5165;DataSource&#x5B9E;&#x4F8B;&#xFF0C;&#x5728;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x65F6;&#x4F20;&#x5165;Connection&#x3002;&#x4F8B;&#xFF1A;12QueryRunner run = new QueryRunner();result = run.query(conn, sql, handler); QueryRunner&#x4F1A;&#x5E2E;&#x4F60;&#x81EA;&#x52A8;&#x521B;&#x5EFA;Statement&#x3001;ResultSet&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x5B89;&#x5168;&#x5730;&#x5173;&#x95ED;&#x5B83;&#x4EEC;&#x3002;&#x4F46;&#x4E0D;&#x4F1A;&#x5E2E;&#x4F60;&#x5173;&#x95ED;Connection&#x3002; ResultSetHandlerResultSetHandler&#x8D1F;&#x8D23;&#x5C06;&#x67E5;&#x8BE2;&#x7684;&#x7ED3;&#x679C;&#x96C6;ResultSet&#x8F6C;&#x6362;&#x6210;&#x6307;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;DbUtils&#x81EA;&#x5E26;&#x4E86;&#x8BB8;&#x591A;&#x5B9E;&#x73B0;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; ResultSetHandler&#x5B9E;&#x73B0;&#x7C7B; &#x63CF;&#x8FF0; ArrayHandler &#x628A;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x6570;&#x636E;&#x8F6C;&#x6210;Object&#x6570;&#x7EC4; ArrayListHandler &#x628A;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x90FD;&#x8F6C;&#x6210;&#x4E00;&#x4E2A;Object&#x6570;&#x7EC4;&#xFF0C;&#x518D;&#x5B58;&#x653E;&#x5230;List&#x4E2D; BeanHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x6570;&#x636E;&#x8F6C;&#x6210;&#x4E00;&#x4E2A;JavaBean&#x5B9E;&#x4F8B; BeanListHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x90FD;&#x8F6C;&#x6210;&#x4E00;&#x4E2A;JavaBean&#x5B9E;&#x4F8B;&#xFF0C;&#x5B58;&#x653E;&#x5230;List&#x4E2D; BeanMapHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x90FD;&#x8F6C;&#x6210;&#x4E00;&#x4E2A;JavaBean&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x6307;&#x5B9A;&#x67D0;&#x4E00;&#x5217;&#x4F5C;&#x4E3A;Key&#xFF0C;&#x5B58;&#x653E;&#x5230;Map&#x4E2D; ColumnListHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x67D0;&#x4E00;&#x5217;&#x7684;&#x6570;&#x636E;&#x5B58;&#x653E;&#x5230;List&#x4E2D; KeyedHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x90FD;&#x5C01;&#x88C5;&#x5230;&#x4E00;&#x4E2A;Map&#x91CC;&#xFF0C;&#x518D;&#x628A;&#x8FD9;&#x4E9B;Map&#x518D;&#x5B58;&#x5230;&#x4E00;&#x4E2A;Map&#x91CC;&#xFF0C;&#x5176;Key&#x4E3A;&#x6307;&#x5B9A;&#x7684;Key MapHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x5230;&#x4E00;&#x4E2A;Map&#x91CC;&#xFF0C;Key&#x662F;&#x5217;&#x540D;&#xFF0C;Value&#x5C31;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#x503C; MapListHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x90FD;&#x5C01;&#x88C5;&#x5230;&#x4E00;&#x4E2A;Map&#x91CC;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5B58;&#x653E;&#x5230;List ScakarHandler &#x5C06;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x7684;&#x67D0;&#x4E00;&#x5217;&#x8F6C;&#x6362;&#x6210;&#x6307;&#x5B9A;&#x7684;Object RowProcessorRowProcessor&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;BasicRowProcessor&#xFF0C;DbUtils&#x81EA;&#x5E26;&#x7684;ResultSetHandler&#x5B9E;&#x73B0;&#x7C7B;&#x90FD;&#x662F;&#x7528;BasicRowProcessor&#x8F6C;&#x6362;&#x884C;&#x6570;&#x636E;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"apache","slug":"apache","permalink":"http://aofeng.github.io/tags/apache/"},{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/tags/数据库/"},{"name":"dbutils","slug":"dbutils","permalink":"http://aofeng.github.io/tags/dbutils/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Apache Commons DbUtils 使用教程","slug":"Apache-Commons-DbUtils-使用教程","date":"2014-06-10T15:06:12.000Z","updated":"2016-11-08T06:18:24.000Z","comments":true,"path":"2014/06/10/Apache-Commons-DbUtils-使用教程/","link":"","permalink":"http://aofeng.github.io/2014/06/10/Apache-Commons-DbUtils-使用教程/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x521B;&#x5EFA;&#x8868;&#x548C;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E; &#x7F16;&#x5199;&#x67E5;&#x8BE2;&#x4EE3;&#x7801; 1&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;POJO&#x5BF9;&#x8C61;&#x5217;&#x8868; 2&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;POJO&#x8C61; 3&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;Map&#x5BF9;&#x8C61;&#x5217;&#x8868;&#x3002; 4&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;Map&#x5BF9;&#x8C61; 5&#x3001;&#x81EA;&#x5B9A;&#x4E49;ResultSetHandler &#x9644;&#x5F55; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x7528;JDBC&#x7F16;&#x7A0B;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x548C;&#x5904;&#x7406;&#x7684;&#x5185;&#x5BB9;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x8FDE;&#x63A5;&#x8D44;&#x6E90;&#x6CA1;&#x6709;&#x91CA;&#x653E;&#x5BFC;&#x81F4;&#x6CC4;&#x6F0F;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;&#x5176;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x521B;&#x5EFA;Connection&#x3002; &#x521B;&#x5EFA;Statement&#x3002; &#x6267;&#x884C;SQL&#x751F;&#x6210;ResultSet&#xFF0C;&#x5386;&#x904D;ResultSet&#x4E2D;&#x7684;&#x6240;&#x6709;&#x884C;&#x8BB0;&#x5F55;&#x63D0;&#x53D6;&#x5217;&#x6570;&#x636E;&#x5E76;&#x8F6C;&#x6362;&#x6210;&#x6240;&#x9700;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x5173;&#x95ED;ResultSet&#x3002; &#x5173;&#x95ED;Statement&#x3002; &#x5173;&#x95ED;Connection&#x3002; Apache DbUtils&#x5BF9;JDBC&#x64CD;&#x4F5C;&#x8FDB;&#x884C;&#x4E86;&#x8F7B;&#x91CF;&#x5730;&#x5C01;&#x88C5;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; &#x81EA;&#x52A8;&#x521B;&#x5EFA;&#x548C;&#x91CA;&#x653E;&#x8FDE;&#x63A5;&#x8D44;&#x6E90;&#xFF0C;&#x4E0D;&#x518D;&#x6709;&#x6CC4;&#x6F0F;&#x95EE;&#x9898;&#x3002; &#x81EA;&#x52A8;&#x5C06;Result&#x8F6C;&#x6362;&#x6210;&#x5BF9;&#x8C61;&#x3002;&#x586B;&#x5165;&#x4E0D;&#x540C;&#x7684;ResultSetHandler&#xFF0C;&#x53EF;&#x5C06;ResultSet&#x8F6C;&#x6362;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x4F7F;&#x5F97;&#x4EE3;&#x7801;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x548C;&#x5065;&#x58EE;&#xFF0C;&#x8BA9;&#x4F60;&#x5C06;&#x7CBE;&#x529B;&#x66F4;&#x591A;&#x5730;&#x6295;&#x5165;&#x5230;&#x4E1A;&#x52A1;&#x5904;&#x7406;&#x4E2D;&#x3002; &#x9884;&#x5907; MySQL&#x6570;&#x636E;&#x5E93; commons-dbutils-1.5.jar mysql-connector-java-5.1.22-bin.jar &#x521B;&#x5EFA;&#x8868;&#x548C;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;1&#x3001;&#x8868;&#x7ED3;&#x6784;&#x3002;1234567CREATE TABLE `student` ( `userId` int(11) NOT NULL, `userName` varchar(30) NOT NULL, `gender` char(1) NOT NULL, `age` int(11) DEFAULT NULL, PRIMARY KEY (`userId`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 ; 2&#x3001;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x3002; userId userName gender age 1 &#x5F20;&#x4E09; M 20 2 &#x674E;&#x56DB; M 21 3 &#x738B;&#x4E94; M 22 4 &#x5C0F;&#x660E; M 6 5 &#x5C0F;&#x4E3D; F 9 &#x7F16;&#x5199;&#x67E5;&#x8BE2;&#x4EE3;&#x7801;1&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;POJO&#x5BF9;&#x8C61;&#x5217;&#x8868;1&#xFF09;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x4E0E;&#x8868;student&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x5BF9;&#x8C61;Student&#xFF08;&#x6E90;&#x4EE3;&#x7801;&#x4E0B;&#x8F7D;&#xFF09;&#x3002; 2&#xFF09;&#x4F7F;&#x7528;BeanListHandler&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;POJO&#x5BF9;&#x8C61;&#x5217;&#x8868;&#x3002;12345678910111213141516171819public void queryBeanList(DataSource ds) { String sql = &quot;select userId, userName, gender, age from student&quot;; QueryRunner run = new QueryRunner(ds); ResultSetHandler&lt;List&lt;Student&gt;&gt; handler = new BeanListHandler&lt;Student&gt;(Student.class); List&lt;Student&gt; result = null; try { result = run.query(sql, handler); } catch (SQLException e) { _logger.error(&quot;&#x83B7;&#x53D6;JDBC&#x8FDE;&#x63A5;&#x51FA;&#x9519;&#x6216;&#x6267;&#x884C;SQL&#x51FA;&#x9519;&quot;, e); } if (null == result) { return; } for (Student student : result) { System.out.println(student); }} &#x6267;&#x884C;queryBeanList&#x65B9;&#x6CD5;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; Student [userId=1, userName=&#x5F20;&#x4E09;, gender=M, age=20]Student [userId=2, userName=&#x674E;&#x56DB;, gender=M, age=21]Student [userId=3, userName=&#x738B;&#x4E94;, gender=M, age=22]Student [userId=4, userName=&#x5C0F;&#x660E;, gender=M, age=6]Student [userId=5, userName=&#x5C0F;&#x4E3D;, gender=F, age=9] 2&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;POJO&#x8C61;1&#xFF09;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x4E0E;&#x8868;student&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x5BF9;&#x8C61;Student&#xFF08;&#x6E90;&#x4EE3;&#x7801;&#x4E0B;&#x8F7D;&#xFF09;&#x3002; 2&#xFF09;&#x4F7F;&#x7528;BeanHandler&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;POJO&#x5BF9;&#x8C61;&#x3002;1234567891011121314public void queryBean(DataSource ds, int userId) { String sql = &quot;select userId, userName, gender, age from student where userId=?&quot;; QueryRunner run = new QueryRunner(ds); ResultSetHandler&lt;Student&gt; handler = new BeanHandler&lt;Student&gt;(Student.class); Student result = null; try { result = run.query(sql, handler, userId); } catch (SQLException e) { _logger.error(&quot;&#x83B7;&#x53D6;JDBC&#x8FDE;&#x63A5;&#x51FA;&#x9519;&#x6216;&#x6267;&#x884C;SQL&#x51FA;&#x9519;&quot;, e); } System.out.println(result);} &#x6267;&#x884C;queryBean&#x65B9;&#x6CD5;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; Student [userId=1, userName=&#x5F20;&#x4E09;, gender=M, age=20] 3&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;Map&#x5BF9;&#x8C61;&#x5217;&#x8868;&#x3002;1&#xFF09;&#x4F7F;&#x7528;MapListHandler&#x5C06;ResultSet&#x8F6C;&#x6362;&#x6210;Map&#x5BF9;&#x8C61;&#x5217;&#x8868;&#x3002;12345678910111213141516171819public void queryMapList(DataSource ds) { String sql = &quot;select userId, userName, gender, age from student&quot;; QueryRunner run = new QueryRunner(ds); ResultSetHandler&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt; handler = new MapListHandler(); List&lt;Map&lt;String, Object&gt;&gt; result = null; try { result = run.query(sql, handler); } catch (SQLException e) { _logger.error(&quot;&#x83B7;&#x53D6;JDBC&#x8FDE;&#x63A5;&#x51FA;&#x9519;&#x6216;&#x6267;&#x884C;SQL&#x51FA;&#x9519;&quot;, e); } if (null == result) { return; } for (Map&lt;String, Object&gt; map : result) { System.out.println(map); }} &#x6267;&#x884C;queryMapList&#x65B9;&#x6CD5;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; {age=20, userId=1, gender=M, userName=&#x5F20;&#x4E09;}{age=21, userId=2, gender=M, userName=&#x674E;&#x56DB;}{age=22, userId=3, gender=M, userName=&#x738B;&#x4E94;}{age=6, userId=4, gender=M, userName=&#x5C0F;&#x660E;}{age=9, userId=5, gender=F, userName=&#x5C0F;&#x4E3D;} 4&#x3001;&#x5C06;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;Map&#x5BF9;&#x8C61;1&#xFF09;&#x4F7F;&#x7528;MapHandler&#x5C06;ResultSet&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;Map&#x5BF9;&#x8C61;&#x3002;1234567891011121314public void queryMap(DataSource ds, int userId) { String sql = &quot;select userId, userName, gender, age from student where userId=?&quot;; QueryRunner run = new QueryRunner(ds); ResultSetHandler&lt;Map&lt;String, Object&gt;&gt; handler = new MapHandler(); Map&lt;String, Object&gt; result = null; try { result = run.query(sql, handler, userId); } catch (SQLException e) { _logger.error(&quot;&#x83B7;&#x53D6;JDBC&#x8FDE;&#x63A5;&#x51FA;&#x9519;&#x6216;&#x6267;&#x884C;SQL&#x51FA;&#x9519;&quot;, e); } System.out.println(result);} &#x6267;&#x884C;queryMap&#x65B9;&#x6CD5;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; {age=22, userId=3, gender=M, userName=&#x738B;&#x4E94;} 5&#x3001;&#x81EA;&#x5B9A;&#x4E49;ResultSetHandlerApache DbUtils&#x81EA;&#x5E26;&#x7684;&#x5404;&#x79CD;ResultSetHandler&#x5DF2;&#x7ECF;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x7684;&#x67E5;&#x8BE2;&#x9700;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x8981;&#x6C42;&#x6EE1;&#x8DB3;&#x4E0D;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x3002;1234567891011121314151617181920212223242526272829303132333435363738public void queryCustomHandler(DataSource ds) { String sql = &quot;select userId, userName, gender, age from student&quot;; // &#x65B0;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;ResultSetHandler ResultSetHandler&lt;List&lt;Student&gt;&gt; handler = new ResultSetHandler&lt;List&lt;Student&gt;&gt;() { @Override public List&lt;Student&gt; handle(ResultSet resultset) throws SQLException { List&lt;Student&gt; result = new ArrayList&lt;Student&gt;(); while (resultset.next()) { Student student = new Student(); student.setUserId(resultset.getInt(&quot;userId&quot;)); student.setUserName(resultset.getString(&quot;userName&quot;)); student.setGender(resultset.getString(&quot;gender&quot;)); student.setAge(resultset.getInt(&quot;age&quot;)); result.add(student); } return result; } }; QueryRunner run = new QueryRunner(ds); List&lt;Student&gt; result = null; try { result = run.query(sql, handler); } catch (SQLException e) { _logger.error(&quot;&#x83B7;&#x53D6;JDBC&#x8FDE;&#x63A5;&#x51FA;&#x9519;&#x6216;&#x6267;&#x884C;SQL&#x51FA;&#x9519;&quot;, e); } if (null == result) { return; } for (Student student : result) { System.out.println(student); }} &#x6267;&#x884C;queryCustomHandler&#x65B9;&#x6CD5;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; Student [userId=1, userName=&#x5F20;&#x4E09;, gender=M, age=20]Student [userId=2, userName=&#x674E;&#x56DB;, gender=M, age=21]Student [userId=3, userName=&#x738B;&#x4E94;, gender=M, age=22]Student [userId=4, userName=&#x5C0F;&#x660E;, gender=M, age=6]Student [userId=5, userName=&#x5C0F;&#x4E3D;, gender=F, age=9] &#x9644;&#x5F55; DEMO&#x5B8C;&#x6574;&#x6E90;&#x4EE3;&#x7801; Apache DbUtils&#x8FD8;&#x652F;&#x6301;&#x66F4;&#x591A;&#x7684;&#x7528;&#x6CD5; &#xFF0C;&#x8BE6;&#x60C5;&#x53EF;&#x67E5;&#x770B;QueryRunner&#x7684;API&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599; commons-dbutils example","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"apache","slug":"apache","permalink":"http://aofeng.github.io/tags/apache/"},{"name":"数据库","slug":"数据库","permalink":"http://aofeng.github.io/tags/数据库/"},{"name":"dbutils","slug":"dbutils","permalink":"http://aofeng.github.io/tags/dbutils/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"EasyMock-生成模拟对象用于单元测试","slug":"EasyMock-生成模拟对象用于单元测试","date":"2014-05-28T11:47:02.000Z","updated":"2016-11-08T07:03:54.000Z","comments":true,"path":"2014/05/28/EasyMock-生成模拟对象用于单元测试/","link":"","permalink":"http://aofeng.github.io/2014/05/28/EasyMock-生成模拟对象用于单元测试/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x4F7F;&#x7528;EasyMock&#x7684;&#x4E94;&#x90E8;&#x66F2; &#x5B9E;&#x8DF5; &#x4E1A;&#x52A1;&#x4EE3;&#x7801; &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801; &#x5F53;&#x9879;&#x76EE;&#x8FBE;&#x5230;&#x4E00;&#x5B9A;&#x89C4;&#x6A21;&#x65F6;&#x4F1A;&#x6839;&#x636E;&#x4E1A;&#x52A1;&#x6216;&#x529F;&#x80FD;&#x8FDB;&#x884C;&#x6A21;&#x5757;&#x5316;&#xFF0C;&#x8FD9;&#x65F6;&#x7814;&#x53D1;&#x56E2;&#x961F;&#x5728;&#x534F;&#x4F5C;&#x65F6;&#x4F1A;&#x78B0;&#x5230;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x5982;&#x4F55;&#x8BA9;&#x76F8;&#x4E92;&#x4F9D;&#x8D56;&#x7684;&#x5404;&#x6A21;&#x5757;&#x5E76;&#x884C;&#x5F00;&#x53D1;&#xFF1F;&#x5E38;&#x7528;&#x7684;&#x529E;&#x6CD5;&#x662F;&#xFF1A;&#x5404;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x6709;&#x6E05;&#x6670;&#x7684;&#x8FB9;&#x754C;&#xFF0C;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x7684;&#x4EA4;&#x4E92;&#x901A;&#x8FC7;&#x63A5;&#x53E3;&#x3002;&#x5728;&#x8BBE;&#x8BA1;&#x9636;&#x6BB5;&#x5B9A;&#x4E49;&#x6A21;&#x5757;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x7136;&#x540E;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x5F00;&#x53D1;&#x65F6;&#x9075;&#x5FAA;&#x63A5;&#x53E3;&#x7684;&#x5B9A;&#x4E49;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#x548C;&#x8C03;&#x7528;&#x3002; OK&#xFF0C;&#x5E76;&#x884C;&#x5F00;&#x53D1;&#x7684;&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x4E86;&#x3002;&#x4F46;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x5757;&#x56E0;&#x5176;&#x590D;&#x6742;&#x5EA6;&#x548C;&#x5DE5;&#x4F5C;&#x91CF;&#x4E0D;&#x540C;&#xFF0C;&#x8FDB;&#x5EA6;&#x4E0D;&#x4E00;&#x81F4;&#x3002;&#x5F53;&#x7814;&#x53D1;&#x540C;&#x5B66;&#x5B8C;&#x6210;&#x6240;&#x8D1F;&#x8D23;&#x7684;&#x6A21;&#x5757;&#x65F6;&#xFF0C;&#x4F46;&#x4F9D;&#x8D56;&#x7684;&#x6A21;&#x5757;&#x8FD8;&#x6CA1;&#x6709;&#x5B8C;&#x6210;&#x5F00;&#x53D1;&#xFF0C;&#x4E0D;&#x597D;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002; &#x8FD9;&#x91CC;&#x5C31;&#x8BB2;&#x5982;&#x4F55;&#x7528;EasyMock&#x751F;&#x6210;Mock Object&#x6A21;&#x62DF;&#x6240;&#x4F9D;&#x8D56;&#x6A21;&#x5757;&#x7684;&#x63A5;&#x53E3;&#x6765;&#x5B8C;&#x6210;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002; &#x9884;&#x5907; easymock-3.2.jar easymockclassextension-3.2.jar cglib-2.2.2.jar objenesis-1.2.jar asm-3.1.jar asm-commons-3.1.jar asm-util-3.1.jar gson-2.2.4.jar // &#x7528;&#x4E8E;&#x5904;&#x7406;JSON &#x6CE8;&#xFF1A;&#x4E0A;&#x9762;&#x7684;jar&#x6587;&#x4EF6;&#x5747;&#x53EF;&#x4ECE;MAVEN&#x4ED3;&#x5E93;&#x4E0B;&#x8F7D;&#x3002; &#x4F7F;&#x7528;EasyMock&#x7684;&#x4E94;&#x90E8;&#x66F2;1&#x3001;&#x5F15;&#x5165;EasyMock&#x3002;1import static org.easymock.EasyMock.*; 2&#x3001;&#x521B;&#x5EFA;Mock Object&#x3002;1mock = createMock(InterfaceOrClass.class); 3&#x3001;&#x8BBE;&#x7F6E;Mock Object&#x7684;&#x884C;&#x4E3A;&#x548C;&#x9884;&#x671F;&#x7ED3;&#x679C;&#x3002;12mock.doSomeThing();expectLastCall().times(1); // &#x81F3;&#x5C11;&#x8981;&#x8C03;&#x7528;&#x4E00;&#x6B21;doSomeThing&#x65B9;&#x6CD5; &#x6216;&#x8005;1234567// &#x6A21;&#x62DF;&#x629B;&#x51FA;&#x5F02;&#x5E38;expect(mock.getSomeThing(anyString())) .andThrow(new IOException(&quot;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7279;&#x610F;&#x629B;&#x7684;&#x5F02;&#x5E38;&quot;)); // &#x6A21;&#x62DF;&#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x7684;&#x6570;&#x636E;expect(mock.getSomeThing(anyString())) .andReturn(&quot;abcd&quot;); 4&#x3001;&#x8BBE;&#x7F6E;Mock Object&#x53D8;&#x6210;&#x53EF;&#x7528;&#x72B6;&#x6001;&#x3002;1replay(mock); 5&#x3001;&#x8FD0;&#x884C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#xFF08;&#x4F1A;&#x8C03;&#x7528;&#x5230;Mock Object&#x7684;&#x65B9;&#x6CD5;&#xFF09;&#x3002;12// &#x5982;&#x679C;&#x662F;&#x6821;&#x9A8C;&#x8C03;&#x7528;&#x6B21;&#x6570;&#x5C31;&#x8981;&#x7528;&#x5230;verify&#x65B9;&#x6CD5;verify(mock); &#x5B9E;&#x8DF5;&#x4E1A;&#x52A1;&#x4EE3;&#x7801;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556package cn.aofeng.demo.easymock;import java.io.IOException;import java.lang.reflect.Type;import java.util.Map;import org.apache.log4j.Logger;import com.google.gson.Gson;import com.google.gson.reflect.TypeToken;import cn.aofeng.demo.jetty.HttpGet;/** * &#x7528;&#x6237;&#x76F8;&#x5173;&#x670D;&#x52A1;&#x3002;&#x5982;&#xFF1A;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x6635;&#x79F0;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class UserService { private static Logger _logger = Logger.getLogger(UserService.class); private HttpGet _httpGet = new HttpGet(); /** * &#x6839;&#x636E;&#x7528;&#x6237;&#x7684;&#x8D26;&#x53F7;ID&#x83B7;&#x53D6;&#x6635;&#x79F0;&#x3002; * * @param accountId &#x7528;&#x6237;&#x7684;&#x8D26;&#x53F7;ID * @return &#x5982;&#x679C;&#x8D26;&#x53F7;ID&#x6709;&#x6548;&#x4E14;&#x8BF7;&#x6C42;&#x6210;&#x529F;&#xFF0C;&#x8FD4;&#x56DE;&#x6635;&#x79F0;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;&#x9ED8;&#x8BA4;&#x7684;&#x6635;&#x79F0;&quot;&#x7528;&#x6237;xxx&quot;&#x3002; */ public String getNickname(String accountId) { String targetUrl = &quot;http://192.168.56.102:8080/user?method=getNickname&amp;accountId=&quot;+accountId; String response = null; try { response = _httpGet.getSomeThing(targetUrl); } catch (IOException e) { _logger.error(&quot;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x6635;&#x79F0;&#x65F6;&#x51FA;&#x9519;,&#x8D26;&#x53F7;ID:&quot;+accountId, e); } if (null != response) { // &#x54CD;&#x5E94;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x793A;&#x4F8B;&#xFF1A;{&quot;nickname&quot;:&quot;&#x5F20;&#x4E09;&quot;} Type type = new TypeToken&lt;Map&lt;String, String&gt;&gt;() {}.getType(); Map&lt;String, String&gt; data = new Gson().fromJson(response, type); if (null != data &amp;&amp; data.containsKey(&quot;nickname&quot;)) { return data.get(&quot;nickname&quot;); } } return &quot;&#x7528;&#x6237;&quot;+accountId; } protected void setHttpGet(HttpGet httpGet) { this._httpGet = httpGet; }} &#x6E90;&#x7801;&#x4E0B;&#x8F7D;123456789101112131415161718192021222324252627282930313233343536373839404142package cn.aofeng.demo.jetty;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.URL;import org.apache.commons.io.IOUtils;/** * HTTP GET&#x8BF7;&#x6C42;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class HttpGet { public String getSomeThing(String urlStr) throws IOException { URL url = new URL(urlStr); HttpURLConnection urlConn = (HttpURLConnection) url.openConnection(); urlConn.setConnectTimeout(3000); urlConn.setRequestMethod(&quot;GET&quot;); urlConn.connect(); InputStream ins = null; try { if (200 == urlConn.getResponseCode()) { ins = urlConn.getInputStream(); ByteArrayOutputStream outs = new ByteArrayOutputStream(1024); IOUtils.copy(ins, outs); return outs.toString(&quot;UTF-8&quot;); } } catch (IOException e) { throw e; } finally { IOUtils.closeQuietly(ins); } return null; }} &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687package cn.aofeng.demo.easymock;import static org.junit.Assert.*;import java.io.IOException;import static org.easymock.EasyMock.*;import org.junit.After;import org.junit.Before;import org.junit.Test;import cn.aofeng.demo.jetty.HttpGet;/** * {@link UserService}&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class UserServiceTest { private HttpGet _mock = createMock(HttpGet.class); @Before public void setUp() throws Exception { } @After public void tearDown() throws Exception { reset(_mock); } /** * &#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF1A;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x6635;&#x79F0; &lt;br/&gt; * &#x524D;&#x7F6E;&#x6761;&#x4EF6;&#xFF1A; * &lt;pre&gt; * &#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x65F6;&#x53D1;&#x751F;IO&#x5F02;&#x5E38; * &lt;/pre&gt; * * &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#xFF1A; * &lt;pre&gt; * &#x8FD4;&#x56DE;&#x9ED8;&#x8BA4;&#x7684;&#x7528;&#x6237;&#x6635;&#x79F0;&quot;&#x7528;&#x6237;xxx&quot; * &lt;/pre&gt; */ @Test public void testGetNickname4OccursIOError() throws IOException { // &#x8BBE;&#x7F6E;Mock expect(_mock.getSomeThing(anyString())) .andThrow(new IOException(&quot;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7279;&#x610F;&#x629B;&#x7684;&#x5F02;&#x5E38;&quot;)); replay(_mock); UserService us = new UserService(); us.setHttpGet(_mock); String nickname = us.getNickname(&quot;123456&quot;); verify(_mock); // &#x6821;&#x9A8C;mock assertEquals(&quot;&#x7528;&#x6237;123456&quot;, nickname); // &#x68C0;&#x67E5;&#x8FD4;&#x56DE;&#x503C; } /** * &#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF1A;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x6635;&#x79F0; &lt;br/&gt; * &#x524D;&#x7F6E;&#x6761;&#x4EF6;&#xFF1A; * &lt;pre&gt; * 1&#x3001;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x6210;&#x529F;&#x3002; * 2&#x3001;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;200&#x4E14;&#x54CD;&#x5E94;&#x5185;&#x5BB9;&#x7B26;&#x5408;&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#xFF08;{\\&quot;nickname\\&quot;:\\&quot;&#x5F20;&#x4E09;\\&quot;}&#xFF09;&#x3002; * &lt;/pre&gt; * * &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#xFF1A; * &lt;pre&gt; * &#x8FD4;&#x56DE;&quot;&#x5F20;&#x4E09;&quot; * &lt;/pre&gt; */ @Test public void testGetNickname4Success() throws IOException { // &#x8BBE;&#x7F6E;Mock _mock.getSomeThing(anyString()); expectLastCall().andReturn(&quot;{\\&quot;nickname\\&quot;:\\&quot;&#x5F20;&#x4E09;\\&quot;}&quot;); expectLastCall().times(1); replay(_mock); UserService us = new UserService(); us.setHttpGet(_mock); String nickname = us.getNickname(&quot;123456&quot;); verify(_mock); // &#x6821;&#x9A8C;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x6B21;&#x6570; assertEquals(&quot;&#x5F20;&#x4E09;&quot;, nickname); // &#x6821;&#x9A8C;&#x8FD4;&#x56DE;&#x503C; }}","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"easymock","slug":"easymock","permalink":"http://aofeng.github.io/tags/easymock/"},{"name":"单元测试","slug":"单元测试","permalink":"http://aofeng.github.io/tags/单元测试/"},{"name":"mock","slug":"mock","permalink":"http://aofeng.github.io/tags/mock/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"WireMock-实现Http Server Mock用于单元测试","slug":"WireMock-实现Http-Server-Mock用于单元测试","date":"2014-05-06T12:03:18.000Z","updated":"2016-11-08T07:03:45.000Z","comments":true,"path":"2014/05/06/WireMock-实现Http-Server-Mock用于单元测试/","link":"","permalink":"http://aofeng.github.io/2014/05/06/WireMock-实现Http-Server-Mock用于单元测试/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x4E1A;&#x52A1;&#x793A;&#x4F8B;&#x4EE3;&#x7801; &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x524D;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x201D;&#x4F7F;&#x7528;jetty&#x5B9E;&#x73B0;Http Server Mock&#x4F5C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x201D;&#x8BB2;&#x4E86;&#x7528;Jetty&#x5B9E;&#x73B0;Http Server Mock&#x6765;&#x6A21;&#x62DF;&#x4F9D;&#x8D56;&#x7684;&#x5916;&#x90E8;HTTP&#x670D;&#x52A1;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x9700;&#x8981;&#x66F4;&#x591A;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#xFF1A;&#x533A;&#x5206;GET&#x548C;POST&#xFF1B;&#x5339;&#x914D;&#x8BF7;&#x6C42;&#x7684;URL&#xFF1B;&#x5339;&#x914D;Http Header&#xFF1B;&#x5339;&#x914D;&#x8BF7;&#x6C42;&#x5185;&#x5BB9;&#x7B49;&#x7B49;&#x3002; &#x5B9E;&#x9645;&#x7814;&#x53D1;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x7528;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x662F;&#x7528;Jetty&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x4E0D;&#x505C;&#x5730;&#x52A8;&#x624B;&#x53BB;&#x6DFB;&#x7816;&#x52A0;&#x74E6;&#xFF0C;&#x867D;&#x7136;&#x6709;&#x6210;&#x5C31;&#x611F;&#xFF0C;&#x4F46;&#x5728;&#x5FEB;&#x901F;&#x8FED;&#x4EE3;&#x7684;&#x8282;&#x594F;&#x4E0B;&#x4E0D;&#x4E00;&#x5B9A;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x65F6;&#x95F4;&#x53BB;&#x505A;&#x8FD9;&#x4E9B;&#x3002; &#x8FD9;&#x65F6;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x73B0;&#x6210;&#x7684;&#x7C7B;&#x5E93;&#x6765;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x8FD9;&#x4E9B;&#x9700;&#x6C42;&#xFF0C;WireMock&#x548C;MockServer&#x90FD;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x8BB2;WireMock&#x3002; &#x9884;&#x5907; JUnit 4.11 wiremock 1.46 &#x4E1A;&#x52A1;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;123456789101112131415161718192021222324252627282930313233343536373839404142package cn.aofeng.demo.jetty;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.URL;import org.apache.commons.io.IOUtils;/** * &#x6293;&#x53D6;&#x9875;&#x9762;&#x5185;&#x5BB9;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class HttpGet { public String getSomeThing(String urlStr) throws IOException { URL url = new URL(urlStr); HttpURLConnection urlConn = (HttpURLConnection) url.openConnection(); urlConn.setConnectTimeout(3000); urlConn.setRequestMethod(&quot;GET&quot;); urlConn.connect(); InputStream ins = null; try { if (200 == urlConn.getResponseCode()) { ins = urlConn.getInputStream(); ByteArrayOutputStream outs = new ByteArrayOutputStream(1024); IOUtils.copy(ins, outs); return outs.toString(&quot;UTF-8&quot;); } } catch (IOException e) { throw e; } finally { IOUtils.closeQuietly(ins); } return null; }} &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566package cn.aofeng.demo.wiremock;import static org.junit.Assert.*;import org.junit.After;import org.junit.Before;import org.junit.Rule;import org.junit.Test;import static com.github.tomakehurst.wiremock.client.WireMock.*;import com.github.tomakehurst.wiremock.junit.WireMockRule;import cn.aofeng.demo.jetty.HttpGet;/** * {@link HttpGet}&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class HttpGetTest { private HttpGet _httpGet = new HttpGet(); @Rule public WireMockRule _wireMockRule = new WireMockRule(9191); @Before public void setUp() throws Exception { } @After public void tearDown() throws Exception { } /** * &#x7528;&#x4F8B;&#xFF1A;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;200&#x4E14;&#x6709;&#x54CD;&#x5E94;&#x5185;&#x5BB9;&#x3002; */ @Test public void testGetSomeThing4Success() throws Exception { // &#x8BBE;&#x7F6E;Mock String response = &quot;Hello, The World!&quot;; stubFor(get(urlEqualTo(&quot;/hello&quot;)) .willReturn(aResponse() .withStatus(200) .withBody(response))); String content = _httpGet.getSomeThing(&quot;http://localhost:9191/hello&quot;); assertEquals(response, content); } /** * &#x7528;&#x4F8B;&#xFF1A;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;&#x975E;200&#x3002; */ @Test public void testGetSomeThing4Fail() throws Exception { // &#x8BBE;&#x7F6E;Mock stubFor(get(urlEqualTo(&quot;/hello&quot;)) .willReturn(aResponse() .withStatus(500) .withBody(&quot;Hello, The World!&quot;))); String content = _httpGet.getSomeThing(&quot;http://localhost:9191/hello&quot;); assertNull(content); }} &#x53C2;&#x8003;&#x8D44;&#x6599; WIreMock Getting Started WireMock Stubbing","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"单元测试","slug":"单元测试","permalink":"http://aofeng.github.io/tags/单元测试/"},{"name":"wiremock","slug":"wiremock","permalink":"http://aofeng.github.io/tags/wiremock/"},{"name":"mock","slug":"mock","permalink":"http://aofeng.github.io/tags/mock/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Jetty-实现Http Server Mock用于单元测试","slug":"Jetty-实现Http-Server-Mock用于单元测试","date":"2014-05-05T12:15:41.000Z","updated":"2016-11-08T07:07:03.000Z","comments":true,"path":"2014/05/05/Jetty-实现Http-Server-Mock用于单元测试/","link":"","permalink":"http://aofeng.github.io/2014/05/05/Jetty-实现Http-Server-Mock用于单元测试/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x9884;&#x5907; &#x4E1A;&#x52A1;&#x793A;&#x4F8B;&#x4EE3;&#x7801; &#x7528;Jetty&#x5B9E;&#x73B0;&#x7684;Http Server Mock &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801; &#x5728;&#x7814;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x53D1;&#x73B0;&#x8BB8;&#x591A;&#x6A21;&#x5757;&#x5BF9;&#x5916;&#x90E8;&#x7CFB;&#x7EDF;&#x7684;&#x8C03;&#x7528;&#x5E76;&#x6CA1;&#x6709;&#x6C89;&#x6DC0;&#x6210;&#x4E13;&#x95E8;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x4EE3;&#x7801;&#x4E2D;&#x76F4;&#x63A5;&#x8C03;&#x7528;URL&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x548C;&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#x5185;&#x5BB9;&#xFF0C;&#x5BFC;&#x81F4;&#x505A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#x3002; &#x7279;&#x522B;&#x662F;&#x5BF9;&#x5DF2;&#x6709;&#x7CFB;&#x7EDF;&#x505A;&#x6539;&#x9020;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x5148;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x4FDD;&#x8BC1;&#x540E;&#x7EED;&#x7684;&#x91CD;&#x6784;&#x548C;&#x4FEE;&#x6539;&#x4E0D;&#x504F;&#x79BB;&#x539F;&#x6765;&#x7684;&#x4E1A;&#x52A1;&#x9700;&#x6C42;&#x3002; &#x8FD9;&#x6837;&#x95EE;&#x9898;&#x5C31;&#x6765;&#x4E86;&#xFF1A;&#x8BE5;&#x5982;&#x4F55;&#x6A21;&#x62DF;&#x5916;&#x90E8;&#x7CFB;&#x7EDF;&#x8FD4;&#x56DE;&#x5404;&#x79CD;&#x6B63;&#x5E38;&#x548C;&#x5F02;&#x5E38;&#x7684;&#x54CD;&#x5E94;&#x5185;&#x5BB9;&#x5462;&#xFF1F; &#x529E;&#x6CD5;&#x603B;&#x662F;&#x6709;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x7528;Jetty&#x5B9E;&#x73B0;Http Server Mock&#xFF0C;&#x6A21;&#x62DF;&#x670D;&#x52A1;&#x7AEF;&#x8FD4;&#x56DE;&#x5404;&#x79CD;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002; &#x9884;&#x5907; JUnit 4.11 Jetty 7.6.9 &#x4E1A;&#x52A1;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;123456789101112131415161718192021222324252627282930313233343536373839404142package cn.aofeng.demo.jetty;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.URL;import org.apache.commons.io.IOUtils;/** * &#x6293;&#x53D6;&#x9875;&#x9762;&#x5185;&#x5BB9;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class HttpGet { public String getSomeThing(String urlStr) throws IOException { URL url = new URL(urlStr); HttpURLConnection urlConn = (HttpURLConnection) url.openConnection(); urlConn.setConnectTimeout(3000); urlConn.setRequestMethod(&quot;GET&quot;); urlConn.connect(); InputStream ins = null; try { if (200 == urlConn.getResponseCode()) { ins = urlConn.getInputStream(); ByteArrayOutputStream outs = new ByteArrayOutputStream(1024); IOUtils.copy(ins, outs); return outs.toString(&quot;UTF-8&quot;); } } catch (IOException e) { throw e; } finally { IOUtils.closeQuietly(ins); } return null; }} &#x7528;Jetty&#x5B9E;&#x73B0;&#x7684;Http Server Mock&#x6E90;&#x7801;&#x4E0B;&#x8F7D;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990package cn.aofeng.demo.jetty;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.eclipse.jetty.server.Handler;import org.eclipse.jetty.server.Request;import org.eclipse.jetty.server.Server;import org.eclipse.jetty.server.handler.AbstractHandler;/** * HTTP&#x670D;&#x52A1;&#x5668;MOCK&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x65F6;&#x6A21;&#x62DF;HTTP&#x670D;&#x52A1;&#x5668;&#x7684;&#x54CD;&#x5E94;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class HttpServerMock { public final static int DEFAULT_PORT = 9191; public final static String DEFAULT_CONTENT_TYPE = &quot;application/json&quot;; public final static int DEFAULT_STATUS_CODE=HttpServletResponse.SC_OK; private Server _httpServer; private int _port; public HttpServerMock() { _port = DEFAULT_PORT; } public HttpServerMock(int port) { _port = port; } /** * &#x542F;&#x52A8;Jetty&#x670D;&#x52A1;&#x5668;&#x3002;&#x9ED8;&#x8BA4;&#x7684;&#x54CD;&#x5E94;status code&#x4E3A;&quot;200&quot;&#xFF0C;content type&#x4E3A;&quot;application/json&quot;&#x3002; * @param content &#x54CD;&#x5E94;&#x5185;&#x5BB9; */ public void start(String content) throws Exception { start(content, DEFAULT_CONTENT_TYPE, DEFAULT_STATUS_CODE); } /** * &#x542F;&#x52A8;Jetty&#x670D;&#x52A1;&#x5668;&#x3002;&#x9ED8;&#x8BA4;&#x7684;&#x54CD;&#x5E94;status code&#x4E3A;&quot;200&quot;&#x3002; * @param content &#x54CD;&#x5E94;&#x5185;&#x5BB9; * @param contentType &#x54CD;&#x5E94;&#x5185;&#x5BB9;&#x7684;MIME&#x7C7B;&#x578B; */ public void start(String content, String contentType) throws Exception { start(content, contentType, DEFAULT_STATUS_CODE); } /** * &#x542F;&#x52A8;Jetty&#x670D;&#x52A1;&#x5668;&#x3002; * @param content &#x54CD;&#x5E94;&#x5185;&#x5BB9; * @param contentType &#x54CD;&#x5E94;&#x5185;&#x5BB9;&#x7684;MIME&#x7C7B;&#x578B; * @param statuCode &#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801; */ public void start(String content, String contentType, int statuCode) throws Exception { _httpServer = new Server(_port); _httpServer.setHandler(createHandler(content, contentType, statuCode)); _httpServer.start(); } /** * &#x505C;&#x6B62;Jetty&#x670D;&#x52A1;&#x5668;&#x3002; */ public void stop() throws Exception { if (null != _httpServer) { _httpServer.stop(); _httpServer = null; } } private Handler createHandler(final String content, final String contentType, final int statusCode) { return new AbstractHandler() { @Override public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(contentType); response.setStatus(statusCode); baseRequest.setHandled(true); response.getWriter().print(content); } }; }} &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package cn.aofeng.demo.jetty;import static org.junit.Assert.*;import org.junit.After;import org.junit.Before;import org.junit.Test;/** * {@link HttpGet}&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;&#x8042;&#x52C7;&lt;/a&gt; */public class HttpGetTest { private HttpServerMock _mock; private HttpGet _httpGet = new HttpGet(); @Before public void setUp() throws Exception { _mock = new HttpServerMock(); } @After public void tearDown() throws Exception { if (null != _mock) { _mock.stop(); } } /** * &#x7528;&#x4F8B;&#xFF1A;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;200&#x4E14;&#x6709;&#x54CD;&#x5E94;&#x5185;&#x5BB9;&#x3002; */ @Test public void testGetSomeThing4Success() throws Exception { String response = &quot;Hello, The World!&quot;; _mock.start(response, &quot;text/plain&quot;); String content = _httpGet.getSomeThing(&quot;http://localhost:9191/hello&quot;); assertEquals(response, content); } /** * &#x7528;&#x4F8B;&#xFF1A;&#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#x4E3A;&#x975E;200&#x3002; */ @Test public void testGetSomeThing4Fail() throws Exception { String response = &quot;Hello, The World!&quot;; _mock.start(response, &quot;text/plain&quot;, 500); String content = _httpGet.getSomeThing(&quot;http://localhost:9191/hello&quot;); assertNull(content); }}","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"单元测试","slug":"单元测试","permalink":"http://aofeng.github.io/tags/单元测试/"},{"name":"jetty","slug":"jetty","permalink":"http://aofeng.github.io/tags/jetty/"},{"name":"mock","slug":"mock","permalink":"http://aofeng.github.io/tags/mock/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"多线程池执行异步任务","slug":"多线程池执行异步任务","date":"2014-03-31T13:34:34.000Z","updated":"2016-11-08T07:14:19.000Z","comments":true,"path":"2014/03/31/多线程池执行异步任务/","link":"","permalink":"http://aofeng.github.io/2014/03/31/多线程池执行异步任务/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x5728;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x548C;&#x8BBE;&#x8BA1;&#x4E2D;&#xFF0C;&#x4F1A;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x5C06;&#x64CD;&#x4F5C;&#x5F02;&#x6B65;&#x5316;&#xFF0C;&#x7F29;&#x77ED;&#x54CD;&#x5E94;&#x65F6;&#x95F4;&#xFF0C;&#x63D0;&#x5347;&#x6027;&#x80FD;&#x3002; &#x5C06;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x653E;&#x5165;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x8FD9;&#x662F;&#x8BB8;&#x591A;&#x4EBA;&#x90FD;&#x77E5;&#x9053;&#x7684;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x591A;&#x4E86;&#x4E4B;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x5168;&#x653E;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF1A; &#x4E0D;&#x540C;&#x4EFB;&#x52A1;&#x56E0;&#x5176;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x4E0D;&#x540C;&#xFF0C;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x4E0D;&#x540C;&#x3002;&#x5982;&#x679C;&#x6709;&#x5927;&#x91CF;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x8F83;&#x4E45;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#xFF0C;&#x4F1A;&#x963B;&#x585E;&#x90A3;&#x4E9B;&#x6267;&#x884C;&#x975E;&#x5E38;&#x5FEB;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#xFF0C;&#x5BFC;&#x81F4;&#x539F;&#x672C;&#x5F88;&#x5FEB;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x4E5F;&#x53D8;&#x6162;&#x3002; &#x64CD;&#x4F5C;&#x672C;&#x5730;&#x5185;&#x5BB9;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x548C;&#x64CD;&#x4F5C;&#x8FDC;&#x7A0B;&#x5185;&#x5BB9;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x3002;&#x5982;&#x679C;&#x653E;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#xFF0C;&#x5728;&#x7F51;&#x7EDC;&#x51FA;&#x73B0;&#x6545;&#x969C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x5927;&#x91CF;&#x7684;&#x4EFB;&#x52A1;&#x79EF;&#x538B;&#xFF0C;&#x5BFC;&#x81F4;&#x6267;&#x884C;&#x672C;&#x5730;&#x5185;&#x5BB9;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x4E5F;&#x53D7;&#x5F71;&#x54CD;&#x3002; &#x73B0;&#x5B9E;&#x751F;&#x6D3B;&#x4E2D;&#xFF0C;&#x673A;&#x52A8;&#x8F66;&#x884C;&#x9A76;&#x65F6;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x884C;&#x9A76;&#x7684;&#x901F;&#x5EA6;&#x5212;&#x5206;&#x8D85;&#x8F66;&#x9053;&#x3001;&#x5FEB;&#x8F66;&#x9053;&#x3001;&#x6162;&#x8F66;&#x9053;&#x548C;&#x5E94;&#x6025;&#x8F66;&#x9053;&#xFF0C;&#x907F;&#x514D;&#x901F;&#x5EA6;&#x6162;&#x7684;&#x8F66;&#x8F86;&#x963B;&#x585E;&#x901F;&#x5EA6;&#x5FEB;&#x7684;&#x8F66;&#x8F86;&#x3002; &#x540C;&#x7406;&#xFF0C;&#x5C06;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x653E;&#x5165;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x4E0A;&#x9762;&#x7684;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#x3002; threadpool4j&#x662F;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86;&#x591A;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x7C7B;&#x5E93;&#xFF0C;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1&#x3001;&#x83B7;&#x53D6;threadpool4j&#x6E90;&#x7801;&#x3002;1git clone https://github.com/aofeng/threadpool4j 2&#x3001;&#x7F16;&#x8BD1;&#x6E90;&#x7801;&#x751F;&#x6210;jar&#x3002;&#x8FDB;&#x5165;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;ant&#x811A;&#x672C;&#xFF1A;1ant &#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;dist&#x76EE;&#x5F55;&#xFF0C;&#x4E0B;&#x9762;&#x6709;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x3002;&#x5982;&#xFF1A; threadpool4j-1.0.0-src.jar &#x6E90;&#x7801;jarthreadpool4j-1.0.0.jar &#x7528;&#x4E8E;&#x53D1;&#x5E03;&#x7684;&#x4E8C;&#x8FDB;&#x5236;jar &#x5B83;&#x7684;&#x4F9D;&#x8D56;&#x7C7B;&#x5E93;&#x5728;lib&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x6709;common4j-.jar&#xFF0C;log4j-1..jar&#x3002; 3&#x3001;&#x914D;&#x7F6E;&#x591A;&#x7EBF;&#x7A0B;&#x6C60;&#x3002;&#x5728;&#x5E94;&#x7528;&#x7684;CLASSPATH&#x7684;&#x4EFB;&#x610F;&#x8DEF;&#x5F84;&#xFF08;&#x5982;&#xFF1A;&#x5E94;&#x7528;&#x7684;classes&#x76EE;&#x5F55;&#xFF09;&#x4E0B;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;threadpool4j.xml&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A;123456789101112131415161718&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;threadpool4j&gt; &lt;!-- &#x81F3;&#x5C11;&#x8981;&#x6709;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;default --&gt; &lt;pool name=&quot;default&quot;&gt; &lt;corePoolSize&gt;30&lt;/corePoolSize&gt; &lt;maxPoolSize&gt;150&lt;/maxPoolSize&gt; &lt;!-- &#x7EBF;&#x7A0B;&#x7A7A;&#x95F2;&#x5B58;&#x8BDD;&#x7684;&#x65F6;&#x95F4;&#x3002;&#x5355;&#x4F4D;&#xFF1A;&#x79D2; --&gt; &lt;keepAliveTime&gt;5&lt;/keepAliveTime&gt; &lt;workQueueSize&gt;100000&lt;/workQueueSize&gt; &lt;/pool&gt; &lt;pool name=&quot;other&quot;&gt; &lt;corePoolSize&gt;10&lt;/corePoolSize&gt; &lt;maxPoolSize&gt;100&lt;/maxPoolSize&gt; &lt;keepAliveTime&gt;10&lt;/keepAliveTime&gt; &lt;workQueueSize&gt;10000&lt;/workQueueSize&gt; &lt;/pool&gt;&lt;/threadpool4j&gt; 4&#x3001;&#x5728;&#x5E94;&#x7528;&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x521D;&#x59CB;&#x5316;&#x64CD;&#x4F5C;&#x3002;1ThreadPool.getInstance().init(); // &#x53EA;&#x9700;&#x6267;&#x884C;&#x4E00;&#x6B21; &#x8F93;&#x51FA;&#x7684;&#x65E5;&#x5FD7;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A; 2014-03-31 21:13:13,925 INFO initialization 2 thread pool successfully 5&#x3001;&#x5411;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x63D0;&#x4EA4;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x3002;123456789101112131415Runnable task1 = new Runnable() { @Override public void run() { System.out.println(&quot;&#x6267;&#x884C;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;1&quot;); }};ThreadPool.getInstance().submit(task1); // &#x672A;&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#x6C60;&#x540D;&#x79F0;&#x65F6;&#xFF0C;&#x4EFB;&#x52A1;&#x4F1A;&#x63D0;&#x4EA4;&#x5230;&#x540D;&#x4E3A;&quot;default&quot;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C;Runnable task2 = new Runnable() { @Override public void run() { System.out.println(&quot;&#x6267;&#x884C;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;2&quot;); }};ThreadPool.getInstance().submit(task2, &quot;other&quot;); // &#x5C06;task2&#x63D0;&#x4EA4;&#x5230;&#x540D;&#x4E3A;&quot;other&quot;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C; 6&#x3001;&#x5728;&#x5E94;&#x7528;&#x5173;&#x95ED;&#x65F6;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x8D44;&#x6E90;&#x91CA;&#x653E;&#x64CD;&#x4F5C;&#xFF0C;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#x7684;&#x8FC7;&#x7A0B;&#x4F1A;&#x5C06;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x90FD;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x3002;1ThreadPool.getInstance().destroy(); &#x8F93;&#x51FA;&#x7684;&#x65E5;&#x5FD7;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A; 2014-03-31 21:16:48,512 INFO shutdown the thread pool other2014-03-31 21:16:48,513 INFO shutdown the thread pool default","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"多线程","slug":"多线程","permalink":"http://aofeng.github.io/tags/多线程/"},{"name":"异步","slug":"异步","permalink":"http://aofeng.github.io/tags/异步/"},{"name":"线程池","slug":"线程池","permalink":"http://aofeng.github.io/tags/线程池/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"在CentOS 5/Redhat 5上编译源码安装pcre","slug":"在CentOS-5-Redhat-5上编译源码安装pcre","date":"2014-01-21T06:22:06.000Z","updated":"2016-11-08T07:20:04.000Z","comments":true,"path":"2014/01/21/在CentOS-5-Redhat-5上编译源码安装pcre/","link":"","permalink":"http://aofeng.github.io/2014/01/21/在CentOS-5-Redhat-5上编译源码安装pcre/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x51C6;&#x5907; &#x7F16;&#x8BD1;&#x5B89;&#x88C5; &#x6D4B;&#x8BD5; &#x51C6;&#x5907;1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;&#x3002;&#x6253;&#x5F00;&#x547D;&#x4EE4;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1wget http://sourceforge.net/projects/pcre/files/pcre/8.34/pcre-8.34.zip/download 2&#x3001;&#x89E3;&#x538B;&#x3002;12unzip pcre-8.34.zip -d build/cd build/pcre-8.34/ &#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x5728;&#x7EC8;&#x7AEF;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;123./configure --prefix=/home/nieyong/local/pcre-8.34 --enable-pcre16 --enable-pcre32 --enable-utf --enable-pcregrep-libz --enable-pcregrep-libbz2 --enable-unicode-propertiesmake make install &#x6CE8;&#xFF1A;--prefix=&#x540E;&#x9762;&#x7684;&#x8DEF;&#x5F84;&#x9700;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x9645;&#x73AF;&#x5883;&#x4FEE;&#x6539;&#x3002; &#x6D4B;&#x8BD5;&#x8FDB;&#x5165;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x7684;bin&#x5B50;&#x76EE;&#x5F55;&#xFF08;/home/nieyong/local/pcre-8.34/bin&#xFF09;&#xFF0C;&#x5728;&#x7EC8;&#x7AEF;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1./pcretest -C &#x5C06;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; PCRE version 8.34 2013-12-15Compiled with 8-bit support UTF-8 support 16-bit support UTF-16 support 32-bit support UTF-32 support Unicode properties support No just-in-time compiler support Newline sequence is LF \\R matches all Unicode newlines Internal link size = 2 POSIX malloc threshold = 10 Parentheses nest limit = 250 Default match limit = 10000000 Default recursion depth limit = 10000000 Match recursion uses stack","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"centos","slug":"centos","permalink":"http://aofeng.github.io/tags/centos/"},{"name":"pcre","slug":"pcre","permalink":"http://aofeng.github.io/tags/pcre/"},{"name":"redhat","slug":"redhat","permalink":"http://aofeng.github.io/tags/redhat/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"安装logstash+kibana+elasticsearch+redis搭建集中式日志分析平台","slug":"安装logstash-kibana-elasticsearch-redis搭建集中式日志分析平台","date":"2014-01-16T11:40:57.000Z","updated":"2016-11-08T07:34:15.000Z","comments":true,"path":"2014/01/16/安装logstash-kibana-elasticsearch-redis搭建集中式日志分析平台/","link":"","permalink":"http://aofeng.github.io/2014/01/16/安装logstash-kibana-elasticsearch-redis搭建集中式日志分析平台/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; elasticsearch Redis logstash&#x65E5;&#x5FD7;&#x751F;&#x6210;&#x5668;&#xFF08;shipper&#xFF09; logstash&#x65E5;&#x5FD7;&#x7D22;&#x5F15;&#x5668;&#xFF08;indexer&#xFF09; logstash WEB&#x754C;&#x9762;&#xFF08;kibana&#xFF09; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x672C;&#x6587;&#x662F;&#x53C2;&#x8003;logstash&#x5B98;&#x65B9;&#x6587;&#x6863;&#x5B9E;&#x8DF5;&#x7684;&#x7B14;&#x8BB0;&#xFF0C;&#x642D;&#x5EFA;&#x73AF;&#x5883;&#x548C;&#x6240;&#x9700;&#x7EC4;&#x4EF6;&#x5982;&#x4E0B;&#xFF1A; Redhat 5.7 64bit / CentOS 5.x JDK 1.6.0_45 logstash 1.3.2 (&#x5185;&#x5E26;kibana) elasticsearch 0.90.10 redis 2.8.4 &#x642D;&#x5EFA;&#x7684;&#x96C6;&#x4E2D;&#x5F0F;&#x65E5;&#x5FD7;&#x5206;&#x6790;&#x5E73;&#x53F0;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; elasticsearch1&#x3001;&#x4E0B;&#x8F7D;elasticsearch&#x3002;1wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.10.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x540E;&#xFF0C;&#x8FDB;&#x5165;bin&#x76EE;&#x5F55;&#x3002;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF0C;&#x8BA9;elasticsearch&#x4EE5;&#x524D;&#x53F0;&#x65B9;&#x5F0F;&#x542F;&#x52A8;&#xFF1A;1./elasticsearch -f [2014-01-16 16:21:31,825][INFO ][node ] [Saint Elmo] version[0.90.10], pid[32269], build[0a5781f/2014-01-10T10:18:37Z][2014-01-16 16:21:31,826][INFO ][node ] [Saint Elmo] initializing &#x2026;[2014-01-16 16:21:31,836][INFO ][plugins ] [Saint Elmo] loaded [], sites [][2014-01-16 16:21:35,425][INFO ][node ] [Saint Elmo] initialized[2014-01-16 16:21:35,425][INFO ][node ] [Saint Elmo] starting &#x2026;[2014-01-16 16:21:35,578][INFO ][transport ] [Saint Elmo] bound_address {inet[/0.0.0.0:9300]}, publish_address {inet[/10.0.2.15:9300]} Redis1&#x3001;&#x5176;&#x5B89;&#x88C5;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x6211;&#x7684;&#x53E6;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;Redis&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x3002; 2&#x3001;&#x8FDB;&#x5165;&#x5176;bin&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF0C;&#x4F7F;&#x4E4B;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;debug&#x4FE1;&#x606F;&#xFF1A;1./redis-server --loglevel verbose [32470] 16 Jan 16:45:57.330 * The server is now ready to accept connections on port 6379[32470] 16 Jan 16:45:57.330 - 0 clients connected (0 slaves), 283536 bytes in use logstash&#x65E5;&#x5FD7;&#x751F;&#x6210;&#x5668;&#xFF08;shipper&#xFF09;1&#x3001;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A;shipper.conf&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314151617input { stdin { type =&gt; &quot;example&quot; }}output { stdout { codec =&gt; rubydebug } redis { host =&gt; &quot;127.0.0.1&quot; port =&gt; 6379 data_type =&gt; &quot;list&quot; key =&gt; &quot;logstash&quot; }} 2&#x3001;&#x542F;&#x52A8;shipper&#x3002;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1java -jar logstash-1.3.2-flatjar.jar agent -f shipper.conf &#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x5C06;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF1A; Using milestone 2 output plugin &#x2018;redis&#x2019;. This plugin should be stable, but if you see strange behavior, please let us know! For more information on plugin milestones, see http://logstash.net/docs/1.3.2/plugin-milestones {:level=&gt;:warn} &#x7136;&#x540E;&#x5728;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x76F4;&#x63A5;&#x6309;&#x56DE;&#x8F66;&#xFF0C;&#x5C06;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; { &#x201C;message&#x201D; =&gt; &#x201C;&#x201D;, &#x201C;@version&#x201D; =&gt; &#x201C;1&#x201D;, &#x201C;@timestamp&#x201D; =&gt; &#x201C;2014-01-16T08:15:19.400Z&#x201D;, &#x201C;type&#x201D; =&gt; &#x201C;example&#x201D;, &#x201C;host&#x201D; =&gt; &#x201C;redhat&#x201D;} &#x8FD9;&#x4E2A;json&#x4FE1;&#x606F;&#x5C06;&#x53D1;&#x9001;&#x7ED9;redis&#xFF0C; &#x540C;&#x65F6;redis&#x7684;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x5C06;&#x51FA;&#x73B0;&#x7C7B;&#x4F3C;&#x4E0B;&#x9762;&#x7684;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF1A; [32470] 16 Jan 17:09:23.604 - Accepted 127.0.0.1:44640[32470] 16 Jan 17:09:27.127 - DB 0: 1 keys (0 volatile) in 4 slots HT.[32470] 16 Jan 17:09:27.127 - 1 clients connected (0 slaves), 304752 bytes in use logstash&#x65E5;&#x5FD7;&#x7D22;&#x5F15;&#x5668;&#xFF08;indexer&#xFF09;1&#x3001;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A;indexer.conf&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314151617181920input { redis { host =&gt; &quot;127.0.0.1&quot; # these settings should match the output of the agent data_type =&gt; &quot;list&quot; key =&gt; &quot;logstash&quot; # We use the &apos;json&apos; codec here because we expect to read # json events from redis. codec =&gt; json }}output { stdout { debug =&gt; true debug_format =&gt; &quot;json&quot;} elasticsearch { host =&gt; &quot;127.0.0.1&quot; }} 2&#x3001;&#x542F;&#x52A8;&#x65E5;&#x5FD7;&#x7D22;&#x5F15;&#x5668;&#x3002;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1java -jar logstash-1.3.2-flatjar.jar agent -f indexer.conf &#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x5C06;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF1A; Using milestone 2 input plugin &#x2018;redis&#x2019;. This plugin should be stable, but if you see strange behavior, please let us know! For more information on plugin milestones, see http://logstash.net/docs/1.3.2/plugin-milestones {:level=&gt;:warn}You are using a deprecated config setting &#x201C;debug_format&#x201D; set in stdout. Deprecated settings will continue to work, but are scheduled for removal from logstash in the future. If you have any questions about this, please visit the #logstash channel on freenode irc. {:name=&gt;&#x201D;debug_format&#x201D;, :plugin=&gt;, :level=&gt;:warn} &#x7D22;&#x5F15;&#x5668;&#x4ECE;Redis&#x63A5;&#x6536;&#x5230;&#x4FE1;&#x606F;&#xFF0C;&#x5728;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x4F1A;&#x663E;&#x793A;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#x7684;&#x4FE1;&#x606F;&#xFF1A; {&#x201C;message&#x201D;:&#x201D;&#x201D;,&#x201D;@version&#x201D;:&#x201D;1&#x201D;,&#x201D;@timestamp&#x201D;:&#x201D;2014-01-16T17:10:03.831+08:00&#x201D;,&#x201D;type&#x201D;:&#x201D;example&#x201D;,&#x201D;host&#x201D;:&#x201D;redhat&#x201D;}{&#x201C;message&#x201D;:&#x201D;&#x201D;,&#x201D;@version&#x201D;:&#x201D;1&#x201D;,&#x201D;@timestamp&#x201D;:&#x201D;2014-01-16T17:13:20.545+08:00&#x201D;,&#x201D;type&#x201D;:&#x201D;example&#x201D;,&#x201D;host&#x201D;:&#x201D;redhat&#x201D;} logstash WEB&#x754C;&#x9762;&#xFF08;kibana&#xFF09;1&#x3001;&#x542F;&#x52A8;kibana&#x3002;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1java -jar logstash-1.3.2-flatjar.jar web 2&#x3001;&#x6253;&#x5F00;&#x6D4F;&#x89C8;&#x5668;&#xFF08;&#x987B;&#x652F;&#x6301;HTML5&#xFF09;&#xFF0C;&#x8F93;&#x5165;&#x5730;&#x5740;&#xFF1A;http://127.0.0.1:9292/index.html#/dashboard/file/logstash.json&#x3002; &#x754C;&#x9762;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x53C2;&#x8003;&#x8D44;&#x6599; logstash-getting-started-centralized &#x8BBF;&#x8C08;&#x4E0E;&#x4E66;&#x8BC4;&#xFF1A;&#x300A;LogStash&#xFF0C;&#x4F7F;&#x65E5;&#x5FD7;&#x7BA1;&#x7406;&#x66F4;&#x7B80;&#x5355;&#x300B;","categories":[{"name":"大数据","slug":"大数据","permalink":"http://aofeng.github.io/categories/大数据/"},{"name":"Logstash","slug":"大数据/Logstash","permalink":"http://aofeng.github.io/categories/大数据/Logstash/"}],"tags":[{"name":"logstash","slug":"logstash","permalink":"http://aofeng.github.io/tags/logstash/"},{"name":"kibana","slug":"kibana","permalink":"http://aofeng.github.io/tags/kibana/"},{"name":"elasticsearch","slug":"elasticsearch","permalink":"http://aofeng.github.io/tags/elasticsearch/"}],"keywords":[{"name":"大数据","slug":"大数据","permalink":"http://aofeng.github.io/categories/大数据/"},{"name":"Logstash","slug":"大数据/Logstash","permalink":"http://aofeng.github.io/categories/大数据/Logstash/"}]},{"title":"在CentOS 5/Redhat 5上编译源码安装Redis","slug":"在CentOS-5-Redhat-5上编译源码安装Redis","date":"2014-01-16T07:49:56.000Z","updated":"2016-11-08T07:50:32.000Z","comments":true,"path":"2014/01/16/在CentOS-5-Redhat-5上编译源码安装Redis/","link":"","permalink":"http://aofeng.github.io/2014/01/16/在CentOS-5-Redhat-5上编译源码安装Redis/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x73AF;&#x5883; &#x7F16;&#x8BD1;&#x5B89;&#x88C5;Redis &#x542F;&#x52A8;Redis &#x6D4B;&#x8BD5;Redis &#x53C2;&#x8003;&#x8D44;&#x6599; &#x73AF;&#x5883; Redhat 5.7 64bit / CentOS 5 64bit Gcc 4.1.2 &#x7F16;&#x8BD1;&#x5B89;&#x88C5;Redis&#x4E09;&#x6B65;&#x66F2;&#xFF1A;&#x4E0B;&#x8F7D;&#x3001;&#x89E3;&#x538B;&#x3001;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x3002;1234wget http://download.redis.io/releases/redis-2.8.4.tar.gztar xzvf redis-2.8.4.tar.gz -C /home/nieyong/download/buildcd /home/nieyong/download/build/redis-2.8.4make PREFIX=/home/nieyong/local/redis-2.8.4 install &#x6CE8;&#xFF1A; &#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x5B89;&#x88C5;&#x8BF4;&#x660E;&#x53EF;&#x67E5;&#x770B;Redis&#x7684;README&#x3002; &#x547D;&#x4EE4;&#x4E2D;&#x7684;&#x8DEF;&#x5F84;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x9645;&#x73AF;&#x5883;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x3002; &#x542F;&#x52A8;Redis&#x8FDB;&#x5165;Redis&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x7684;bin&#x5B50;&#x76EE;&#x5F55;&#x3002;12cd /home/nieyong/local/redis-2.8.4/bin./redis-server --port 9999 &#x63A7;&#x5236;&#x53F0;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF1A; &#x6D4B;&#x8BD5;Redis&#x8FDB;&#x5165;Redis&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x7684;bin&#x5B50;&#x76EE;&#x5F55;&#x3002;1./redis-cli -h 127.0.0.1 -p 9999 127.0.0.1:9999&gt; pingPONG127.0.0.1:9999&gt; set name &#x8042;&#x52C7;OK127.0.0.1:9999&gt; get name&#x201C;\\xe8\\x81\\x82\\xe5\\x8b\\x87&#x201D;127.0.0.1:9999&gt; set username nieyongOK127.0.0.1:9999&gt; get username&#x201C;nieyong&#x201D; &#x53C2;&#x8003;&#x8D44;&#x6599; http://redis.io/download","categories":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Redis","slug":"开源组件/Redis","permalink":"http://aofeng.github.io/categories/开源组件/Redis/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"redis","slug":"redis","permalink":"http://aofeng.github.io/tags/redis/"}],"keywords":[{"name":"开源组件","slug":"开源组件","permalink":"http://aofeng.github.io/categories/开源组件/"},{"name":"Redis","slug":"开源组件/Redis","permalink":"http://aofeng.github.io/categories/开源组件/Redis/"}]},{"title":"使用jmx-util简单、快速地进行JMX服务开发","slug":"使用jmx-util简单、快速地进行JMX服务开发","date":"2013-12-19T11:31:54.000Z","updated":"2016-11-08T08:05:34.000Z","comments":true,"path":"2013/12/19/使用jmx-util简单、快速地进行JMX服务开发/","link":"","permalink":"http://aofeng.github.io/2013/12/19/使用jmx-util简单、快速地进行JMX服务开发/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x529F;&#x80FD; &#x7C7B;&#x5173;&#x7CFB;&#x56FE; &#x4F7F;&#x7528;&#x8BF4;&#x660E; &#x4E0B;&#x8F7D; JMX&#x76F8;&#x5173;&#x53C2;&#x8003;&#x8D44;&#x6599; &#x56DB;&#x5E74;&#x4E4B;&#x524D;&#xFF0C;&#x6B63;&#x5728;&#x505A;&#x5927;&#x578B;&#x90AE;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x4E3B;&#x8981;&#x8D1F;&#x8D23;&#x57FA;&#x7840;&#x7EC4;&#x4EF6;&#x7684;&#x5F00;&#x53D1;&#x548C;&#x7EF4;&#x62A4;&#xFF0C;&#x5982;&#xFF1A;&#x7EBF;&#x7A0B;&#x6C60;&#x3001;&#x8FDE;&#x63A5;&#x6C60;&#x3001;&#x57FA;&#x4E8E;TCP&#x81EA;&#x5B9E;&#x73B0;&#x7684;HTTP&#x957F;&#x8FDE;&#x63A5;&#x3002;&#x5F53;&#x65F6;&#xFF0C;&#x60F3;&#x5B9E;&#x65F6;&#x4E86;&#x89E3;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x4E2D;&#x5404;&#x4E2A;&#x7EC4;&#x4EF6;&#x7684;&#x5185;&#x90E8;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#x548C;&#x5B9A;&#x65F6;&#x83B7;&#x53D6;&#x72B6;&#x6001;&#x6570;&#x636E;&#x751F;&#x6210;&#x62A5;&#x8868;&#xFF0C;&#x4ECE;&#x800C;&#x5206;&#x6790;&#x548C;&#x638C;&#x63A7;&#x7CFB;&#x7EDF;&#x7684;&#x5065;&#x5EB7;&#x72B6;&#x51B5;&#x8D8B;&#x52BF;&#xFF0C;&#x5C31;&#x5229;&#x7528;JMX&#x5B9E;&#x73B0;&#x4E86;&#x8BE5;&#x529F;&#x80FD;&#x3002;&#x4ECE;&#x516C;&#x53F8;&#x79BB;&#x804C;&#x540E;&#xFF0C;&#x5229;&#x7528;&#x7A7A;&#x95F2;&#x65F6;&#x95F4;&#x81EA;&#x5DF1;&#x5199;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#xFF0C;&#x60F3;&#x5230;&#x4E86;&#x4E00;&#x79CD;&#x66F4;&#x9AD8;&#x6548;&#x7684;&#x5B9E;&#x73B0;JMX&#x670D;&#x52A1;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#x5C31;&#x53EF;&#x4EE5;&#x641E;&#x5B9A;&#x4E00;&#x4E2A;JMX&#x670D;&#x52A1;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x73B0;&#x5728;&#x7684;jmx-util&#x3002; &#x529F;&#x80FD; &#x5C01;&#x88C5;&#x666E;&#x901A;&#x7684;Java&#x5BF9;&#x8C61;&#xFF0C;&#x4F7F;&#x4E4B;&#x6210;&#x4E3A;&#x7B26;&#x5408;JMX&#x89C4;&#x8303;&#x7684;MBean&#x3002; &#x6839;&#x636E;&#x6307;&#x5B9A;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x66B4;&#x9732;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x3002; &#x53EF;&#x81EA;&#x5B9A;&#x4E49;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x8FC7;&#x6EE4;&#x6307;&#x5B9A;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x3002; &#x7C7B;&#x5173;&#x7CFB;&#x56FE; IntrospectionMBean&#x3002;&#x5B9E;&#x73B0;&#x4E86;javax.management.DynamicMBean&#xFF0C;&#x8D1F;&#x8D23;&#x5C06;&#x666E;&#x901A;Java&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x6210;MBean&#xFF0C;&#x5B83;&#x4F1A;&#x8C03;&#x7528;IntrospectionFilter&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x8FC7;&#x6EE4;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#x3002; IntrospectionFilter&#x3002;&#x8FC7;&#x6EE4;&#x5668;&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#xFF0C;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#x7C7B;&#x6709;AbstractFilter&#x3001;AttributeFilter&#x3001;MethodFilter&#x3002;&#x53EF;&#x6839;&#x636E;&#x81EA;&#x5DF2;&#x7684;&#x9700;&#x8981;&#x7EE7;&#x627F;AbstracFilter&#x7C7B;&#x6216;IntrospectionFilter&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#x8FC7;&#x6EE4;&#x5668;&#x3002; Description&#x3002;&#x63CF;&#x8FF0;&#x6CE8;&#x89E3;&#xFF0C;&#x53EF;&#x5E94;&#x7528;&#x4E8E;&#x7C7B;&#x548C;&#x65B9;&#x6CD5;&#x3002; &#x4F7F;&#x7528;&#x8BF4;&#x660E;1&#x3001;&#x5C06;jmx-util-1.0.0.jar&#x52A0;&#x5165;&#x9879;&#x76EE;&#x7684;classpath&#x3002; 2&#x3001;&#x7F16;&#x5199;&#x4E00;&#x4E2A;POJO&#x7C7B;&#x3002;&#x6E90;&#x4EE3;&#x7801; 3&#x3001;&#x7F16;&#x5199;&#x6CE8;&#x518C;MBean&#x5BF9;&#x8C61;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x5B8C;&#x6574;&#x7684;&#x6E90;&#x4EE3;&#x7801; 123456789101112131415161718192021222324252627282930public class HelloJmx { public static void main(String[] args) throws Exception { People zhs = new People(); zhs.setUserName(&quot;&#x5F20;&#x4E09;&quot;); zhs.setAge(16); zhs.setSex(&apos;M&apos;); People ls = new People(); ls.setUserName(&quot;&#x674E;&#x56DB;&quot;); ls.setAge(18); ls.setSex(&apos;M&apos;); MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer(); // &#x5F20;&#x4E09;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x8FC7;&#x6EE4;&#x5668; ObjectName zhsObjectName = new ObjectName(&quot;cn.aofeng.jmx&quot;, &quot;name&quot;, &quot;&#x5F20;&#x4E09;&quot;); Object zhsMBean = new IntrospectionMBean(zhs, People.class); mbeanServer.registerMBean(zhsMBean, zhsObjectName); // &#x674E;&#x56DB;&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x8FC7;&#x6EE4;&#x5668; IntrospectionFilter attributeFilter = new CustomAttributeFilter(); IntrospectionFilter methodFilter = new CustomMethodFilter(); ObjectName lsObjectName = new ObjectName(&quot;cn.aofeng.jmx&quot;, &quot;name&quot;, &quot;&#x674E;&#x56DB;&quot;); Object lsMBean = new IntrospectionMBean(ls, People.class, attributeFilter, methodFilter); mbeanServer.registerMBean(lsMBean, lsObjectName); Thread.sleep(1000 * 1000); }} 1234567public static class CustomAttributeFilter extends AttributeFilter { public CustomAttributeFilter() { super(); super.filterNames.add(&quot;Class&quot;); }} 123456789101112public static class CustomMethodFilter extends MethodFilter { public CustomMethodFilter() { super(); super.filterNames.add(&quot;equals&quot;); super.filterNames.add(&quot;hashCode&quot;); super.filterNames.add(&quot;toString&quot;); super.filterNames.add(&quot;wait&quot;); super.filterNames.add(&quot;notify&quot;); super.filterNames.add(&quot;notifyAll&quot;); }} 4&#x3001;&#x8FD0;&#x884C;HelloJmx&#x3002; 5&#x3001;&#x6253;&#x5F00;JConsole&#xFF0C;&#x9009;&#x62E9;HelloJmx&#x7684;&#x8FDB;&#x7A0B;&#x3002; 6&#x3001;&#x70B9;&#x51FB;&#x8FDE;&#x63A5;&#x6309;&#x94AE;&#xFF0C;&#x9009;&#x62E9;MBean&#x9009;&#x9879;&#x5361;&#x3002; &#x4E0B;&#x8F7D;binary 1.0.0 source 1.0.0 JMX&#x76F8;&#x5173;&#x53C2;&#x8003;&#x8D44;&#x6599; Java Management Extensions (JMX) Technology JMX&#x7BA1;&#x7406;Tomcat/Resin","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"jmx","slug":"jmx","permalink":"http://aofeng.github.io/tags/jmx/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"在JVM中编译脚本提升性能","slug":"在JVM中编译脚本提升性能","date":"2013-12-12T09:21:44.000Z","updated":"2016-11-08T08:14:56.000Z","comments":true,"path":"2013/12/12/在JVM中编译脚本提升性能/","link":"","permalink":"http://aofeng.github.io/2013/12/12/在JVM中编译脚本提升性能/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4EE3;&#x7801; &#x6027;&#x80FD;&#x5BF9;&#x6BD4; JDK6&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x5B9E;&#x73B0;JSR 223&#x89C4;&#x8303;&#x652F;&#x6301;&#x811A;&#x672C;&#x8BED;&#x8A00;&#xFF0C;&#x4F7F;&#x5F97;Java&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x811A;&#x672C;&#x5F15;&#x64CE;&#x6267;&#x884C;JavaScript&#xFF0C;Python&#x7B49;&#x811A;&#x672C;&#x8BED;&#x8A00;&#x4EE3;&#x7801;&#x3002;JDK6&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;Mozilla Rhino&#x7684; &#x811A;&#x672C;&#x8BED;&#x8A00;&#x5F15;&#x64CE;&#xFF0C;&#x652F;&#x6301;JavaScript&#x3002;&#x5176;&#x4ED6;&#x7684;&#x811A;&#x672C;&#x8BED;&#x8A00;&#x53EF;&#x4EE5;&#x6309;JSR 223&#x89C4;&#x8303;&#x5B9E;&#x73B0;&#x811A;&#x672C;&#x5F15;&#x64CE;&#xFF0C;JDK&#x4E2D;&#x6709;&#x4E00;&#x4E2A;ScriptEngineManager&#x7C7B;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;jar&#x670D;&#x52A1;&#x53D1;&#x73B0;&#xFF08;Service Discovery&#xFF09;&#x673A;&#x5236;&#x5BFB;&#x627E;&#x5408;&#x9002;&#x7684;&#x811A;&#x672C;&#x5F15;&#x64CE;&#x7C7B;(ScriptEngine)&#x3002; &#x811A;&#x672C;&#x8BED;&#x8A00;&#x7ED9;&#x4EBA;&#x7B2C;&#x4E00;&#x5370;&#x8C61;&#xFF0C;&#x5B83;&#x662F;&#x9010;&#x884C;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x4F46;JSR 223&#x89C4;&#x8303;&#x5B9A;&#x4E49;&#x4E86;&#x811A;&#x672C;&#x4E24;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x8FD0;&#x884C;&#x65B9;&#x5F0F;&#xFF1A; &#x89E3;&#x91CA;&#x8FD0;&#x884C;&#x3002; &#x5148;&#x7F16;&#x8BD1;&#xFF0C;&#x540E;&#x8FD0;&#x884C;&#x3002; &#x662F;&#x5426;&#x652F;&#x6301;&#x7F16;&#x8BD1;&#x529F;&#x80FD;&#xFF0C;&#x7531;&#x5177;&#x4F53;&#x7684;&#x811A;&#x672C;&#x5F15;&#x64CE;&#x51B3;&#x5B9A;&#x3002;JDK6&#x81EA;&#x5E26;&#x7684;JavaScript&#x5F15;&#x64CE;&#x540C;&#x65F6;&#x652F;&#x6301;&#x89E3;&#x91CA;&#x8FD0;&#x884C;&#x548C;&#x7F16;&#x8BD1;&#x8FD0;&#x884C;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x5BF9;&#x6BD4;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#x811A;&#x672C;&#x8FD0;&#x884C;&#x7684;&#x6027;&#x80FD;&#x3002; &#x4EE3;&#x7801;&#x5B8C;&#x6574;&#x7684;&#x6E90;&#x4EE3;&#x7801;1&#x3001;&#x89E3;&#x91CA;&#x8FD0;&#x884C;&#x3002;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;12345678910public void parse(String script, Map&lt;String, Object&gt; vars) throws ScriptException { ScriptEngine scriptEngine = getScriptEngine(&quot;javascript&quot;); long startTime = System.currentTimeMillis(); for (int i = 0; i &lt; COUNT; i++) { Bindings binds = createBinding(vars, scriptEngine); scriptEngine.eval(script, binds); } long usedTime = System.currentTimeMillis() - startTime; System.out.println( String.format(&quot;&#x6BCF;&#x6B21;&#x90FD;&#x89E3;&#x91CA;&#x811A;&#x672C;&#x6267;&#x884C;%d&#x6B21;&#x6D88;&#x8017;%d&#x6BEB;&#x79D2;&quot;, COUNT, usedTime) );} 2&#x3001;&#x5148;&#x7F16;&#x8BD1;&#xFF0C;&#x518D;&#x8FD0;&#x884C;&#x3002;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;123456789101112public void compile(String script, Map&lt;String, Object&gt; vars) throws ScriptException { ScriptEngine scriptEngine = getScriptEngine(&quot;javascript&quot;); Compilable compileEngine = (Compilable) scriptEngine; CompiledScript compileScript = compileEngine.compile(script); long startTime = System.currentTimeMillis(); for (int i = 0; i &lt; COUNT; i++) { Bindings binds = createBinding(vars, scriptEngine); compileScript.eval(binds); } long usedTime = System.currentTimeMillis() - startTime; System.out.println( String.format(&quot;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#x540E;&#x6267;&#x884C;%d&#x6B21;&#x6D88;&#x8017;%d&#x6BEB;&#x79D2;&quot;, COUNT, usedTime) );} &#x6027;&#x80FD;&#x5BF9;&#x6BD4;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#xFF0C;&#x8FD0;&#x884C;&#x5728;VirtualBox&#x4E2D;&#x7684;&#x865A;&#x62DF;&#x673A;&#xFF1A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1A;Redhat 5.7 64bitCPU&#xFF1A;Intel(R) Core(TM) i3 CPU M380@2.53GHz * 2&#x5185;&#x5B58;&#xFF1A;2.5GB &#x8DD1;&#x4E86;&#x56DB;&#x6B21;&#x6D4B;&#x8BD5;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;: &#x8FD0;&#x884C;&#x6B21;&#x6570; &#x89E3;&#x91CA;&#x8FD0;&#x884C;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x6BEB;&#x79D2;&#xFF09; &#x5148;&#x7F16;&#x8BD1;&#x518D;&#x8FD0;&#x884C;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x6BEB;&#x79D2;&#xFF09; &#x7B2C;&#x4E00;&#x6B21; 100000 16898 15129 &#x7B2C;&#x4E8C;&#x6B21; 100000 15704 14291 &#x7B2C;&#x4E09;&#x6B21; 100000 17724 14938 &#x7B2C;&#x56DB;&#x6B21; 100000 16987 14828 &#x6CE8;&#xFF1A;&#x5728;&#x9AD8;&#x5E76;&#x53D1;&#x7684;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x7684;&#x6027;&#x80FD;&#x5DEE;&#x8DDD;&#x6BD4;&#x4E0A;&#x8FF0;&#x7ED3;&#x679C;&#x8981;&#x66F4;&#x5927;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Linux-终端多窗口工具tmux","slug":"Linux-终端多窗口工具tmux","date":"2013-11-20T13:39:10.000Z","updated":"2016-11-08T10:02:15.000Z","comments":true,"path":"2013/11/20/Linux-终端多窗口工具tmux/","link":"","permalink":"http://aofeng.github.io/2013/11/20/Linux-终端多窗口工具tmux/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x7F16;&#x8BD1;&#x5B89;&#x88C5; &#x5E38;&#x7528;&#x547D;&#x4EE4; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x5728;&#x7528;Linux&#x7EC8;&#x7AEF;&#x6267;&#x884C;&#x547D;&#x4EE4;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x7ECF;&#x5E38;&#x4F1A;Ctrl+Alt+t&#x5F00;&#x591A;&#x4E2A;&#x6807;&#x7B7E;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x5982;&#x679C;&#x5728;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x7684;&#x540C;&#x65F6;&#x53C8;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x53E6;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x3002;&#x8BA9;&#x64CD;&#x4F5C;&#x6267;&#x884C;&#x5B8C;&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x5BF9;&#x8BDD;&#x6846;&#xFF1F;&#x53D1;&#x51FA;&#x58F0;&#x97F3;&#x63D0;&#x793A;&#x64CD;&#x4F5C;&#x5B8C;&#x6210;&#xFF1F;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x90FD;&#x7528;&#x8FC7;&#xFF0C;&#x9EBB;&#x70E6;&#x7684;&#x662F;&#x9700;&#x8981;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x6807;&#x7B7E;&#x4E4B;&#x95F4;&#x8DF3;&#x6765;&#x8DF3;&#x53BB;&#xFF0C;&#x800C;&#x4E14;&#x6807;&#x7B7E;&#x4E00;&#x591A;&#x5C31;&#x5BB9;&#x6613;&#x5FD8;&#x8BB0;&#x54EA;&#x4E2A;&#x6807;&#x7B7E;&#x662F;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#x3002; &#x901A;&#x8FC7;Google&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x4E00;&#x6B3E;&#x5DE5;&#x5177;&#xFF1A;tmux&#xFF0C;&#x5B89;&#x88C5;&#x540E;&#x8BD5;&#x7528;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF08;&#x5206;&#x4E86;&#x56DB;&#x4E2A;&#x7A97;&#x53E3;&#xFF09;&#xFF1A; &#x7F16;&#x8BD1;&#x5B89;&#x88C5; &#x73AF;&#x5883;&#xFF1A;Redhat 5.x / CentOS 5.x 1&#x3001;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x4E86;libevent1.4.x&#x6216;libevent2.0.x&#x5728;&#x9ED8;&#x8BA4;&#x7684;&#x7CFB;&#x7EDF;&#x8DEF;&#x5F84;&#x3002;1234git clone git://git.code.sf.net/p/tmux/tmux-code tmuxcd tmuxsh autogen.sh./configure &amp;&amp; make 2&#x3001;&#x672A;&#x5B89;&#x88C5;libevent&#x3002;1&#xFF09;&#x4ECE;http://libevent.org&#x4E0B;&#x8F7D;libevent&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#xFF08;&#x5B89;&#x88C5;&#x81F3;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x8DEF;&#x5F84;&#x9700;ROOT&#x6743;&#x9650;&#xFF09;&#x3002;12./configure &amp;&amp; makemake install 2&#xFF09;&#x4E0B;&#x6E90;tmux&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x3002;1234git clone git://git.code.sf.net/p/tmux/tmux-code tmuxcd tmuxsh autogen.sh./configure &amp;&amp; make 3&#x3001;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x4E86;libevent&#xFF0C;&#x7F16;&#x8BD1;&#x65F6;&#x6307;&#x5B9A;&#x8DEF;&#x5F84;&#x3002;123456git clone git://git.code.sf.net/p/tmux/tmux-code tmuxcd tmuxsh autogen.shDIR=/home/nieyong/local/libevent-2.0.11-stable./configure CFLAGS=&quot;-I$DIR/include&quot; LDFLAGS=&quot;-L$DIR/lib&quot;make &#x5E38;&#x7528;&#x547D;&#x4EE4; &#x5FEB;&#x6377;&#x952E; &#x4F5C;&#x7528; Ctrl+b ? &#x663E;&#x793A;&#x5FEB;&#x6377;&#x952E;&#x5E2E;&#x52A9; Ctrl+b Ctrl+o &#x8C03;&#x6362;&#x7A97;&#x53E3;&#x4F4D;&#x7F6E;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E0E;vim &#x91CC;&#x7684;Ctrl+w Ctrl+b &#x7A7A;&#x683C;&#x952E; &#x91C7;&#x7528;&#x4E0B;&#x4E00;&#x4E2A;&#x5185;&#x7F6E;&#x5E03;&#x5C40; Ctrl+b ! &#x628A;&#x5F53;&#x524D;&#x7A97;&#x53E3;&#x53D8;&#x4E3A;&#x65B0;&#x7A97;&#x53E3; Ctrl+b &#x201C; &#x6A21;&#x5411;&#x5206;&#x9694;&#x7A97;&#x53E3; Ctrl+b % &#x7EB5;&#x5411;&#x5206;&#x9694;&#x7A97;&#x53E3; Ctrl+b q &#x663E;&#x793A;&#x5206;&#x9694;&#x7A97;&#x53E3;&#x7684;&#x7F16;&#x53F7; Ctrl+b o &#x8DF3;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x5206;&#x9694;&#x7A97;&#x53E3; Ctrl+b &#x65B9;&#x5411;&#x952E; &#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x9009;&#x62E9;&#x5206;&#x9694;&#x7A97;&#x53E3; Ctrl+b Ctrl+&#x65B9;&#x5411;&#x952E; &#x8C03;&#x6574;&#x5206;&#x9694;&#x7A97;&#x53E3;&#x5927;&#x5C0F; Ctrl+b c &#x521B;&#x5EFA;&#x65B0;&#x7A97;&#x53E3; Ctrl+b 0~9 &#x9009;&#x62E9;&#x51E0;&#x53F7;&#x7A97;&#x53E3; Ctrl+b c &#x521B;&#x5EFA;&#x65B0;&#x7A97;&#x53E3; Ctrl+b n &#x9009;&#x62E9;&#x4E0B;&#x4E00;&#x4E2A;&#x7A97;&#x53E3; Ctrl+b l &#x5207;&#x6362;&#x5230;&#x6700;&#x540E;&#x4F7F;&#x7528;&#x7684;&#x7A97;&#x53E3; Ctrl+b p &#x9009;&#x62E9;&#x524D;&#x4E00;&#x4E2A;&#x7A97;&#x53E3; Ctrl+b w &#x4EE5;&#x83DC;&#x5355;&#x65B9;&#x5F0F;&#x663E;&#x793A;&#x53CA;&#x9009;&#x62E9;&#x7A97;&#x53E3; Ctrl+b t &#x663E;&#x793A;&#x65F6;&#x949F; Ctrl+b ; &#x5207;&#x6362;&#x5230;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;&#x7684;&#x9762;&#x677F; Ctrl+b x &#x5173;&#x95ED;&#x9762;&#x677F; Ctrl+b &amp; &#x5173;&#x95ED;&#x7A97;&#x53E3; Ctrl+b s &#x4EE5;&#x83DC;&#x5355;&#x65B9;&#x5F0F;&#x663E;&#x793A;&#x548C;&#x9009;&#x62E9;&#x4F1A;&#x8BDD; Ctrl+b d &#x9000;&#x51FA;tumx&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5F53;&#x524D;&#x4F1A;&#x8BDD;&#xFF0C;&#x8FD9;&#x65F6;&#xFF0C;tmux&#x4ECD;&#x5728;&#x540E;&#x53F0;&#x8FD0;&#x884C;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;tmux attach&#x8FDB;&#x5165;&#x5230;&#x6307;&#x5B9A;&#x7684;&#x4F1A;&#x8BDD; Ctrl+b PageUp,PageDown &#x5C4F;&#x5E55;&#x5185;&#x5BB9;&#x6EDA;&#x52A8; &#x53C2;&#x8003;&#x8D44;&#x6599; tumx README tmux Manual Stack Exchange tmux&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x548C;&#x4E2A;&#x6027;&#x5316;&#x914D;&#x7F6E;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"tmux","slug":"tmux","permalink":"http://aofeng.github.io/tags/tmux/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"Reactor模式与非阻塞I/O","slug":"Reactor模式与非阻塞I-O","date":"2013-11-04T11:23:40.000Z","updated":"2016-11-08T10:12:46.000Z","comments":true,"path":"2013/11/04/Reactor模式与非阻塞I-O/","link":"","permalink":"http://aofeng.github.io/2013/11/04/Reactor模式与非阻塞I-O/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4EE3;&#x7801;&#x793A;&#x4F8B; Reactor&#x6E90;&#x4EE3;&#x7801; Acceptor&#x6E90;&#x4EE3;&#x7801; Reader&#x6E90;&#x4EE3;&#x7801; Decoder&#x6E90;&#x4EE3;&#x7801; LineDecoder&#x6E90;&#x4EE3;&#x7801; ProcessService&#x6E90;&#x4EE3;&#x7801; Writer&#x6E90;&#x4EE3;&#x7801; Encoder&#x6E90;&#x4EE3;&#x7801; LineEncoder&#x6E90;&#x4EE3;&#x7801; Reactor&#x6A21;&#x5F0F;&#x63CF;&#x8FF0;&#xFF1A;The reactor design pattern is an event handling pattern for handling service requests delivered concurrently to a service handler by one or more inputs. The service handler then demultiplexes the incoming requests and dispatches them synchronously to the associated request handlers. &#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x54CD;&#x5E94;&#x7684;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#xFF0C;&#x6839;&#x636E;&#x5176;&#x804C;&#x8D23;&#x8FDB;&#x884C;&#x5212;&#x5206;&#xFF0C;&#x53EF;&#x4EE5;&#x62C6;&#x5206;&#x6210;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF08;Acceptor&#xFF09;&#x3002; &#x8BFB;&#x53D6;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF08;Reader&#xFF09;&#x3002; &#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF08;Decoder&#xFF09;&#x3002; &#x5904;&#x7406;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF08;Process Service | Compute&#xFF09;&#x3002; &#x5C01;&#x88C5;&#x54CD;&#x5E94;&#x6570;&#x636E;&#xFF08;Encoder&#xFF09;&#x3002; &#x53D1;&#x9001;&#x54CD;&#x5E94;&#xFF08;Writer | Sender&#xFF09;&#x3002; &#x6709;&#x4E9B;&#x7AE5;&#x978B;&#x53EF;&#x80FD;&#x8981;&#x8BF4;&#x4E86;&#xFF0C;Netty&#x5C31;&#x8FD9;&#x662F;&#x8FD9;&#x6837;&#x5212;&#x5206;&#x804C;&#x8D23;&#xFF0C;&#x5206;&#x6210;&#x591A;&#x4E2A;&#x7EC4;&#x4EF6;&#x8054;&#x5408;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x3002;&#x6CA1;&#x9519;&#xFF0C;Netty&#x5B9E;&#x73B0;&#x4E86;Reactor&#x6A21;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x673A;&#x5236;&#xFF08;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x597D;&#x83B1;&#x575E;&#x539F;&#x5219;&#xFF1A;&#x4E0D;&#x8981;&#x7ED9;&#x6211;&#x4EEC;&#x6253;&#x7535;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x6253;&#x7535;&#x8BDD;&#x901A;&#x77E5;&#x4F60;&#xFF09;&#xFF0C;&#x975E;&#x5E38;&#x9AD8;&#x6548;&#x3002; &#x524D;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x201C;Java&#x7F51;&#x7EDC;&#x5904;&#x7406;&#x6A21;&#x578B;-&#x975E;&#x963B;&#x585E;I/O+&#x5355;&#x7EBF;&#x7A0B;&#x201D;&#x4ECB;&#x7ECD;&#x4E86;&#x5982;&#x4F55;&#x7528;NIO&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;Echo Server&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x5BF9;&#x5B83;&#x8FDB;&#x884C;&#x91CD;&#x6784;&#xFF0C;&#x6309;&#x7167;&#x4E0A;&#x9762;&#x7684;6&#x4E2A;&#x5904;&#x7406;&#x6B65;&#x9AA4;&#xFF0C;&#x5C06;NioEchoServer&#x62C6;&#x5206;&#x6210;&#x51E0;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF0C;&#x5206;&#x5DE5;&#x534F;&#x4F5C;&#xFF1A; Reactor&#xFF1A;&#x542F;&#x52A8;&#x3001;&#x505C;&#x6B62;&#x670D;&#x52A1;&#xFF1B;&#x5206;&#x6D3E;ACCEPT&#x4E8B;&#x4EF6;&#x7ED9;Acceptor&#xFF1B;&#x5206;&#x6D3E;READ&#x4E8B;&#x4EF6;&#x7ED9;Reader&#x3002; Acceptor&#xFF1A;&#x5904;&#x7406;&#x65B0;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#xFF0C;&#x5C06;Reader&#x6CE8;&#x518C;&#x5E76;&#x5173;&#x6CE8;READ&#x4E8B;&#x4EF6;&#x3002; Reader&#xFF1A;&#x8BFB;&#x53D6;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x3002;&#x8C03;&#x7528;Decoder&#x89E3;&#x6790;&#x6570;&#x636E;&#x3002; Decoder&#xFF1A;&#x89E3;&#x7801;&#x5668;&#x3002;LineDecoder&#x662F;&#x4E00;&#x4E2A;&#x6309;&#x201D;&#x884C;&#x201D;&#x89E3;&#x6790;&#x7684;&#x89E3;&#x7801;&#x5668;&#x3002; ProcessService&#xFF1A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5904;&#x7406;&#x3002; Writer&#xFF1A;&#x53D1;&#x9001;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002;&#x8C03;&#x7528;Encoder&#x5C01;&#x88C5;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002; Encoder&#xFF1A;&#x7F16;&#x7801;&#x5668;&#x3002;LineEncoder&#x662F;&#x4E00;&#x4E2A;&#x5C06;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x6210;&#x201D;&#x884C;&#x201D;&#x7684;&#x7F16;&#x7801;&#x5668;&#x3002; &#x4EE3;&#x7801;&#x793A;&#x4F8B;&#x6CE8;&#xFF1A;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x672A;&#x5B8C;&#x6574;&#x5730;&#x5B9E;&#x73B0;Reactor&#x6A21;&#x5F0F;&#xFF0C;&#x53EA;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x804C;&#x8D23;&#x5212;&#x5206;&#xFF0C;&#x672A;&#x5B9E;&#x73B0;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x3002; Reactor&#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113package cn.aofeng.demo.reactor;import java.io.IOException;import java.net.InetSocketAddress;import java.net.ServerSocket;import java.nio.channels.SelectionKey;import java.nio.channels.Selector;import java.nio.channels.ServerSocketChannel;import java.util.Iterator;import java.util.Set;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x8D1F;&#x8D23;Echo Server&#x542F;&#x52A8;&#x548C;&#x505C;&#x6B62; &#xFF0C;ACCEPT&#x548C;READ&#x4E8B;&#x4EF6;&#x7684;&#x5206;&#x6D3E;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class Reactor { private final static Logger logger = Logger.getLogger(Reactor.class.getName()); // &#x76D1;&#x542C;&#x7AEF;&#x53E3; private int _port; // {@link Selector}&#x68C0;&#x67E5;&#x901A;&#x9053;&#x5C31;&#x7EEA;&#x72B6;&#x6001;&#x7684;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x6BEB;&#x79D2;&#xFF09; private int _selectTimeout = 3000; // &#x670D;&#x52A1;&#x8FD0;&#x884C;&#x72B6;&#x6001; private volatile boolean _isRun = true; /** * @param port &#x670D;&#x52A1;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#x3002; */ public Reactor(int port) { this._port = port; } public void setSelectTimeout(int selectTimeout) { this._selectTimeout = selectTimeout; } /** * &#x542F;&#x52A8;&#x670D;&#x52A1;&#x3002; */ public void start() { ServerSocketChannel serverChannel = null; try { serverChannel = ServerSocketChannel.open(); serverChannel.configureBlocking(false); ServerSocket serverSocket = serverChannel.socket(); serverSocket.bind(new InetSocketAddress(_port)); _isRun = true; if (logger.isLoggable(Level.INFO)) { logger.info(&quot;NIO echo&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;&quot; +_port); } Selector selector = Selector.open(); serverChannel.register(selector, SelectionKey.OP_ACCEPT, new Acceptor(selector, serverChannel)); while (_isRun) { int selectNum = selector.select(_selectTimeout); if (0 == selectNum) { continue; } Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys(); Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator(); while (it.hasNext()) { SelectionKey selectionKey = (SelectionKey) it.next(); // &#x63A5;&#x53D7;&#x65B0;&#x7684;Socket&#x8FDE;&#x63A5; if (selectionKey.isValid() &amp;&amp; selectionKey.isAcceptable()) { Acceptor acceptor = (Acceptor) selectionKey.attachment(); acceptor.accept(); } // &#x8BFB;&#x53D6;&#x5E76;&#x5904;&#x7406;Socket&#x7684;&#x6570;&#x636E; if (selectionKey.isValid() &amp;&amp; selectionKey.isReadable()) { Reader reader = (Reader) selectionKey.attachment(); reader.read(); } // &#x79FB;&#x9664;&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x8FC7;&#x7684;Key it.remove(); } // end of while iterator } } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x51FA;&#x9519;&quot;, e); } } /** * &#x505C;&#x6B62;&#x670D;&#x52A1;&#x3002; */ public void stop() { _isRun = false; } public static void main(String[] args) { if (1 != args.length) { logger.severe(&quot;&#x65E0;&#x6548;&#x53C2;&#x6570;&#x3002;&#x4F7F;&#x7528;&#x793A;&#x4F8B;&#xFF1A;\\n java cn.aofeng.demo.reactor.Reactor 9090&quot;); System.exit(-1); } int port = Integer.parseInt(args[0]); int selectTimeout = 1000; Reactor reactor = new Reactor(port); reactor.setSelectTimeout(selectTimeout); reactor.start(); }} Acceptor&#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748package cn.aofeng.demo.reactor;import java.io.IOException;import java.nio.channels.SelectionKey;import java.nio.channels.Selector;import java.nio.channels.ServerSocketChannel;import java.nio.channels.SocketChannel;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x8D1F;&#x8D23;&#x5904;&#x7406;&#x65B0;&#x8FDE;&#x5165;&#x7684;&#x5BA2;&#x6237;&#x7AEF;Socket&#x8FDE;&#x63A5;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class Acceptor { private final static Logger _logger = Logger.getLogger(Acceptor.class.getName()); protected Selector _selector; protected ServerSocketChannel _serverChannel; public Acceptor(Selector selector, ServerSocketChannel serverChannel) { this._selector = selector; this._serverChannel = serverChannel; } /** * &#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x65B0;&#x8FDE;&#x5165;&#x7684;&#x5BA2;&#x6237;&#x7AEF;Socket&#x8FDE;&#x63A5;&#xFF0C;&#x4EA4;&#x7ED9;{@link Reader}&#x5904;&#x7406;&#xFF1A;{@link Reader}&#x5411;{@link Selector}&#x6CE8;&#x518C;&#x5E76;&#x5173;&#x6CE8;READ&#x4E8B;&#x4EF6;&#x3002; * * @throws IOException */ public void accept() throws IOException { SocketChannel clientChannel = _serverChannel.accept(); if (null != clientChannel) { if (_logger.isLoggable(Level.INFO)) { _logger.info(&quot;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;&quot;+clientChannel.socket().getInetAddress().getHostAddress() +&quot;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;&quot;+clientChannel.socket().getPort()); } clientChannel.configureBlocking(false); Reader reader = new Reader(_selector, clientChannel); reader.setDecoder(new LineDecoder()); clientChannel.register(_selector, SelectionKey.OP_READ, reader); } }} Reader&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394package cn.aofeng.demo.reactor;import java.io.IOException;import java.nio.ByteBuffer;import java.nio.channels.Selector;import java.nio.channels.SocketChannel;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x8D1F;&#x8D23;&#x8BFB;&#x53D6;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x5E76;&#x89E3;&#x6790;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class Reader { private final static Logger _logger = Logger.getLogger(Reader.class.getName()); private SocketChannel _clientChannel; private Decoder _decoder; private final static int BUFFER_SIZE = 512; private ByteBuffer _buffer = ByteBuffer.allocate(BUFFER_SIZE); public Reader(Selector selector, SocketChannel clientChannel) { this._clientChannel = clientChannel; } public void setDecoder(Decoder decoder) { this._decoder = decoder; } public void read() throws IOException { int readCount = _clientChannel.read(_buffer); if (-1 == readCount) { _clientChannel.close(); } _buffer.flip(); int oldLimit = _buffer.limit(); String line = null; while( (line = (String) _decoder.decode(_buffer)) != null ) { // &#x5904;&#x7406;&#x4E00;&#x6B21;&#x591A;&#x884C;&#x53D1;&#x9001;&#x8FC7;&#x6765;&#x7684;&#x60C5;&#x51B5; if (_logger.isLoggable(Level.FINE)) { _logger.fine(&quot;&#x6536;&#x5230;&#x7684;&#x6570;&#x636E;&#xFF1A;&quot;+line); } // &#x5904;&#x7406;&#x4E1A;&#x52A1;&#x903B;&#x8F91; ProcessService service= new ProcessService(_clientChannel, line); String result = service.execute(); // &#x53D1;&#x9001;&#x54CD;&#x5E94; Writer writer = new Writer(_clientChannel, result); writer.setEncoder(new LineEncoder()); writer.write(); // &#x91CD;&#x5EFA;&#x4E34;&#x65F6;&#x6570;&#x636E;&#x7F13;&#x51B2;&#x533A; rebuildBuffer(line.length()); } // &#x7F13;&#x51B2;&#x533A;&#x6570;&#x636E;&#x8FD8;&#x6CA1;&#x6709;&#x7B26;&#x5408;&#x4E00;&#x4E2A;decode&#x6570;&#x636E;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x91CD;&#x7F6E;&#x6570;&#x636E;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x72B6;&#x6001;&#x65B9;&#x4FBF;append&#x6570;&#x636E; if (oldLimit == _buffer.limit()) { resetBuffer(); } } private void resetBuffer() { _buffer.position(_buffer.limit()); _buffer.limit(_buffer.capacity()); } /** * &#x91CD;&#x5EFA;&#x4E34;&#x65F6;&#x6570;&#x636E;&#x7F13;&#x51B2;&#x533A;&#x3002; * * @param lineSize &#x6536;&#x5230;&#x7684;&#x4E00;&#x884C;&#x6570;&#x636E;&#xFF08;&#x4E0D;&#x5305;&#x62EC;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#xFF09;&#x7684;&#x957F;&#x5EA6; */ private void rebuildBuffer(int lineSize) { if (_buffer.limit() == lineSize) { // &#x6570;&#x636E;&#x521A;&#x597D;&#x662F;&#x4E00;&#x884C; _buffer = ByteBuffer.allocate(BUFFER_SIZE); } else if (_buffer.limit() &gt; lineSize) { // &#x6570;&#x636E;&#x591A;&#x4E8E;&#x4E00;&#x884C; byte[] temp = new byte[_buffer.limit() - lineSize]; System.arraycopy(_buffer.array(), lineSize, temp, 0, temp.length); _buffer = ByteBuffer.allocate(BUFFER_SIZE); _buffer.put(temp); _buffer.flip(); } else { // nothing } }} Decoder&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920package cn.aofeng.demo.reactor;import java.nio.ByteBuffer;/** * &#x8BF7;&#x6C42;&#x6570;&#x636E;&#x89E3;&#x6790;&#x5668;&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public interface Decoder { /** * &#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF0C;&#x4E0D;&#x5F71;&#x54CD;&#x6E90;&#x6570;&#x636E;&#x7684;&#x72B6;&#x6001;&#x548C;&#x5185;&#x5BB9;&#x3002; * * @param source {@link Reader}&#x8BFB;&#x53D6;&#x5230;&#x7684;&#x6E90;&#x6570;&#x636E;&#x5B57;&#x8282;&#x6570;&#x7EC4; * @return &#x5982;&#x679C;&#x89E3;&#x6790;&#x5230;&#x7B26;&#x5408;&#x8981;&#x6C42;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x89E3;&#x6790;&#x5230;&#x7684;&#x6570;&#x636E;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;null&#x3002; */ public Object decode(ByteBuffer source);} LineDecoder&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950package cn.aofeng.demo.reactor;import java.io.UnsupportedEncodingException;import java.nio.ByteBuffer;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x884C;&#x6570;&#x636E;&#x89E3;&#x6790;&#x5668;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class LineDecoder implements Decoder { private final static Logger _logger = Logger.getLogger(LineDecoder.class.getName()); /** * &#x4ECE;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x83B7;&#x53D6;&quot;&#x4E00;&#x884C;&quot;&#x3002; * * @param buffer &#x8F93;&#x5165;&#x7F13;&#x51B2;&#x533A; * @return &#x6709;&#x9047;&#x5230;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#xFF0C;&#x8FD4;&#x56DE;&#x4E0D;&#x5305;&#x62EC;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;null&#x3002; */ @Override public String decode(ByteBuffer source) { int index = 0; boolean findCR = false; int len = source.limit(); byte[] bytes = source.array(); while(index &lt; len) { index ++; byte temp = bytes[index-1]; if (Constant.CR == temp) { findCR = true; } if (Constant.LF == temp &amp;&amp; findCR) { // &#x627E;&#x5230;&#x4E86;&#x884C;&#x7ED3;&#x675F;&#x7B26; byte[] copy = new byte[index]; System.arraycopy(bytes, 0, copy, 0, index); try { return new String(copy, Constant.CHARSET_UTF8); } catch (UnsupportedEncodingException e) { _logger.log(Level.SEVERE, &quot;&#x5C06;&#x89E3;&#x6790;&#x5B8C;&#x6210;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x51FA;&#x9519;&quot;, e); } } } return null; }} ProcessService&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031323334353637383940414243444546package cn.aofeng.demo.reactor;import java.io.IOException;import java.nio.channels.SocketChannel;/** * &#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5904;&#x7406;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class ProcessService { private SocketChannel _clientChannel; private String _line; public ProcessService(SocketChannel clientChannel, String line) { this._clientChannel = clientChannel; this._line = line; } public String execute() { // &#x5224;&#x65AD;&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x5426;&#x53D1;&#x9001;&#x4E86;&#x9000;&#x51FA;&#x6307;&#x4EE4; String content = _line.substring(0, _line.length()-2); if (isCloseClient(content)) { try { _clientChannel.close(); } catch (IOException e) { // nothing } } return _line; } /** * &#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x5426;&#x53D1;&#x9001;&#x4E86;&#x9000;&#x51FA;&#x6307;&#x4EE4;&#xFF08;&quot;quit&quot; | &quot;exit&quot;&#xFF09;&#x3002; * * @param str &#x6536;&#x5230;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x6570;&#x636E; * @return &#x8FD4;&#x56DE;true&#x8868;&#x793A;&#x6536;&#x5230;&#x4E86;&#x9000;&#x51FA;&#x6307;&#x4EE4;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;false&#x3002; */ private boolean isCloseClient(String str) { return &quot;exit&quot;.equalsIgnoreCase(str) || &quot;quit&quot;.equalsIgnoreCase(str); }} Writer&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920212223242526272829303132333435363738394041package cn.aofeng.demo.reactor;import java.io.IOException;import java.nio.ByteBuffer;import java.nio.channels.SocketChannel;/** * &#x8D1F;&#x8D23;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class Writer { private SocketChannel _clientChannel; private Object _data; private Encoder _encoder; public Writer(SocketChannel clientChannel, Object data) { this._clientChannel = clientChannel; this._data = data; } public void setEncoder(Encoder encoder) { this._encoder = encoder; } public void write() throws IOException { if (null == _data || !_clientChannel.isOpen()) { return; } ByteBuffer buffer = _encoder.encode(_data); if (null == buffer) { return; } _clientChannel.write(buffer); }} Encoder&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920package cn.aofeng.demo.reactor;import java.nio.ByteBuffer;/** * &#x54CD;&#x5E94;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public interface Encoder { /** * &#x5C06;&#x6E90;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x6210;{@link ByteBuffer}&#x3002; * * @param source &#x6E90;&#x6570;&#x636E; * @return {@link ByteBuffer}&#x5BF9;&#x8C61;&#x3002; */ public ByteBuffer encode(Object source);} LineEncoder&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031package cn.aofeng.demo.reactor;import java.io.UnsupportedEncodingException;import java.nio.ByteBuffer;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x6210;{@link ByteBuffer}&#x5E76;&#x52A0;&#x4E0A;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong &lt;/a&gt; */public class LineEncoder implements Encoder { private final static Logger logger = Logger.getLogger(LineEncoder.class.getName()); @Override public ByteBuffer encode(Object source) { String line = (String) source; try { ByteBuffer buffer = ByteBuffer.wrap(line.getBytes(Constant.CHARSET_UTF8)); return buffer; } catch (UnsupportedEncodingException e) { logger.log(Level.SEVERE, &quot;&#x5C06;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x6210;ByteBuffer&#x51FA;&#x9519;&quot;, e); } return null; }}","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"reactor","slug":"reactor","permalink":"http://aofeng.github.io/tags/reactor/"},{"name":"nio","slug":"nio","permalink":"http://aofeng.github.io/tags/nio/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Java网络处理模型-非阻塞I/O+单线程","slug":"Java网络处理模型-非阻塞I-O-单线程","date":"2013-10-26T13:24:53.000Z","updated":"2016-11-08T10:37:05.000Z","comments":true,"path":"2013/10/26/Java网络处理模型-非阻塞I-O-单线程/","link":"","permalink":"http://aofeng.github.io/2013/10/26/Java网络处理模型-非阻塞I-O-单线程/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4EE3;&#x7801;&#x793A;&#x4F8B; &#x9A8C;&#x8BC1; &#x201C;&#x963B;&#x585E;I/O+&#x7EBF;&#x7A0B;&#x6C60;&#x201D;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x867D;&#x7136;&#x6BD4;&#x201D;&#x963B;&#x585E;I/O+&#x591A;&#x7EBF;&#x7A0B;&#x201D;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x5728;&#x6027;&#x80FD;&#x65B9;&#x9762;&#x6709;&#x63D0;&#x5347;&#xFF0C;&#x4F46;&#x8FD9;&#x4E24;&#x79CD;&#x6A21;&#x578B;&#x90FD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5171;&#x540C;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x9762;&#x5BF9;&#x5927;&#x5E76;&#x53D1;&#xFF08;&#x6301;&#x7EED;&#x5927;&#x91CF;&#x8FDE;&#x63A5;&#x540C;&#x65F6;&#x8BF7;&#x6C42;&#xFF09;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x9700;&#x8981;&#x6D88;&#x8017;&#x5927;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x7EF4;&#x6301;&#x8FDE;&#x63A5;&#x3002;CPU&#x5728;&#x5927;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x4E4B;&#x95F4;&#x9891;&#x7E41;&#x5207;&#x6362;&#xFF0C;&#x6027;&#x80FD;&#x635F;&#x8017;&#x5F88;&#x5927;&#x3002;&#x4E00;&#x65E6;&#x5355;&#x673A;&#x7684;&#x8FDE;&#x63A5;&#x8D85;&#x8FC7;1&#x4E07;&#xFF0C;&#x751A;&#x81F3;&#x8FBE;&#x5230;&#x51E0;&#x4E07;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6027;&#x80FD;&#x4F1A;&#x6025;&#x5267;&#x4E0B;&#x964D;&#x3002; &#x800C;NIO&#x7684;Selector&#x5374;&#x5F88;&#x597D;&#x5730;&#x89E3;&#x51B3;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x7528;&#x201C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6216;&#x8005;&#x662F;CPU&#x4E2A;&#x6570;&#x7684;&#x7EBF;&#x7A0B;&#x201D;&#xFF08;&#x4E3B;&#x7EBF;&#x7A0B;&#xFF09;hold&#x4F4F;&#x6240;&#x6709;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x7BA1;&#x7406;&#x548C;&#x8BFB;&#x53D6;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5C06;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#x4EA4;&#x7ED9;&#x540E;&#x9762;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x7406;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x7406;&#x5B8C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x540E;&#xFF0C;&#x5C06;&#x7ED3;&#x679C;&#x4EA4;&#x7ED9;&#x4E3B;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;&#x54CD;&#x5E94;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x5C11;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x5927;&#x91CF;&#x8FDE;&#x63A5;&#x7684;&#x8BF7;&#x6C42;&#x3002; &#x4EE3;&#x7801;&#x793A;&#x4F8B;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x53EA;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x8D1F;&#x8D23;&#x6240;&#x6709;&#x7684;&#x4E8B;&#x52A1;&#xFF1A;&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#xFF0C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5904;&#x7406;&#xFF0C;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x5C01;&#x95ED;&#xFF0C;&#x53D1;&#x9001;&#x54CD;&#x5E94;&#x3002;NioEchoServer.java &#x6E90;&#x4EE3;&#x7801;&#xFF1A;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296package cn.aofeng.demo.nio;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.net.InetSocketAddress;import java.net.ServerSocket;import java.nio.ByteBuffer;import java.nio.channels.ClosedChannelException;import java.nio.channels.SelectionKey;import java.nio.channels.Selector;import java.nio.channels.ServerSocketChannel;import java.nio.channels.SocketChannel;import java.util.Arrays;import java.util.Iterator;import java.util.Set;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x7528;NIO&#x5B9E;&#x73B0;&#x7684;Echo Server&#x3002; * @author NieYong &lt;aofengblog@163.com&gt; */public class NioEchoServer { private final static Logger logger = Logger.getLogger(NioEchoServer.class.getName()); // &#x6362;&#x884C;&#x7B26; public final static char CR = &apos;\\r&apos;; // &#x56DE;&#x8F66;&#x7B26; public final static char LF = &apos;\\n&apos;; /** * @return &#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x7684;&#x884C;&#x7ED3;&#x675F;&#x7B26; */ private static String getLineEnd() { return System.getProperty(&quot;line.separator&quot;); } /** * &#x91CD;&#x7F6E;&#x7F13;&#x51B2;&#x533A;&#x72B6;&#x6001;&#x6807;&#x5FD7;&#x4F4D;&#xFF1A;position&#x8BBE;&#x7F6E;&#x4E3A;0&#xFF0C;limit&#x8BBE;&#x7F6E;&#x4E3A;capacity&#x7684;&#x503C;&#xFF0C;&#x6240;&#x6709;mark&#x65E0;&#x6548;&#x3002; * &#x6CE8;&#xFF1A;&#x7F13;&#x51B2;&#x533A;&#x539F;&#x6765;&#x7684;&#x5185;&#x5BB9;&#x8FD8;&#x5728;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x6E05;&#x9664;&#x3002; * * @param buffer &#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A; */ private static void clear(ByteBuffer buffer) { if (null != buffer) { buffer.clear(); } } /** * &#x5C06;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x8F6C;&#x6362;&#x6210;ASCII&#x5B57;&#x7B26;&#x3002; * @param buffer &#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A; * @return &#x8F6C;&#x6362;&#x540E;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x5B57;&#x7B26;&#x4E32; */ private static String toDisplayChar(ByteBuffer buffer) { if (null == buffer) { return &quot;null&quot;; } return Arrays.toString(buffer.array()); } /** * &#x5C06;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#x7528;utf8&#x7F16;&#x7801;&#xFF0C;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x3002; * * @param buffer&#x3000;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A; * @return utf8&#x7F16;&#x7801;&#x8F6C;&#x6362;&#x7684;&#x5B57;&#x7B26;&#x4E32; * @throws UnsupportedEncodingException */ private static String convert2String(ByteBuffer buffer) throws UnsupportedEncodingException { return new String(buffer.array(), &quot;utf8&quot;); } /** * &#x53BB;&#x6389;&#x5C3E;&#x672B;&#x7684;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#xFF08;\\r\\n&#xFF09;&#xFF0C;&#x5E76;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x3002; * * @param buffer &#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A; * @return &#x8FD4;&#x56DE;&#x53BB;&#x6389;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; * @throws UnsupportedEncodingException * @see #convert2String(ByteBuffer) */ private static String getLineContent(ByteBuffer buffer) throws UnsupportedEncodingException { if (null == buffer) { return null; } byte[] result = new byte[buffer.limit()-2]; System.arraycopy(buffer.array(), 0, result, 0, result.length); return convert2String(ByteBuffer.wrap(result)); } /** * &#x987A;&#x5E8F;&#x5408;&#x5E76;&#x4E24;&#x4E2A;{@link ByteBuffer}&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4E14;&#x4E0D;&#x6539;&#x53D8;{@link ByteBuffer}&#x539F;&#x6765;&#x7684;&#x6807;&#x5FD7;&#x4F4D;&#x3002;&#x5373;&#xFF1A; * &lt;pre&gt; * &#x5408;&#x5E76;&#x540E;&#x7684;ByteBuffer = first + second * &lt;/pre&gt; * @param first &#x7B2C;&#x4E00;&#x4E2A;&#x5F85;&#x5408;&#x5E76;&#x7684;{@link ByteBuffer}&#xFF0C;&#x5408;&#x5E76;&#x540E;&#x5176;&#x5185;&#x5BB9;&#x5728;&#x524D;&#x9762; * @param second &#x7B2C;&#x4E8C;&#x4E2A;&#x5F85;&#x5408;&#x5E76;&#x7684;{@link ByteBuffer}&#xFF0C;&#x5408;&#x5E76;&#x540E;&#x5176;&#x5185;&#x5BB9;&#x5728;&#x540E;&#x9762; * @return &#x5408;&#x5E76;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5982;&#x679C;&#x4E24;&#x4E2A;{@link ByteBuffer}&#x90FD;&#x4E3A;null&#xFF0C;&#x8FD4;&#x56DE;null&#x3002; */ private static ByteBuffer merge(ByteBuffer first, ByteBuffer second) { if (null == first &amp;&amp; null == second) { return null; } int oneSize = null != first ? first.limit() : 0; int twoSize = null != second ? second.limit() : 0; ByteBuffer result = ByteBuffer.allocate(oneSize+twoSize); if (null != first) { result.put(Arrays.copyOfRange(first.array(), 0, oneSize)); } if (null != second) { result.put(Arrays.copyOfRange(second.array(), 0, twoSize)); } result.rewind(); return result; } /** * &#x4ECE;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x83B7;&#x53D6;&quot;&#x4E00;&#x884C;&quot;&#xFF0C;&#x5373;&#x83B7;&#x53D6;&#x5305;&#x62EC;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#x53CA;&#x5176;&#x524D;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x3002; * * @param buffer &#x8F93;&#x5165;&#x7F13;&#x51B2;&#x533A; * @return &#x6709;&#x9047;&#x5230;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#xFF0C;&#x8FD4;&#x56DE;&#x5305;&#x62EC;&#x884C;&#x7ED3;&#x675F;&#x7B26;&#x5728;&#x5185;&#x7684;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;null&#x3002; */ private static ByteBuffer getLine(ByteBuffer buffer) { int index = 0; boolean findCR = false; int len = buffer.limit(); while(index &lt; len) { index ++; byte temp = buffer.get(); if (CR == temp) { findCR = true; } if (LF == temp &amp;&amp; findCR &amp;&amp; index &gt; 0) { // &#x627E;&#x5230;&#x4E86;&#x884C;&#x7ED3;&#x675F;&#x7B26; byte[] copy = new byte[index]; System.arraycopy(buffer.array(), 0, copy, 0, index); buffer.rewind(); // &#x4F4D;&#x7F6E;&#x590D;&#x539F; return ByteBuffer.wrap(copy); } } buffer.rewind(); // &#x4F4D;&#x7F6E;&#x590D;&#x539F; return null; } private static void readData(Selector selector, SelectionKey selectionKey) throws IOException { SocketChannel socketChannel = (SocketChannel) selectionKey.channel(); // &#x83B7;&#x53D6;&#x4E0A;&#x6B21;&#x5DF2;&#x7ECF;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E; ByteBuffer oldBuffer = (ByteBuffer) selectionKey.attachment(); if (logger.isLoggable(Level.FINE)) { logger.fine(&quot;&#x4E0A;&#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#xFF1A;&quot;+oldBuffer+getLineEnd()+toDisplayChar(oldBuffer)); } // &#x8BFB;&#x65B0;&#x7684;&#x6570;&#x636E; int readNum = 0; ByteBuffer newBuffer = ByteBuffer.allocate(1024); if ( (readNum = socketChannel.read(newBuffer)) &lt;= 0 ) { return; } if (logger.isLoggable(Level.FINE)) { logger.fine(&quot;&#x8FD9;&#x6B21;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#xFF1A;&quot;+newBuffer+getLineEnd()+toDisplayChar(newBuffer)); } newBuffer.flip(); ByteBuffer lineRemain = getLine(newBuffer); if (logger.isLoggable(Level.FINE)) { logger.fine(&quot;&#x89E3;&#x6790;&#x7684;&#x884C;&#x6570;&#x636E;&#x5269;&#x4F59;&#x90E8;&#x5206;&#xFF1A;&quot;+lineRemain+getLineEnd()+toDisplayChar(lineRemain)); } if (null != lineRemain) { // &#x83B7;&#x53D6;&#x5230;&#x884C;&#x7ED3;&#x675F;&#x7B26; ByteBuffer completeLine = merge(oldBuffer, lineRemain); if (logger.isLoggable(Level.FINE)) { logger.fine(&quot;&#x51C6;&#x5907;&#x8F93;&#x51FA;&#x7684;&#x6570;&#x636E;&#xFF1A;&quot;+completeLine+getLineEnd()+toDisplayChar(completeLine)); } while (completeLine.hasRemaining()) { // &#x6709;&#x53EF;&#x80FD;&#x4E00;&#x6B21;&#x6CA1;&#x6709;&#x5199;&#x5B8C;&#xFF0C;&#x9700;&#x591A;&#x6B21;&#x5199; socketChannel.write(completeLine); } // &#x6E05;&#x9664;&#x6570;&#x636E; selectionKey.attach(null); clear(oldBuffer); clear(lineRemain); // &#x5224;&#x65AD;&#x662F;&#x5426;&#x9000;&#x51FA; String lineStr = getLineContent(completeLine); if (logger.isLoggable(Level.FINE)) { logger.fine(&quot;&#x5224;&#x65AD;&#x662F;&#x5426;&#x9000;&#x51FA;&#x7684;&#x884C;&#x6570;&#x636E;&#xFF1A;&quot;+lineStr); } if (&quot;exit&quot;.equalsIgnoreCase(lineStr) || &quot;quit&quot;.equalsIgnoreCase(lineStr)) { socketChannel.close(); } // FIXME &#x884C;&#x7ED3;&#x675F;&#x7B26;&#x540E;&#x9762;&#x662F;&#x5426;&#x8FD8;&#x6709;&#x6570;&#x636E;&#xFF1F; &#x6B64;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x5C1A;&#x672A;&#x6D4B;&#x8BD5; if (lineRemain.limit()+2 &lt; newBuffer.limit()) { byte[] temp = new byte[newBuffer.limit() - lineRemain.limit()]; newBuffer.get(temp, lineRemain.limit(), temp.length); selectionKey.attach(temp); } } else { // &#x6CA1;&#x6709;&#x8BFB;&#x5230;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x884C;&#xFF0C;&#x7EE7;&#x7EED;&#x8BFB;&#x5E76;&#x4E14;&#x5E26;&#x4E0A;&#x5DF2;&#x7ECF;&#x8BFB;&#x53D6;&#x7684;&#x90E8;&#x5206;&#x6570;&#x636E; ByteBuffer temp = merge(oldBuffer, newBuffer); socketChannel.register(selector, SelectionKey.OP_READ, temp); if (logger.isLoggable(Level.FINE)) { logger.fine(&quot;&#x6682;&#x5B58;&#x5230;SelectionKey&#x7684;&#x6570;&#x636E;&#xFF1A;&quot;+temp+getLineEnd()+toDisplayChar(temp)); } } } /** * &#x63A5;&#x53D7;&#x65B0;&#x7684;Socket&#x8FDE;&#x63A5;&#x3002; * * @param selector &#x9009;&#x62E9;&#x5668; * @param selectionKey * @return * @throws IOException * @throws ClosedChannelException */ private static SocketChannel acceptNew(Selector selector, SelectionKey selectionKey) throws IOException, ClosedChannelException { ServerSocketChannel server = (ServerSocketChannel) selectionKey.channel(); SocketChannel socketChannel = server.accept(); if (null != socketChannel) { if (logger.isLoggable(Level.INFO)) { logger.info(&quot;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;&quot;+socketChannel.socket().getInetAddress().getHostAddress()+&quot;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;&quot;+socketChannel.socket().getPort()); } socketChannel.configureBlocking(false); socketChannel.register(selector, SelectionKey.OP_READ); } return socketChannel; } /** * &#x542F;&#x52A8;&#x670D;&#x52A1;&#x5668;&#x3002; * * @param port &#x670D;&#x52A1;&#x76D1;&#x542C;&#x7684;&#x7AEF;&#x53E3; * @param selectTimeout {@link Selector}&#x68C0;&#x67E5;&#x901A;&#x9053;&#x5C31;&#x7EEA;&#x72B6;&#x6001;&#x7684;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x6BEB;&#x79D2;&#xFF09; */ private static void startServer(int port, int selectTimeout) { ServerSocketChannel serverChannel = null; try { serverChannel = ServerSocketChannel.open(); serverChannel.configureBlocking(false); ServerSocket serverSocket = serverChannel.socket(); serverSocket.bind(new InetSocketAddress(port)); if (logger.isLoggable(Level.INFO)) { logger.info(&quot;NIO echo&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;&quot; +port); } Selector selector = Selector.open(); serverChannel.register(selector, SelectionKey.OP_ACCEPT); while (true) { int selectNum = selector.select(selectTimeout); if (0 == selectNum) { continue; } Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys(); Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator(); while (it.hasNext()) { SelectionKey selectionKey = (SelectionKey) it.next(); // &#x63A5;&#x53D7;&#x65B0;&#x7684;Socket&#x8FDE;&#x63A5; if (selectionKey.isAcceptable()) { acceptNew(selector, selectionKey); } // &#x8BFB;&#x53D6;&#x5E76;&#x5904;&#x7406;Socket&#x7684;&#x6570;&#x636E; if (selectionKey.isReadable()) { readData(selector, selectionKey); } it.remove(); } // end of while iterator } } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x51FA;&#x9519;&quot;, e); } } public static void main(String[] args) { int port = 9090; int selectTimeout = 1000; startServer(port, selectTimeout); }} &#x9A8C;&#x8BC1;1&#x3001;&#x542F;&#x52A8;&#x670D;&#x52A1;&#x3002;1java cn.aofeng.demo.nio.NioEchoServer 9090 &#x6267;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x542F;&#x52A8;&#x670D;&#x52A1;&#xFF0C;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#xFF1A; 2013-10-26 20:38:42 cn.aofeng.demo.nio.NioEchoServer startServer&#x4FE1;&#x606F;: NIO echo&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;9090 2&#x3001;&#x6253;&#x5F00;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1telnet 192.168.56.102 9090 &#x670D;&#x52A1;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; 2013-10-26 20:40:55 cn.aofeng.demo.nio.NioEchoServer acceptNew&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;12112013-10-26 20:40:58 cn.aofeng.demo.nio.NioEchoServer acceptNew&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;12122013-10-26 20:41:00 cn.aofeng.demo.nio.NioEchoServer acceptNew&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;1215 &#x6CE8;&#xFF1A;&#x670D;&#x52A1;&#x6240;&#x5728;&#x673A;&#x5668;&#x7684;IP&#x5730;&#x5740;&#x662F;192.168.56.102&#x3002; 3&#x3001;&#x8FDE;&#x63A5;&#x540E;&#xFF0C;&#x4E09;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x5747;&#x53D1;&#x9001;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x53D1;&#x9001;exit&#x6216;quit&#x6307;&#x4EE4;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x5173;&#x95ED;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x3002;&#x5176;&#x7EBF;&#x7A0B;&#x5217;&#x8868;&#x53CA;&#x5176;&#x72B6;&#x6001; &#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x6709;&#x4E09;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x4E0A;&#x6765;&#x540E;&#xFF0C;NioEchoServer&#x5E76;&#x6CA1;&#x6709;&#x751F;&#x6210;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x6765;&#x5904;&#x7406;&#x8FDE;&#x63A5;&#xFF0C;&#x800C;&#x662F;&#x5168;&#x90E8;&#x7531;main&#x7EBF;&#x7A0B;&#x5B8C;&#x6210;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"nio","slug":"nio","permalink":"http://aofeng.github.io/tags/nio/"},{"name":"线程","slug":"线程","permalink":"http://aofeng.github.io/tags/线程/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Java网络处理模型-阻塞I/O+线程池","slug":"Java网络处理模型-阻塞I-O-线程池","date":"2013-10-24T13:24:46.000Z","updated":"2016-11-08T10:27:17.000Z","comments":true,"path":"2013/10/24/Java网络处理模型-阻塞I-O-线程池/","link":"","permalink":"http://aofeng.github.io/2013/10/24/Java网络处理模型-阻塞I-O-线程池/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4EE3;&#x7801;&#x793A;&#x4F8B; ThreadPoolEchoServer&#x6E90;&#x4EE3;&#x7801; Worker&#x6E90;&#x4EE3;&#x7801; &#x9A8C;&#x8BC1; &#x963B;&#x585E;I/O+&#x7EBF;&#x7A0B;&#x6C60;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x662F;&#x963B;&#x585E;I/O+&#x591A;&#x7EBF;&#x7A0B;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x7684;&#x6539;&#x8FDB;&#x7248;&#xFF0C;&#x4EBA;&#x4EEC;&#x610F;&#x8BC6;&#x5230;&#x6BCF;&#x6B21;&#x6709;&#x65B0;&#x8FDE;&#x63A5;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#x7684;&#x4EE3;&#x4EF7;&#x592A;&#x5927;&#xFF0C;&#x5C31;&#x7528;&#x7EBF;&#x7A0B;&#x6C60;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x6BCF;&#x6B21;&#x63A5;&#x6536;&#x5230;&#x65B0;&#x8FDE;&#x63A5;&#x540E;&#x4ECE;&#x6C60;&#x4E2D;&#x53D6;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF0C;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x653E;&#x56DE;&#x6C60;&#x4E2D;&#xFF0C;&#x91CD;&#x7528;&#x7EBF;&#x7A0B;&#x907F;&#x514D;&#x4E86;&#x9891;&#x7387;&#x5730;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#x5E26;&#x6765;&#x7684;&#x5F00;&#x9500;&#x3002; &#x548C;&#x201D;&#x963B;&#x585E;I/O+&#x591A;&#x7EBF;&#x7A0B;&#x201D;&#x76F8;&#x6BD4;&#xFF0C;&#x5728;&#x5927;&#x91CF;&#x77ED;&#x8FDE;&#x63A5;&#x7684;&#x573A;&#x666F;&#x4E2D;&#x6027;&#x80FD;&#x4F1A;&#x6709;&#x63D0;&#x5347;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x7528;&#x6BCF;&#x6B21;&#x90FD;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#xFF0C;&#x800C;&#x662F;&#x91CD;&#x7528;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x7684;&#x7EBF;&#x7A0B;&#x3002;&#x4F46;&#x5728;&#x5927;&#x91CF;&#x957F;&#x8FDE;&#x63A5;&#x7684;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x56E0;&#x4E3A;&#x7EBF;&#x7A0B;&#x88AB;&#x8FDE;&#x63A5;&#x957F;&#x671F;&#x5360;&#x7528;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x9891;&#x7E41;&#x5730;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x800C;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x4F18;&#x52BF;&#x3002; &#x4EE3;&#x7801;&#x793A;&#x4F8B;ThreadPoolEchoServer&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package cn.aofeng.demo.io;import java.io.IOException;import java.net.InetSocketAddress;import java.net.ServerSocket;import java.net.Socket;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x7EBF;&#x7A0B;&#x6C60;&#x7F51;&#x7EDC;echo&#x670D;&#x52A1;&#x3002;&#x6BCF;&#x63A5;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x8FDE;&#x63A5;&#x90FD;&#x7531;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#xFF0C;&#x8FDE;&#x63A5;&#x5173;&#x95ED;&#x540E;&#x91CA;&#x653E;&#x7EBF;&#x7A0B;&#xFF08;&#x4E0D;&#x4F1A;&#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#xFF0C;&#x4ECD;&#x5728;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#xFF09;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong&lt;/a&gt; */public class ThreadPoolEchoServer { private final static Logger logger = Logger.getLogger(MultiThreadEchoServer.class.getName()); /** * @param args [0]-&#x76D1;&#x542C;&#x7AEF;&#x53E3; */ public static void main(String[] args) { if (args.length != 1) { System.err.println(&quot;&#x65E0;&#x6548;&#x7684;&#x53C2;&#x6570;&#x3002;&#x4F7F;&#x7528;&#x793A;&#x4F8B;&#xFF1A;&quot;); System.err.println(&quot; java cn.aofeng.demo.io.ThreadPoolEchoServer 9090&quot;); System.exit(-1); } int port = Integer.parseInt(args[0]); ExecutorService threadpool = Executors.newFixedThreadPool(5); ServerSocket serverSocket = null; try { serverSocket = new ServerSocket(); serverSocket.bind(new InetSocketAddress(port)); if (logger.isLoggable(Level.INFO)) { logger.info(&quot;&#x7EBF;&#x7A0B;&#x6C60;&#x7F51;&#x7EDC;echo&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;&quot; +port); } while (true) { // &#x63A5;&#x6536;&#x65B0;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5; Socket socket = serverSocket.accept(); if (logger.isLoggable(Level.INFO)) { logger.info(&quot;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;&quot;+socket.getInetAddress().getHostAddress()+&quot;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;&quot;+socket.getPort()); } // &#x5C06;Socket&#x8FDE;&#x63A5;&#x4EA4;&#x7ED9;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x7406; threadpool.submit(new Worker(socket)); } } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x51FA;&#x9519;&quot;, e); } }} Worker&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677package cn.aofeng.demo.io;import java.io.BufferedReader;import java.io.Closeable;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStream;import java.net.Socket;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;Socket&#x8FDE;&#x63A5;&#x7684;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x3002; * * @author NieYong &lt;aofengblog@163.com&gt; */public class Worker implements Runnable { private final static Logger logger = Logger.getLogger(MultiThreadEchoServer.class.getName()); // &#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801; private final static String CHAR_SET = &quot;utf8&quot;; // &#x884C;&#x7ED3;&#x675F;&#x7B26; private final static String CRLF = &quot;\\r\\n&quot;; private Socket socket = null; public Worker(Socket socket) { this.socket = socket; } public void setSocket(Socket socket) { this.socket = socket; } public void close(Closeable c) { if (null != c) { try { c.close(); } catch (IOException e) { // ingore } } } @Override public void run() { if (null == socket || socket.isClosed()) { logger.warning(&quot;&#x65E0;&#x6548;&#x7684;Socket&#x8FDE;&#x63A5;&#xFF1A;&quot; + socket); return; } String lineEnd = CRLF; try { BufferedReader reader = new BufferedReader( new InputStreamReader( socket.getInputStream())); OutputStream outs = socket.getOutputStream(); String line = null; while ( null != (line = reader.readLine()) ) { // &#x5BA2;&#x6237;&#x7AEF;&#x9000;&#x51FA; if (&quot;quit&quot;.equalsIgnoreCase(line) || &quot;exit&quot;.equalsIgnoreCase(line)) { break; } outs.write(line.getBytes(CHAR_SET)); outs.write(lineEnd.getBytes(CHAR_SET)); } close(reader); close(outs); } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x8BFB;&#x53D6;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x51FA;&#x9519;&quot;, e); } } } &#x9A8C;&#x8BC1;1&#x3001;&#x542F;&#x52A8;&#x670D;&#x52A1;&#x3002;1java cn.aofeng.demo.io.ThreadPoolEchoServer 9090 &#x6267;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x542F;&#x52A8;&#x670D;&#x52A1;&#xFF0C;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#xFF1A; 2013-10-24 21:06:43 cn.aofeng.demo.io.ThreadPoolEchoServer main&#x4FE1;&#x606F;: &#x7EBF;&#x7A0B;&#x6C60;&#x7F51;&#x7EDC;echo&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;9090 2&#x3001;&#x6253;&#x5F00;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1telnet 192.168.56.102 9090 &#x670D;&#x52A1;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; 2013-10-24 21:11:05 cn.aofeng.demo.io.ThreadPoolEchoServer main&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;11672013-10-24 21:11:10 cn.aofeng.demo.io.ThreadPoolEchoServer main&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;11702013-10-24 21:11:15 cn.aofeng.demo.io.ThreadPoolEchoServer main&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;1171 &#x6CE8;&#xFF1A;&#x670D;&#x52A1;&#x6240;&#x5728;&#x673A;&#x5668;&#x7684;IP&#x5730;&#x5740;&#x662F;192.168.56.102&#x3002; 3&#x3001;&#x8FDE;&#x63A5;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#xFF0C;&#x4ECE;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;exit&#x6216;quit&#x6307;&#x4EE4;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x7EBF;&#x7A0B;&#x4E5F;&#x968F;&#x4E4B;&#x9500;&#x6BC1;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FDE;&#x63A5;&#x6C60;&#x521B;&#x5EFA;&#x4E86;&#x4E09;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF08;pool-1-thread&#xFF0C;pool-2-thread&#xFF0C;pool-3-thread&#xFF09;&#xFF0C;&#x5F53;&#x8FDE;&#x63A5;&#x5173;&#x95ED;&#x540E;&#xFF0C;&#x7EBF;&#x7A0B;&#x5E76;&#x6CA1;&#x6709;&#x9500;&#x6BC1;&#xFF0C;&#x53EA;&#x662F;&#x4ECE;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#x53D8;&#x6210;&#x7A7A;&#x95F2;&#x72B6;&#x6001;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"线程池","slug":"线程池","permalink":"http://aofeng.github.io/tags/线程池/"},{"name":"io","slug":"io","permalink":"http://aofeng.github.io/tags/io/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Java网络处理模型-阻塞I/O+多线程","slug":"Java网络处理模型-阻塞I-O-多线程","date":"2013-10-22T12:29:30.000Z","updated":"2016-11-08T10:42:00.000Z","comments":true,"path":"2013/10/22/Java网络处理模型-阻塞I-O-多线程/","link":"","permalink":"http://aofeng.github.io/2013/10/22/Java网络处理模型-阻塞I-O-多线程/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4EE3;&#x7801;&#x793A;&#x4F8B; MultiThreadEchoServer&#x6E90;&#x4EE3;&#x7801; Worker&#x6E90;&#x4EE3;&#x7801; &#x9A8C;&#x8BC1; &#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x5668;&#x5728;&#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x65F6;&#xFF0C;&#x6709;&#x591A;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x5904;&#x7406;&#x6A21;&#x578B;&#x3002;JDK1.4&#x4EE5;&#x524D;&#xFF0C;Java&#x53EA;&#x6709;&#x963B;&#x585E;I/O&#xFF0C;&#x6700;&#x5E38;&#x7528;&#x7684;&#x4E00;&#x79CD;&#x5904;&#x7406;&#x6A21;&#x578B;&#x5C31;&#x662F;&#xFF1A;&#x6BCF;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x53BB;&#x5904;&#x7406;&#x3002;&#x5176;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x63A5;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Socket&#x8FDE;&#x63A5;&#x3002; &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5904;&#x7406;Socket&#x3002; &#x8BFB;&#x53D6;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x3002; &#x8FDB;&#x884C;&#x4E1A;&#x52A1;&#x5904;&#x7406;&#x3002; &#x5199;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002; &#x5173;&#x95ED;Socket&#x3002; &#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#x3002; &#x8FD9;&#x6837;&#x7684;&#x7F51;&#x7EDC;&#x5904;&#x7406;&#x6A21;&#x578B;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5BB9;&#x6613;&#x5B9E;&#x73B0;&#x3002;&#x4F46;&#x6BCF;&#x6B21;&#x63A5;&#x6536;&#x5230;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#x90FD;&#x8981;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x9500;&#x6BC1;&#x7EBF;&#x7A0B;&#xFF0C;&#x4EE3;&#x4EF7;&#x5927;&#x3002;&#x5F53;&#x6709;&#x5927;&#x91CF;&#x5730;&#x77ED;&#x8FDE;&#x63A5;&#x51FA;&#x73B0;&#x65F6;&#xFF0C;&#x6027;&#x80FD;&#x6BD4;&#x8F83;&#x4F4E;&#x3002; &#x4EE3;&#x7801;&#x793A;&#x4F8B;MultiThreadEchoServer&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253package cn.aofeng.demo.io;import java.io.IOException;import java.net.InetSocketAddress;import java.net.ServerSocket;import java.net.Socket;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x591A;&#x7EBF;&#x7A0B;&#x7F51;&#x7EDC;echo&#x670D;&#x52A1;&#x3002;&#x6BCF;&#x63A5;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x8FDE;&#x63A5;&#x90FD;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#xFF0C;&#x8FDE;&#x63A5;&#x5173;&#x95ED;&#x540E;&#x7EBF;&#x7A0B;&#x968F;&#x4E4B;&#x9500;&#x6BC1;&#x3002; * * @author &lt;a href=&quot;mailto:aofengblog@163.com&quot;&gt;NieYong&lt;/a&gt; */public class MultiThreadEchoServer { private final static Logger logger = Logger.getLogger(MultiThreadEchoServer.class.getName()); /** * @param args [0]-&#x76D1;&#x542C;&#x7AEF;&#x53E3; */ public static void main(String[] args) { if (args.length != 1) { System.err.println(&quot;&#x65E0;&#x6548;&#x7684;&#x53C2;&#x6570;&#x3002;&#x4F7F;&#x7528;&#x793A;&#x4F8B;&#xFF1A;&quot;); System.err.println(&quot; java cn.aofeng.demo.io.MultiThreadEchoServer 9090&quot;); System.exit(-1); } int port = Integer.parseInt(args[0]); ServerSocket serverSocket = null; try { serverSocket = new ServerSocket(); serverSocket.bind(new InetSocketAddress(port)); if (logger.isLoggable(Level.INFO)) { logger.info(&quot;&#x591A;&#x7EBF;&#x7A0B;&#x7F51;&#x7EDC;echo&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;&quot; +port); } while (true) { // &#x63A5;&#x6536;&#x65B0;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5; Socket socket = serverSocket.accept(); if (logger.isLoggable(Level.INFO)) { logger.info(&quot;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;&quot;+socket.getInetAddress().getHostAddress()+&quot;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;&quot;+socket.getPort()); } // &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5904;&#x7406;Socket&#x8FDE;&#x63A5; Thread thread = new Thread(new Worker(socket)); thread.start(); } } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x51FA;&#x9519;&quot;, e); } }} Worker&#x6E90;&#x4EE3;&#x7801;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677package cn.aofeng.demo.io;import java.io.BufferedReader;import java.io.Closeable;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStream;import java.net.Socket;import java.util.logging.Level;import java.util.logging.Logger;/** * &#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;Socket&#x8FDE;&#x63A5;&#x7684;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x3002; * * @author NieYong &lt;aofengblog@163.com&gt; */public class Worker implements Runnable { private final static Logger logger = Logger.getLogger(MultiThreadEchoServer.class.getName()); // &#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801; private final static String CHAR_SET = &quot;utf8&quot;; // &#x884C;&#x7ED3;&#x675F;&#x7B26; private final static String CRLF = &quot;\\r\\n&quot;; private Socket socket = null; public Worker(Socket socket) { this.socket = socket; } public void setSocket(Socket socket) { this.socket = socket; } public void close(Closeable c) { if (null != c) { try { c.close(); } catch (IOException e) { // ingore } } } @Override public void run() { if (null == socket || socket.isClosed()) { logger.warning(&quot;&#x65E0;&#x6548;&#x7684;Socket&#x8FDE;&#x63A5;&#xFF1A;&quot; + socket); return; } String lineEnd = CRLF; try { BufferedReader reader = new BufferedReader( new InputStreamReader( socket.getInputStream())); OutputStream outs = socket.getOutputStream(); String line = null; while ( null != (line = reader.readLine()) ) { // &#x5BA2;&#x6237;&#x7AEF;&#x9000;&#x51FA; if (&quot;quit&quot;.equalsIgnoreCase(line) || &quot;exit&quot;.equalsIgnoreCase(line)) { break; } outs.write(line.getBytes(CHAR_SET)); outs.write(lineEnd.getBytes(CHAR_SET)); } close(reader); close(outs); } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x8BFB;&#x53D6;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x51FA;&#x9519;&quot;, e); } } } &#x9A8C;&#x8BC1;1&#x3001;&#x542F;&#x52A8;&#x670D;&#x52A1;&#x3002;1java cn.aofeng.demo.io.MultiThreadEchoServer 9090 &#x6267;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x542F;&#x52A8;&#x670D;&#x52A1;&#xFF0C;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#xFF1A; 2013-10-22 19:38:51 cn.aofeng.demo.io.MultiThreadEchoServer main&#x4FE1;&#x606F;: &#x591A;&#x7EBF;&#x7A0B;&#x7F51;&#x7EDC;echo&#x670D;&#x52A1;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF1A;9090 2&#x3001;&#x6253;&#x5F00;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1telnet 192.168.56.102 9090 &#x670D;&#x52A1;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x4FE1;&#x606F;&#xFF1A; 2013-10-22 19:38:56 cn.aofeng.demo.io.MultiThreadEchoServer main&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;33902013-10-22 19:39:06 cn.aofeng.demo.io.MultiThreadEchoServer main&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;33912013-10-22 19:39:11 cn.aofeng.demo.io.MultiThreadEchoServer main&#x4FE1;&#x606F;: &#x6536;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;192.168.56.101&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;Port&#xFF1A;3392 &#x6CE8;&#xFF1A;&#x670D;&#x52A1;&#x6240;&#x5728;&#x673A;&#x5668;&#x7684;IP&#x5730;&#x5740;&#x662F;192.168.56.102&#x3002; 3&#x3001;&#x8FDE;&#x63A5;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#xFF0C;&#x4ECE;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;exit&#x6216;quit&#x6307;&#x4EE4;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x7EBF;&#x7A0B;&#x4E5F;&#x968F;&#x4E4B;&#x9500;&#x6BC1;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x521B;&#x5EFA;&#x4E86;&#x4E09;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF08;Thread-2&#xFF0C;Thread-3&#xFF0C;Thread-4&#xFF09;&#xFF0C;&#x5F53;&#x8FDE;&#x63A5;&#x5173;&#x95ED;&#x540E;&#xFF0C;&#x7EBF;&#x7A0B;&#x4E5F;&#x88AB;&#x9500;&#x6BC1;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"io","slug":"io","permalink":"http://aofeng.github.io/tags/io/"},{"name":"线程","slug":"线程","permalink":"http://aofeng.github.io/tags/线程/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Java-缓冲区操作和内存映射","slug":"Java-缓冲区操作和内存映射","date":"2013-09-29T11:38:01.000Z","updated":"2016-11-08T10:49:40.000Z","comments":true,"path":"2013/09/29/Java-缓冲区操作和内存映射/","link":"","permalink":"http://aofeng.github.io/2013/09/29/Java-缓冲区操作和内存映射/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x7F13;&#x51B2;&#x533A;&#x64CD;&#x4F5C; &#x5185;&#x5B58;&#x6620;&#x5C04; &#x6027;&#x80FD;&#x6BD4;&#x8F83; &#x4E4B;&#x524D;&#x5199;&#x4E86;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x300A;NIO&#x5165;&#x95E8;&#x7BC7;&#x300B;&#xFF0C;&#x4ECB;&#x7ECD;&#x4E86;NIO&#x7684;&#x7F13;&#x51B2;&#x533A;&#x4E0E;&#x65E7;IO&#x6D41;&#x64CD;&#x4F5C;&#x7684;&#x4E0D;&#x540C;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7F13;&#x51B2;&#x533A;&#x3002;Java&#x5C01;&#x88C5;&#x4E86;&#x975E;&#x5E38;&#x591A;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x4E3A;&#x4E86;&#x8DE8;&#x5E73;&#x53F0;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8BB8;&#x591A;&#x7684;&#x7279;&#x6027;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x5185;&#x5B58;&#x6620;&#x5C04;&#x3002;JDK1.4&#x589E;&#x52A0;&#x4E86;NIO&#xFF0C;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;Java&#x4E2D;&#x4F7F;&#x7528;&#x6587;&#x4EF6;&#x9501;&#x3001;&#x5185;&#x5B58;&#x6620;&#x5C04;&#x7B49;&#x7279;&#x6027;&#x3002; &#x4E0B;&#x9762;&#x5C31;&#x7F13;&#x51B2;&#x533A;&#x64CD;&#x4F5C;&#x539F;&#x7406;&#x548C;&#x5B9E;&#x73B0;&#x3001;&#x5185;&#x5B58;&#x6620;&#x5C04;&#x539F;&#x7406;&#x548C;&#x5B9E;&#x73B0;&#x8FDB;&#x884C;&#x4ECB;&#x7ECD;&#x548C;&#x6BD4;&#x8F83;&#x3002; &#x7F13;&#x51B2;&#x533A;&#x64CD;&#x4F5C;&#x5176;&#x5B9E;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x64CD;&#x4F5C;&#x53EF;&#x80FD;&#x7406;&#x89E3;&#x4E3A;&#xFF1A;&#x5E94;&#x7528;&#x5C06;&#x6570;&#x636E;&#x5199;&#x5165;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x7136;&#x540E;&#x6574;&#x4E2A;&#x7F13;&#x5B58;&#x533A;&#x5199;&#x5165;&#x78C1;&#x76D8;&#xFF08;&#x8F93;&#x51FA;&#xFF09;&#xFF1B;&#x4ECE;&#x78C1;&#x76D8;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x586B;&#x6EE1;&#x7F13;&#x5B58;&#x533A;&#xFF0C;&#x5E94;&#x7528;&#x4ECE;&#x7F13;&#x5B58;&#x533A;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF08;&#x8F93;&#x5165;&#xFF09;&#x3002; &#x4EE5;&#x8BFB;&#x64CD;&#x4F5C;&#x4E3A;&#x4F8B;&#xFF1A;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x8C03;&#x7528;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;read()&#x65B9;&#x6CD5;&#xFF0C;&#x8981;&#x6C42;&#x586B;&#x5145;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x5185;&#x6838;&#x5411;&#x78C1;&#x76D8;&#x63A7;&#x5236;&#x5668;&#x53D1;&#x6307;&#x4EE4;&#xFF0C;&#x8981;&#x6C42;&#x4ECE;&#x78C1;&#x76D8;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002;&#x78C1;&#x76D8;&#x63A7;&#x5236;&#x5668;&#x4ECE;&#x78C1;&#x76D8;&#x8BFB;&#x53D6;&#x6240;&#x9700;&#x6570;&#x636E;&#x586B;&#x5145;&#x5185;&#x6838;&#x7684;&#x7F13;&#x51B2;&#x533A;&#xFF08;&#x73B0;&#x4EE3;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x662F;&#x7531;DMA&#x5B8C;&#x6210;&#xFF0C;&#x65E0;&#x9700;&#x4E3B;CPU&#x534F;&#x52A9;&#xFF09;&#xFF0C;&#x4E00;&#x65E6;&#x6240;&#x9700;&#x7684;&#x6570;&#x636E;&#x8BFB;&#x53D6;&#x5B8C;&#x6BD5;&#xFF0C;&#x5185;&#x6838;&#x5C06;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x6570;&#x636E;&#x590D;&#x5236;&#x5230;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x3002; Java&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061package cn.aofeng.demo.nio;import java.io.Closeable;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.nio.ByteBuffer;import java.nio.channels.FileChannel;import java.util.logging.Level;import java.util.logging.Logger;/** * IO-&#x7F13;&#x51B2;&#x533A;&#x64CD;&#x4F5C;&#x3002; * * @author NieYong &lt;aofengblog@163.com&gt; */public class BufferIO { private static Logger logger = Logger.getLogger(&quot;bufferio&quot;); // &#x7F13;&#x51B2;&#x533A;&#x5927;&#x5C0F; private final static int BUFFER_SIZE = 4096; public static void close(Closeable c) { if (null != c) { try { c.close(); } catch (IOException e) { // ingore } } } /** * @param args [0]&#xFF1A;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x5B8C;&#x6574;&#x8DEF;&#x5F84; */ public static void main(String[] args) { String filename = args[0]; File file = new File(filename); FileChannel channel = null; try { channel = new FileInputStream(file).getChannel(); ByteBuffer buffer = ByteBuffer.allocate(BUFFER_SIZE); long startTime = System.currentTimeMillis(); while (channel.read(buffer) &gt; 0) { buffer.flip(); buffer.clear(); } long endTime = System.currentTimeMillis(); logger.info(&quot;&#x7F13;&#x51B2;&#x533A;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x8017;&#x65F6;&#xFF1A;&quot; + (endTime-startTime)+&quot;&#x6BEB;&#x79D2;&quot;); } catch (FileNotFoundException e) { logger.log(Level.SEVERE, &quot;&#x627E;&#x4E0D;&#x5230;&#x6587;&#x4EF6;&#xFF1A;&quot;+filename, e); } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x51FA;&#x9519;&quot;, e); } finally{ close(channel); } }} &#x5185;&#x5B58;&#x6620;&#x5C04;&#x5C06;&#x6587;&#x4EF6;&#x7684;&#x67D0;&#x4E00;&#x90E8;&#x5206;&#x6216;&#x5168;&#x90E8;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x5185;&#x5B58;&#x533A;&#x57DF;&#xFF0C;&#x7528;&#x64CD;&#x4F5C;&#x5185;&#x5B58;&#x7684;&#x65B9;&#x5F0F;&#x64CD;&#x4F5C;&#x6587;&#x4EF6;&#x3002;&#x548C;&#x4F20;&#x7EDF;&#x7684;read()&#x65B9;&#x6CD5;&#x64CD;&#x4F5C;&#x76F8;&#x6BD4;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#x4E0D;&#x540C;&#x70B9;&#xFF1A; &#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x76F4;&#x63A5;&#x628A;&#x6587;&#x4EF6;&#x5F53;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#xFF0C;&#x4E0D;&#x9700;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;&#x7684;read()&#x65B9;&#x6CD5;&#x3002; &#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x8BFB;&#x53D6;&#x5185;&#x5B58;&#x6620;&#x5C04;&#x7A7A;&#x95F4;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x4EA7;&#x751F;&#x9875;&#x9519;&#x8BEF;&#xFF0C;&#x4ECE;&#x6587;&#x4EF6;&#x5C06;&#x6570;&#x636E;&#x8BFB;&#x5165;&#x5185;&#x5B58;&#x533A;&#x3002; &#x907F;&#x514D;&#x4E86;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x548C;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x4E4B;&#x95F4;&#x7684;&#x6570;&#x636E;&#x590D;&#x5236;&#xFF0C;&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#x3002; &#x8282;&#x7701;&#x5185;&#x5B58;&#x3002; Java&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273package cn.aofeng.demo.nio;import java.io.Closeable;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.nio.MappedByteBuffer;import java.nio.channels.FileChannel;import java.nio.channels.FileChannel.MapMode;import java.util.logging.Level;import java.util.logging.Logger;/** * IO-&#x5185;&#x5B58;&#x6620;&#x5C04;&#x3002; * * @author NieYong &lt;aofengblog@163.com&gt; */public class MemoryMapper { private static Logger logger = Logger.getLogger(&quot;bufferio&quot;); // &#x7F13;&#x51B2;&#x533A;&#x5927;&#x5C0F; private final static int BUFFER_SIZE = 4096; public static void close(Closeable c) { if (null != c) { try { c.close(); } catch (IOException e) { // ingore } } } /** * @param args [0]&#xFF1A;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x5B8C;&#x6574;&#x8DEF;&#x5F84; */ public static void main(String[] args) { String filename = args[0]; File file = new File(filename); FileChannel channel = null; try { channel = new FileInputStream(file).getChannel(); MappedByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0, channel.size()); long startTime = System.currentTimeMillis(); long total = 0; long len = file.length(); byte[] bs = new byte[BUFFER_SIZE]; for (int index = 0; index &lt; len; index+=BUFFER_SIZE) { int readSize = BUFFER_SIZE; if (len-index &lt; BUFFER_SIZE) { readSize = (int) len-index; buffer.get(new byte[readSize]); } else { buffer.get(bs); } total += readSize; } long endTime = System.currentTimeMillis(); logger.info(&quot;&#x5185;&#x5B58;&#x6620;&#x5C04;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x8017;&#x65F6;&#xFF1A;&quot; + (endTime-startTime)+&quot;&#x6BEB;&#x79D2;&#xFF0C;&#x6587;&#x4EF6;&#x957F;&#x5EA6;&#xFF1A;&quot;+total+&quot;&#x5B57;&#x8282;&quot;); } catch (FileNotFoundException e) { logger.log(Level.SEVERE, &quot;&#x627E;&#x4E0D;&#x5230;&#x6587;&#x4EF6;&#xFF1A;&quot;+filename, e); } catch (IOException e) { logger.log(Level.SEVERE, &quot;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x51FA;&#x9519;&quot;, e); } finally{ close(channel); } }} &#x6027;&#x80FD;&#x6BD4;&#x8F83;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#xFF1A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1A;Windows 7 64&#x4F4D;CPU&#xFF1A;Intel(R) Core(TM) i3 CPU M 380 @2.53GHz 2.53GHz&#x5185;&#x5B58;&#xFF1A;6GB&#x786C;&#x76D8;&#xFF1A;5400&#x8F6C; &#x5206;&#x522B;&#x6267;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x4E24;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;1java cn.aofeng.demo.nio.BufferIO D:\\Movie\\&#x5927;&#x660E;&#x7329;.BD1280&#x9AD8;&#x6E05;&#x4E2D;&#x82F1;&#x53CC;&#x5B57;.rmvb 2013-9-29 18:24:52 cn.aofeng.demo.nio.BufferIO main&#x4FE1;&#x606F;: &#x7F13;&#x51B2;&#x533A;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x8017;&#x65F6;&#xFF1A;32463&#x6BEB;&#x79D2; 1java cn.aofeng.demo.nio.MemoryMapper D:\\Movie\\&#x5927;&#x660E;&#x7329;.BD1280&#x9AD8;&#x6E05;&#x4E2D;&#x82F1;&#x53CC;&#x5B57;.rmvb 2013-9-29 18:18:20 cn.aofeng.demo.nio.MemoryMapper main&#x4FE1;&#x606F;: &#x5185;&#x5B58;&#x6620;&#x5C04;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x8017;&#x65F6;&#xFF1A;27956&#x6BEB;&#x79D2;&#xFF0C;&#x6587;&#x4EF6;&#x957F;&#x5EA6;&#xFF1A;2006157134&#x5B57;&#x8282;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"nio","slug":"nio","permalink":"http://aofeng.github.io/tags/nio/"},{"name":"内存映射","slug":"内存映射","permalink":"http://aofeng.github.io/tags/内存映射/"},{"name":"缓冲区","slug":"缓冲区","permalink":"http://aofeng.github.io/tags/缓冲区/"},{"name":"buffer","slug":"buffer","permalink":"http://aofeng.github.io/tags/buffer/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"事件驱动","slug":"事件驱动","date":"2013-09-03T13:00:46.000Z","updated":"2016-11-08T11:43:44.000Z","comments":true,"path":"2013/09/03/事件驱动/","link":"","permalink":"http://aofeng.github.io/2013/09/03/事件驱动/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x7ECF;&#x5178;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x5F0F; Event&#x6E90;&#x4EE3;&#x7801; EventListener&#x6E90;&#x4EE3;&#x7801; EventSource&#x6E90;&#x4EE3;&#x7801; ClientMain&#x6E90;&#x4EE3;&#x7801; &#x6539;&#x8FDB;&#x7248;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x5F0F; Event&#x6E90;&#x4EE3;&#x7801; EventListener&#x6E90;&#x4EE3;&#x7801; EventSource&#x6E90;&#x4EE3;&#x7801; EventManagement&#x6E90;&#x4EE3;&#x7801; ClientMain&#x6E90;&#x4EE3;&#x7801; &#x63D0;&#x5230;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#xFF0C;&#x719F;&#x6089;Java&#x7684;&#x7AE5;&#x978B;&#x4F1A;&#x60F3;&#x5230;Java Swing&#x4E2D;&#x7684;&#x4E8B;&#x4EF6;&#x6A21;&#x578B;&#xFF1A;&#x6309;&#x94AE;&#x7684;&#x6309;&#x4E0B;&#x3001;&#x91CA;&#x653E;&#xFF1B;&#x9F20;&#x6807;&#x5728;&#x7A97;&#x53E3;&#x7684;&#x79FB;&#x5165;&#x3001;&#x79FB;&#x51FA;&#xFF1B;&#x8F93;&#x5165;&#x6846;&#x88AB;&#x505A;&#x7126;&#x70B9;&#x3001;&#x5931;&#x53BB;&#x7126;&#x70B9;&#x3001;&#x8F93;&#x5165;&#xFF0C;&#x90FD;&#x4F1A;&#x8981;&#x6C42;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#x3002; &#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6709;&#x51E0;&#x4E2A;&#x7528;&#x9014;&#xFF1A; &#x5B9E;&#x73B0;&#x6A21;&#x5757;&#x95F4;&#x7684;&#x677E;&#x8026;&#x5408;&#x3002; &#x5C06;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x62C6;&#x5206;&#x6210;&#x51E0;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x5C0F;&#x90E8;&#x5206;&#x3002; &#x63D0;&#x4F9B;&#x6269;&#x5C55;&#x70B9;&#xFF0C;&#x5B9E;&#x73B0;&#x63D2;&#x4EF6;&#x673A;&#x5236;&#x7684;&#x529F;&#x80FD;&#x3002; &#x7528;&#x4E8E;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x573A;&#x666F;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x767B;&#x9646;&#x7684;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#xFF1A;&#x7528;&#x6237;&#x6267;&#x884C;&#x767B;&#x9646;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x4F1A;&#x8FDB;&#x884C;&#x7528;&#x4E8E;&#x767B;&#x9646;&#x6210;&#x529F;&#x7387;&#x7684;&#x7EDF;&#x8BA1;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x767B;&#x9646;&#x6210;&#x529F;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7528;&#x6237;&#x5728;&#x7EBF;&#x6A21;&#x5757;&#x67D0;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x6210;&#x529F;&#x767B;&#x9646;&#x4E86;&#x3002;&#x7528;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x89E3;&#x51B3;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#xFF1A;&#x6267;&#x884C;&#x767B;&#x9646;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x767B;&#x9646;&#x4E8B;&#x4EF6;&#xFF0C;&#x7F16;&#x5199;&#x4E24;&#x4EF6;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#xFF08;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x767B;&#x9646;&#x6210;&#x529F;&#x7387;&#x7684;&#x7EDF;&#x8BA1;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#xFF0C;&#x4E00;&#x4E2A;&#x901A;&#x77E5;&#x7528;&#x6237;&#x5728;&#x7EBF;&#x6A21;&#x5757;&#xFF09;&#x6CE8;&#x518C;&#x5230;&#x767B;&#x9646;&#x4E8B;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x540E;&#x7EED;&#x5728;&#x7528;&#x6237;&#x6267;&#x884C;&#x767B;&#x9646;&#x540E;&#x8FD8;&#x6709;&#x65B0;&#x7684;&#x4E1A;&#x52A1;&#x9700;&#x6C42;&#xFF0C;&#x53EA;&#x9700;&#x7F16;&#x5199;&#x65B0;&#x7684;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#x6CE8;&#x518C;&#x5230;&#x767B;&#x9646;&#x4E8B;&#x4EF6;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x505A;&#x6CD5;&#x7B26;&#x5408;&#x5F00;&#x95ED;&#x539F;&#x5219;&#xFF0C;&#x5B9E;&#x73B0;&#x65B0;&#x7684;&#x529F;&#x80FD;&#x4E0D;&#x5F71;&#x54CD;&#x5DF2;&#x6709;&#x529F;&#x80FD;&#x3002;&#x5982;&#x679C;&#x8981;&#x79FB;&#x9664;&#x67D0;&#x4E2A;&#x529F;&#x80FD;&#x70B9;&#xFF0C;&#x76F4;&#x63A5;&#x79FB;&#x9664;&#x5BF9;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#x3002; &#x5982;&#x679C;&#x67E5;&#x627E;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x7684;&#x5B9E;&#x73B0;&#x673A;&#x5236;&#xFF0C;&#x7F51;&#x4E0A;&#x67E5;&#x5230;&#x7684;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x662F;&#x7C7B;&#x4F3C;&#x4E8E;&#x4E0B;&#x9762;&#x7684;&#x201C;&#x7ECF;&#x5178;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x5F0F;&#x201D;&#x7684;&#x8BF4;&#x660E;&#x3002;&#x4F46;&#x5728;&#x5B9E;&#x9645;&#x7684;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x5B9E;&#x73B0;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x9700;&#x6C42;&#xFF0C;&#x540E;&#x9762;&#x6709;&#x4E00;&#x4E2A;&#x201D;&#x6539;&#x8FDB;&#x7248;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x5F0F;&#x201D;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x9700;&#x8981;&#x518D;&#x8FDB;&#x4E00;&#x6B65;&#x6539;&#x8FDB;&#x624D;&#x80FD;&#x6EE1;&#x8DB3;&#x5B9E;&#x9645;&#x4E2D;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x5F02;&#x6B65;&#x6267;&#x884C;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x4E8B;&#x4EF6;&#x4E0E;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#x7684;&#x6CE8;&#x518C;&#x914D;&#x7F6E;&#xFF0C;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#x76D1;&#x63A7;&#x7B49;&#x7B49;&#x3002; &#x7ECF;&#x5178;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x5F0F;&#x7ECF;&#x5178;&#x7684;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6709;&#x4E09;&#x4E2A;&#x57FA;&#x672C;&#x5143;&#x7D20;&#xFF1A; &#x4E8B;&#x4EF6;&#x6E90;&#xFF1A;&#x8D1F;&#x8D23;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x521B;&#x5EFA;&#x5E76;&#x6D3E;&#x53D1;&#x4E8B;&#x4EF6;&#x3002; &#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#xFF1A;&#x63A5;&#x6536;&#x5E76;&#x5904;&#x7406;&#x4E8B;&#x4EF6;&#x3002; &#x4E8B;&#x4EF6;&#x3002; Event&#x6E90;&#x4EE3;&#x7801;12345678910111213141516/** * &#x4E8B;&#x4EF6; * @author aofeng &lt;aofengblog@163.com&gt; */public class Event { private Object data; public Event(Object obj){ this.data = obj; } public Object getData() { return data; }} EventListener&#x6E90;&#x4EE3;&#x7801;123456789101112131415/** * &#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;(&#x76D1;&#x542C;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x4E8B;&#x4EF6;&#x5E76;&#x8FDB;&#x884C;&#x5177;&#x4F53;&#x7684;&#x5904;&#x7406;) * * @author aofeng &lt;aofengblog@163.com&gt; */public interface EventListener { /** * &#x5904;&#x7406;&#x4E8B;&#x4EF6; * * @param event &#x4E8B;&#x4EF6; */ public void execute(Event event);} EventSource&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031323334353637383940414243444546import java.util.ArrayList;import java.util.List;/** * &#x4E8B;&#x4EF6;&#x6E90;(&#x4E8B;&#x4EF6;&#x53D1;&#x9001;&#x8005;) * * @author aofeng &lt;aofengblog@163.com&gt; */public class EventSource { private List&lt;EventListener&gt; listeners = new ArrayList&lt;EventListener&gt;(); public EventSource() { } /** * &#x6DFB;&#x52A0;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668; * * @param listener &#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668; */ public boolean addListener(EventListener listener) { return listeners.add(listener); } /** * &#x79FB;&#x9664;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668; * * @param listener &#x79FB;&#x9664;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668; */ public boolean removeListener(EventListener listener) { return listeners.remove(listener); } /** * &#x6D3E;&#x53D1;&#x4E8B;&#x4EF6; * * @param data &#x4E8B;&#x4EF6; */ public void fire(Object data) { for (EventListener listener : listeners) { listener.execute(new Event(data)); } }} ClientMain&#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930/** * &#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x8C03;&#x7528;&#x793A;&#x4F8B; * @author aofeng &lt;aofengblog@163.com&gt; */public class ClientMain { public static void main(String[] args) { EventSource eventSource = new EventSource(); eventSource.addListener(new HelloWorldListener()); eventSource.addListener(new SimpleListener()); eventSource.fire(&quot;hello, world!&quot;); } public static class HelloWorldListener implements EventListener { @Override public void execute(Event event) { System.out.println(&quot;&#x76D1;&#x542C;&#x5668;:&quot;+this + &quot;&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:&quot; + event.getData()); } } public static class SimpleListener implements EventListener { @Override public void execute(Event event) { System.out.println(&quot;&#x76D1;&#x542C;&#x5668;:&quot;+this + &quot;&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:&quot; + event.getData()); } }} &#x6267;&#x884C;ClientMain&#x7C7B;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A; &#x76D1;&#x542C;&#x5668;:ClientMain$HelloWorldListener@45bab50a&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:hello, world!&#x76D1;&#x542C;&#x5668;:ClientMain$SimpleListener@7150bd4d&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:hello, world! &#x6539;&#x8FDB;&#x7248;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x6A21;&#x5F0F;&#x5728;&#x7ECF;&#x5178;&#x7248;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x5C06;EventSource&#x6309;&#x804C;&#x8D23;&#x8FDB;&#x884C;&#x62C6;&#x5206;&#xFF0C;&#x4E00;&#x90E8;&#x5206;&#xFF08;EventSource&#xFF09;&#x8D1F;&#x8D23;&#x4E8B;&#x4EF6;&#x6D3E;&#x5206;&#xFF0C;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#xFF08;EventManagement&#xFF09;&#x8D1F;&#x8D23;&#x4E8B;&#x4EF6;&#x7684;&#x7BA1;&#x7406;&#xFF08;&#x6DFB;&#x52A0;&#x4E8B;&#x4EF6;&#x3001;&#x79FB;&#x9664;&#x4E8B;&#x4EF6;&#x3001;&#x83B7;&#x53D6;&#x6307;&#x5B9A;&#x4E8B;&#x4EF6;&#x7684;&#x76D1;&#x542C;&#x5668;&#x5217;&#x8868;&#xFF09;&#x3002;&#x5E76;&#x4E14;&#x5B9E;&#x73B0;&#x4E86;&#x5411;&#x4E0D;&#x540C;&#x7684;&#x4E8B;&#x4EF6;&#x6CE8;&#x518C;&#x5404;&#x81EA;&#x7684;&#x76D1;&#x542C;&#x5668;&#x3002; Event&#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627/** * &#x4E8B;&#x4EF6; * * @author aofeng &lt;aofengblog@163.com&gt; */public class Event { // &#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E; private Object data; // &#x4E8B;&#x4EF6;&#x7C7B;&#x578B; private String eventType; public Event(String eventType, Object obj){ this.eventType = eventType; this.data = obj; } public Object getData() { return this.data; } public String getEventType() { return this.eventType; }} EventListener&#x6E90;&#x4EE3;&#x7801;123456789101112131415/** * &#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;(&#x76D1;&#x542C;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x4E8B;&#x4EF6;&#x5E76;&#x8FDB;&#x884C;&#x5177;&#x4F53;&#x7684;&#x5904;&#x7406;) * * @author aofeng &lt;aofengblog@163.com&gt; */public interface EventListener { /** * &#x5904;&#x7406;&#x4E8B;&#x4EF6; * * @param event &#x4E8B;&#x4EF6; */ public void execute(Event event);} EventSource&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031323334353637import java.util.List;/** * &#x4E8B;&#x4EF6;&#x6E90;(&#x4E8B;&#x4EF6;&#x53D1;&#x9001;&#x8005;) * * @author aofeng &lt;aofengblog@163.com&gt; */public class EventSource { // &#x4E8B;&#x4EF6;&#x7BA1;&#x7406;&#x5668; private EventManagement eventManagement;; public EventSource(EventManagement eventManagement){ this.eventManagement = eventManagement; } /** * &#x6D3E;&#x53D1;&#x4E8B;&#x4EF6; * * @param data &#x4E8B;&#x4EF6; */ public void fire(Event event) { if (null == event) { return; } List&lt;EventListener&gt; listeners = eventManagement.getEventListeners(event.getEventType()); if (null == listeners) { return; } for (EventListener listener : listeners) { listener.execute(event); } }} EventManagement&#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * &#x4E8B;&#x4EF6;&#x7BA1;&#x7406;&#x5668;&#x3002;&#x8D1F;&#x8D23;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668;&#x7684;&#x6CE8;&#x518C;&#x548C;&#x79FB;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x83B7;&#x53D6;&#x6307;&#x5B9A;&#x4E8B;&#x4EF6;&#x7684;&#x76D1;&#x542C;&#x5668;&#x5217;&#x8868;&#x529F;&#x80FD;&#x3002; * * @author aofeng &lt;aofengblog@163.com&gt; */public class EventManagement { private Map&lt;String, List&lt;EventListener&gt;&gt; map = new HashMap&lt;String, List&lt;EventListener&gt;&gt;(); public EventManagement(){ } /** * &#x5411;&#x6307;&#x5B9A;&#x4E8B;&#x4EF6;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x76D1;&#x542C;&#x5668; * * @param eventType &#x4E8B;&#x4EF6;&#x7C7B;&#x578B; * @param listener &#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668; * @return &#x6DFB;&#x52A0;&#x6210;&#x529F;&#x8FD4;&#x56DE;true&#xFF1B;&#x6DFB;&#x52A0;&#x5931;&#x8D25;&#x8FD4;&#x56DE;false */ public boolean addListener(String eventType, EventListener listener){ List&lt;EventListener&gt; listeners = map.get(eventType); if (null == listeners) { listeners = new ArrayList&lt;EventListener&gt;(); } boolean result = listeners.add(listener); map.put(eventType, listeners); return result; } /** * &#x79FB;&#x9664;&#x4E8B;&#x4EF6;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x76D1;&#x542C;&#x5668; * * @param eventType &#x4E8B;&#x4EF6;&#x7C7B;&#x578B; * @param listener &#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x5668; * @return &#x79FB;&#x9664;&#x6210;&#x529F;&#x8FD4;&#x56DE;true&#xFF1B;&#x79FB;&#x9664;&#x5931;&#x8D25;&#x8FD4;&#x56DE;false */ public boolean removeListener(String eventType, EventListener listener){ List&lt;EventListener&gt; listeners = map.get(eventType); if (null != listeners) { return listeners.remove(listener); } return false; } /** * &#x83B7;&#x53D6;&#x6307;&#x5B9A;&#x4E8B;&#x4EF6;&#x7684;&#x76D1;&#x542C;&#x5668; * * @param eventType &#x4E8B;&#x4EF6;&#x7C7B;&#x578B; * @return &#x5982;&#x679C;&#x6307;&#x5B9A;&#x7684;&#x4E8B;&#x4EF6;&#x6CA1;&#x6709;&#x76D1;&#x542C;&#x5668;&#x8FD4;&#x56DE;null&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;&#x76D1;&#x542C;&#x5668;&#x5217;&#x8868; */ public List&lt;EventListener&gt; getEventListeners(String eventType) { return map.get(eventType); }} ClientMain&#x6E90;&#x4EE3;&#x7801;12345678910111213141516171819202122232425262728293031323334/** * &#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x8C03;&#x7528;&#x793A;&#x4F8B; * @author aofeng &lt;aofengblog@163.com&gt; */public class ClientMain { public static void main(String[] args) { EventManagement eventManagement = new EventManagement(); eventManagement.addListener(&quot;read&quot;, new HelloWorldListener()); eventManagement.addListener(&quot;write&quot;, new SimpleListener()); EventSource eventSource = new EventSource(eventManagement); eventSource.fire(new Event(&quot;read&quot;, &quot;this is a read event&quot;)); eventSource.fire(new Event(&quot;write&quot;, &quot;this is a write event&quot;)); } public static class HelloWorldListener implements EventListener { @Override public void execute(Event event) { System.out.println(&quot;&#x76D1;&#x542C;&#x5668;:&quot;+this + &quot;&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x7C7B;&#x578B;&#x662F;:&quot; + event.getEventType() + &quot;, &#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:&quot; + event.getData()); } } public static class SimpleListener implements EventListener { @Override public void execute(Event event) { System.out.println(&quot;&#x76D1;&#x542C;&#x5668;:&quot;+this + &quot;&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x7C7B;&#x578B;&#x662F;:&quot; + event.getEventType() + &quot;, &#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:&quot; + event.getData()); } }} &#x6267;&#x884C;ClientMain&#x7C7B;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A; &#x76D1;&#x542C;&#x5668;:ClientMain$HelloWorldListener@64c3c749&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x7C7B;&#x578B;&#x662F;:read, &#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:this is a read event&#x76D1;&#x542C;&#x5668;:ClientMain$SimpleListener@6bbc4459&#x63A5;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E8B;&#x4EF6;&#x7C7B;&#x578B;&#x662F;:write, &#x4E8B;&#x4EF6;&#x9644;&#x5E26;&#x7684;&#x6570;&#x636E;:this is a write event","categories":[{"name":"架构设计","slug":"架构设计","permalink":"http://aofeng.github.io/categories/架构设计/"},{"name":"设计模式","slug":"架构设计/设计模式","permalink":"http://aofeng.github.io/categories/架构设计/设计模式/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"事件驱动","slug":"事件驱动","permalink":"http://aofeng.github.io/tags/事件驱动/"}],"keywords":[{"name":"架构设计","slug":"架构设计","permalink":"http://aofeng.github.io/categories/架构设计/"},{"name":"设计模式","slug":"架构设计/设计模式","permalink":"http://aofeng.github.io/categories/架构设计/设计模式/"}]},{"title":"状态与会话","slug":"状态与会话","date":"2013-08-26T13:06:29.000Z","updated":"2016-11-08T11:53:11.000Z","comments":true,"path":"2013/08/26/状态与会话/","link":"","permalink":"http://aofeng.github.io/2013/08/26/状态与会话/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x8BDD; 1&#x3001;B/S&#x67B6;&#x6784;&#x7684;&#x7CFB;&#x7EDF; 2&#x3001;C/S&#x67B6;&#x6784;&#x7684;&#x7CFB;&#x7EDF; &#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x8BDD; &#x72B6;&#x6001; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x670D;&#x52A1;&#x7AEF;&#x4EA4;&#x4E92;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6D89;&#x53CA;&#x5230;&#x7528;&#x6237;&#x7684;&#x9690;&#x79C1;&#x548C;&#x6570;&#x636E;&#x5B89;&#x5168;&#x95EE;&#x9898;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x8FDB;&#x884C;&#x6743;&#x9650;&#x6821;&#x9A8C;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x4E9B;&#x80FD;&#x8BC1;&#x660E;&#x7528;&#x6237; &#x8EAB;&#x4EFD;&#x7684;&#x4FE1;&#x606F;&#x6765;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#x8FDB;&#x884C;&#x786E;&#x8BA4;&#x3002;&#x6216;&#x8005;&#x662F;&#x7528;&#x6237;&#x505A;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x9700;&#x8981;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4EE5;&#x53CA;&#x8DE8;&#x591A;&#x4E2A;&#x9875;&#x9762;&#x624D;&#x80FD;&#x5B8C;&#x6210;&#xFF0C;&#x5728;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x7528;&#x6237;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x8D77;&#x6765;&#x3002;&#x8D2D;&#x7269;&#x8F66;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x597D;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x7528;&#x6237;&#x9009;&#x8D2D;&#x4E0D;&#x540C;&#x7684;&#x5546;&#x54C1;&#x52A0;&#x5165;&#x8D2D;&#x7269;&#x8F66;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8FDB;&#x884C;&#x7ED3;&#x7B97;&#xFF0C;&#x8FD9;&#x4E2D;&#x95F4;&#x9700;&#x8981;&#x6BD4;&#x8F83;&#x957F;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5728;&#x7528;&#x6237;&#x9009;&#x8D2D;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x7528;&#x6237;&#x5DF2;&#x7ECF;&#x9009;&#x8D2D;&#x597D;&#x7684;&#x5546;&#x54C1;&#x4FE1;&#x606F;&#x5168;&#x90E8;&#x4FDD;&#x5B58;&#x8D77;&#x6765;&#x3002; &#x4E0D;&#x7BA1;&#x662F;&#x6743;&#x9650;&#x6821;&#x9A8C;&#x6216;&#x8D2D;&#x7269;&#x8F66;&#xFF0C;&#x5B83;&#x4EEC;&#x4EA7;&#x751F;&#x7684;&#x4FE1;&#x606F;&#x90FD;&#x5728;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x6709;&#x6548;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x4E4B;&#x4E3A;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x3002;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x9700;&#x8981;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x5C31;&#x5E26;&#x6765;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x662F;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x5B58;&#x50A8;&#x8FD8;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x6765;&#x5B58;&#x50A8;&#x5462;&#xFF1F;&#x8FD9;&#x4E24;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x53C8;&#x5404;&#x81EA;&#x4F1A;&#x6709;&#x600E;&#x6837;&#x7684;&#x95EE;&#x9898;&#xFF1F; &#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x8BDD;1&#x3001;B/S&#x67B6;&#x6784;&#x7684;&#x7CFB;&#x7EDF;&#x5B58;&#x50A8;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x6709;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#xFF1A; Cookie&#x3002;&#x6709;&#x5BB9;&#x91CF;&#x9650;&#x5236;&#xFF0C;&#x6700;&#x591A;&#x4E3A;4KB&#x3002;&#x5E76;&#x4E14;&#x4F1A;&#x5E26;&#x6765;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x589E;&#x52A0;&#x7F51;&#x7EDC;&#x5E26;&#x5BBD;&#x7684;&#x6D88;&#x8017;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x6B21;&#x53D1;&#x8D77;HTTP&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x4F1A;&#x9644;&#x5E26;&#x6240;&#x6709;&#x7684;cookie&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x679C;&#x670D;&#x52A1;&#x7AEF;&#x4FEE;&#x6539;&#x4E86;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#xFF0C;&#x5728;HTTP&#x54CD;&#x5E94;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x5C06;&#x8FD9;&#x4E9B;&#x4FEE;&#x6539;&#x540E;&#x7684;cookie&#x4FE1;&#x606F;&#x53D1;&#x9001;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;&#x53E6;&#x5916;&#xFF0C;cookie&#x662F;&#x660E;&#x6587;&#x7684;&#xFF0C;&#x5728;&#x4F20;&#x8F93;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x6CC4;&#x6F0F;&#xFF0C;&#x6216;&#x8005;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x67D0;&#x4E9B;&#x6302;&#x6709;&#x6728;&#x9A6C;&#x7684;&#x7F51;&#x9875;&#x65F6;&#x4F1A;&#x88AB;&#x7A83;&#x53D6;&#x8FD9;&#x4E9B;cookie&#x4FE1;&#x606F;&#x3002; &#x9690;&#x85CF;&#x5B57;&#x6BB5;&#x3002;&#x4E5F;&#x5B58;&#x5728;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x4E00;&#x662F;&#x5728;&#x4E0D;&#x540C;&#x9875;&#x9762;&#x4E4B;&#x95F4;&#x8DF3;&#x8F6C;&#x65F6;&#xFF0C;&#x9875;&#x9762;&#x4E4B;&#x95F4;&#x9700;&#x8981;&#x76F8;&#x4E92;&#x4F20;&#x9012;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x4E0D;&#x4EC5;&#x6D89;&#x53CA;&#x7F51;&#x7EDC;&#x5E26;&#x5BBD;&#xFF0C;&#x8FD8;&#x5E26;&#x6765;&#x4E86;&#x7CFB;&#x7EDF;&#x5F00;&#x53D1;&#x548C;&#x7EF4;&#x62A4;&#x7684;&#x590D;&#x6742;&#x6027;&#x3002; HTML5&#x7684;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x3002;&#x901A;&#x8FC7;Key&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x662F;JavaScript&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF1A;Boolean&#x3001;&#x6574;&#x578B;&#x3001;&#x6D6E;&#x70B9;&#x578B;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5176;&#x5B9E;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x90FD;&#x662F;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x6765;&#x5B58;&#x50A8;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x8981;&#x7528;&#x6574;&#x578B;&#x6216;&#x5E03;&#x5C14;&#x578B;&#x6765;&#x64CD;&#x4F5C;&#xFF0C;&#x9700;&#x8981;&#x7CFB;&#x7EDF;&#x81EA;&#x5DF1;&#x505A;&#x8F6C;&#x6362;&#x3002;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x7684;&#x5BB9;&#x91CF;&#x6BD4;Cookie&#x5927;&#x5F97;&#x591A;&#xFF0C;&#x5728;HTML5&#x7684;&#x6807;&#x51C6;&#x4E2D;&#xFF0C;&#x5EFA;&#x8BAE;&#x6700;&#x5927;&#x4E3A;5MB&#x3002; 2&#x3001;C/S&#x67B6;&#x6784;&#x7684;&#x7CFB;&#x7EDF;&#x5BA2;&#x6237;&#x7AEF;&#x5B58;&#x50A8;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x6CA1;&#x6709;&#x5BB9;&#x91CF;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x53EF;&#x4EE5;&#x5B58;&#x653E;&#x5728;&#x672C;&#x5730;&#x7684;&#x5185;&#x5B58;&#x4E2D;&#x3001;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x6216;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x670D;&#x52A1;&#x7AEF;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x9700;&#x8981;&#x5C06;&#x76F8;&#x5173;&#x7684;&#x6570;&#x636E;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#x3002; &#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x8BDD;&#x4E0D;&#x7BA1;&#x662F;B/S&#x67B6;&#x6784;&#x8FD8;&#x662F;C/S&#x67B6;&#x6784;&#x7684;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x90FD;&#x53EF;&#x4EE5;&#x4FDD;&#x5B58;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x53EA;&#x8981;&#x5206;&#x914D;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6807;&#x8BC6;&#xFF08;&#x79F0;&#x4E4B;&#x4E3A;&#x4F1A;&#x8BDD;ID&#xFF09;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;&#x4F1A;&#x8BDD;ID&#x6765;&#x8FDB;&#x884C;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x7684;&#x83B7;&#x53D6;&#x3002; &#x670D;&#x52A1;&#x7AEF;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E9B;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x5B58;&#x50A8;&#x5728;&#x672C;&#x5730;&#x5185;&#x5B58;&#x3001;&#x7F13;&#x5B58;&#x7CFB;&#x7EDF;&#x6216;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E9B;&#x65B0;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x5404;&#x670D;&#x52A1;&#x7AEF;&#x5668;&#x4E4B;&#x95F4;&#x662F;&#x5426;&#x9700;&#x8981;&#x5171;&#x4EAB;&#x4F1A;&#x8BDD;&#x6570;&#x636E;&#xFF1F;&#x5982;&#x679C;&#x5B58;&#x50A8;&#x5728;&#x4E13;&#x95E8;&#x7684;&#x7F13;&#x5B58;&#x7CFB;&#x7EDF;&#x6216;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF0C;&#x662F;&#x5426;&#x4F1A;&#x5B58;&#x5728;&#x5355;&#x70B9;&#x6545;&#x969C;&#x4EE5;&#x53CA;&#x6027;&#x80FD;&#x95EE;&#x9898;&#x3002; &#x72B6;&#x6001;&#x56E0;&#x4E3A;&#x6709;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;&#x6709;&#x72B6;&#x6001;&#xFF08;stateful&#xFF09;&#x548C;&#x65E0;&#x72B6;&#x6001;&#xFF08;stateless&#xFF09;&#x3002;&#x6709;&#x72B6;&#x6001;&#x7684;&#x529F;&#x80FD;&#x6216;&#x6A21;&#x5757;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x5982;&#x4F55;&#x4FDD;&#x8BC1;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#x5206;&#x53D1;&#x5230;&#x4E0D;&#x540C;&#x670D;&#x52A1;&#x5668;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x7528;&#x6237;&#x7684;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x3002;&#x65E0;&#x72B6;&#x6001;&#x662F;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x4E2D;&#x4E00;&#x79CD;&#x975E;&#x5E38;&#x7406;&#x60F3;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x901A;&#x8FC7;&#x589E;&#x52A0;&#x65B0;&#x7684;&#x670D;&#x52A1;&#x5668;&#x6C34;&#x5E73;&#x6269;&#x5C55;&#x6765;&#x652F;&#x6491;&#x65E5;&#x76CA;&#x589E;&#x5927;&#x7684;&#x7528;&#x6237;&#x91CF;&#x548C;&#x8BBF;&#x95EE;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;&#x5747;&#x8861;&#x5730;&#x5206;&#x53D1;&#x5230;&#x6240;&#x6709;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x6216;&#x8005;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6027;&#x80FD;&#x5206;&#x53D1;&#x4E0D;&#x540C;&#x7684;&#x8BF7;&#x6C42;&#x91CF;&#x3002;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x65E0;&#x72B6;&#x6001;&#x7684;&#x7CFB;&#x7EDF;&#x662F;&#x51E0;&#x4E4E;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x8981;&#x63D0;&#x4F9B;&#x7ED9;&#x7528;&#x6237;&#x4F7F;&#x7528;&#x7684;&#x7CFB;&#x7EDF;&#xFF0C;&#x5C31;&#x4F1A;&#x6709;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#x7684;&#x5B58;&#x5728;&#x3002; &#x4E3A;&#x89E3;&#x51B3;&#x6709;&#x72B6;&#x6001;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;1&#x3001;&#x6BCF;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x7BA1;&#x7406;&#x5404;&#x81EA;&#x7528;&#x6237;&#x7684;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#xFF0C;&#x5C06;&#x7528;&#x6237;&#x6BCF;&#x6B21;&#x7684;&#x8BF7;&#x6C42;&#x90FD;&#x5206;&#x53D1;&#x5230;&#x540C;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#xFF08;Session Sticky&#xFF09;&#x3002; 2&#x3001;&#x96C6;&#x4E2D;&#x7BA1;&#x7406;&#x6240;&#x6709;&#x7684;&#x4F1A;&#x8BDD;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x6C42;&#x968F;&#x673A;&#x5206;&#x53D1;&#xFF08;Session Migration&#xFF09;&#x81F3;&#x4E0D;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5668;&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599; Cookie HTML5 LocalStorage &#x672C;&#x5730;&#x5B58;&#x50A8; Dive Into HTML5","categories":[{"name":"架构设计","slug":"架构设计","permalink":"http://aofeng.github.io/categories/架构设计/"}],"tags":[{"name":"会话","slug":"会话","permalink":"http://aofeng.github.io/tags/会话/"},{"name":"状态","slug":"状态","permalink":"http://aofeng.github.io/tags/状态/"}],"keywords":[{"name":"架构设计","slug":"架构设计","permalink":"http://aofeng.github.io/categories/架构设计/"}]},{"title":"Java-使用SSH从远程服务器下载文件","slug":"Java-使用SSH从远程服务器下载文件","date":"2013-07-29T12:38:24.000Z","updated":"2016-11-08T11:59:47.000Z","comments":true,"path":"2013/07/29/Java-使用SSH从远程服务器下载文件/","link":"","permalink":"http://aofeng.github.io/2013/07/29/Java-使用SSH从远程服务器下载文件/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x524D;&#x8A00; &#x6E90;&#x4EE3;&#x7801; &#x6548;&#x679C; &#x524D;&#x8A00;Telnet&#x3001;FTP&#x3001;POP3&#x5728;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x90FD;&#x662F;&#x91C7;&#x7528;&#x660E;&#x6587;&#xFF0C;&#x5BB9;&#x6613;&#x88AB;&#x76D1;&#x542C;&#x6216;&#x8005;&#x906D;&#x5230;&#x5230;man-in-the-middle&#x7684;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#x653B;&#x51FB;&#x3002;&#x800C;SSH&#x4E3A;&#x8FDC;&#x7A0B;&#x767B;&#x9646;&#x4F1A;&#x8BDD;&#x548C;&#x5176;&#x4ED6;&#x7684;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x5B89;&#x5168;&#x534F;&#x8BAE;&#xFF0C;&#x901A;&#x8FC7;&#x52A0;&#x5BC6;&#x6570;&#x636E;&#x9632;&#x6B62;&#x4F20;&#x8F93;&#x8FC7;&#x7A0B;&#x4E2D;&#x4FE1;&#x606F;&#x6CC4;&#x6F0F;&#x3002;C/C++&#x53EF;&#x4EE5;&#x8C03;&#x7528;OpenSSH&#x6765;&#x5B9E;&#x73B0;SSH&#xFF0C;Java&#x4E5F;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x5F00;&#x6E90;&#x7C7B;&#x5E93;JSch&#xFF0C;&#x5B83;&#x662F;SSH2&#x7684;&#x4E00;&#x4E2A;&#x7EAF;Java&#x5B9E;&#x73B0;&#x3002; &#x6E90;&#x4EE3;&#x7801;&#x7C7B;SftpDownloader&#x7684;&#x6E90;&#x4EE3;&#x7801;&#xFF1A;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798package cn.aofeng;import java.io.BufferedOutputStream;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.OutputStream;import java.util.Properties;import org.apache.commons.io.IOUtils;import org.apache.log4j.Logger;import cn.aofeng.dto.SftpConnectInfo;import cn.aofeng.util.ConsoleProgressBar;import com.jcraft.jsch.ChannelSftp;import com.jcraft.jsch.JSch;import com.jcraft.jsch.JSchException;import com.jcraft.jsch.Session;import com.jcraft.jsch.SftpException;import com.jcraft.jsch.SftpProgressMonitor;/** * &#x4F7F;&#x7528;SFTP&#x4ECE;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x3002; * * @author &#x50B2;&#x98CE; &lt;aofengblog@163.com&gt; */public class SftpDownloader { private final static Logger logger = Logger.getLogger(SftpDownloader.class); /** * &#x4F7F;&#x7528;SFTP&#x4ECE;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x3002; * * @param connectInfo SFTP&#x8FDE;&#x63A5;&#x4FE1;&#x606F; * @param localPath &#x672C;&#x5730;&#x6587;&#x4EF6;&#x8DEF;&#x5F84; * @param remotePath &#x8FDC;&#x7A0B;&#x6587;&#x4EF6;&#x8DEF;&#x5F84; */ public void download(SftpConnectInfo connectInfo, String localPath, final String remotePath) { JSch jsch = new JSch(); Session session = null; ChannelSftp channel = null; OutputStream outs = null; try { session = jsch.getSession(connectInfo.getUsername(), connectInfo.getHost(), connectInfo.getPort()); session.setPassword(connectInfo.getPassword()); Properties props = new Properties(); props.put(&quot;StrictHostKeyChecking&quot;, &quot;no&quot;); session.setConfig(props); session.connect(5000); // &#x6BEB;&#x79D2; channel = (ChannelSftp) session.openChannel(&quot;sftp&quot;); channel.connect(5000); outs = new BufferedOutputStream( new FileOutputStream( new File(localPath))); channel.get(remotePath, outs, new SftpProgressMonitor() { ConsoleProgressBar progress = null; private long current = 0; @Override public void init(int op, String src, String dest, long max) { progress = new ConsoleProgressBar(0, max, 50); } @Override public void end() { if (logger.isInfoEnabled()) { logger.debug( String.format(&quot;download file:%s complete&quot;, remotePath) ); } } @Override public boolean count(long count) { current += count; progress.show(current); return true; } }); } catch (JSchException e) { logger.error( String.format(&quot;connect remote host[%s:%d] occurs error&quot;, connectInfo.getHost(), connectInfo.getPort()), e); } catch (SftpException e) { logger.error( String.format(&quot;get remote file:%s occurs error&quot;, remotePath), e); } catch (FileNotFoundException e) { logger.error( String.format(&quot;can not find local file:%s&quot;, localPath), e); } finally { IOUtils.closeQuietly(outs); if (null != channel) { channel.disconnect(); } if (null != session) { session.disconnect(); } } }} &#x6CE8;&#xFF1A;&#x8FDB;&#x5EA6;&#x6761;ConsoleProgressBar&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x67E5;&#x770B;&#x6587;&#x7AE0;&#x201D;Java-&#x5B9E;&#x73B0;&#x5728;&#x63A7;&#x5236;&#x7EC8;&#x7AEF;&#x663E;&#x793A;&#x7684;&#x5B57;&#x7B26;&#x8FDB;&#x5EA6;&#x6761;&#x201D;&#x3002; &#x7C7B;SftpConnectionInfo&#x7684;&#x6E90;&#x4EE3;&#x7801;&#xFF1A;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667package cn.aofeng.dto;/** * SFTP&#x8FDE;&#x63A5;&#x4FE1;&#x606F;&#x3002; * * @author &#x50B2;&#x98CE; &lt;aofengblog@163.com&gt; */public class SftpConnectInfo { private String username; private String password; private String host; private int port; public SftpConnectInfo() { } public SftpConnectInfo(String username, String password, String host, int port) { this.username = username; this.password = password; this.host = host; this.port = port; } public String getUsername() { return username; } public void setUsername(String username) { this.username = username; } public String getPassword() { return password; } public void setPassword(String password) { this.password = password; } public String getHost() { return host; } public void setHost(String host) { this.host = host; } public int getPort() { return port; } public void setPort(int port) { this.port = port; } @Override public String toString() { return &quot;SftpConnectInfo [username=&quot; + username + &quot;, password=&quot; + password + &quot;, host=&quot; + host + &quot;, port=&quot; + port + &quot;]&quot;; }} &#x6548;&#x679C;&#x4E0B;&#x9762;&#x662F;&#x4F7F;&#x7528;SftpDownloader&#x4ECE;&#x591A;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x7684;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x8F93;&#x51FA;&#x7684;&#x65E5;&#x5FD7;&#xFF08;&#x6709;&#x8FDB;&#x5EA6;&#x6761;&#x7684;&#x4F53;&#x9A8C;&#x8FD8;&#x4E0D;&#x9519;&#xFF09;&#xFF1A;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"网络","slug":"网络","permalink":"http://aofeng.github.io/tags/网络/"},{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"ssh","slug":"ssh","permalink":"http://aofeng.github.io/tags/ssh/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Java-实现在控制终端显示的字符进度条","slug":"Java-实现在控制终端显示的字符进度条","date":"2013-07-27T07:05:11.000Z","updated":"2016-11-08T12:03:32.000Z","comments":true,"path":"2013/07/27/Java-实现在控制终端显示的字符进度条/","link":"","permalink":"http://aofeng.github.io/2013/07/27/Java-实现在控制终端显示的字符进度条/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x524D;&#x8A00; &#x6E90;&#x4EE3;&#x7801; &#x6548;&#x679C; &#x524D;&#x8A00;&#x9762;&#x5411;&#x7528;&#x6237;&#x4F7F;&#x7528;&#x7684;&#x7A0B;&#x5E8F;&#x90FD;&#x4F1A;&#x8003;&#x8651;&#x54CD;&#x5E94;&#x6027;&#xFF0C;&#x5982;&#xFF1A;&#x4E0A;&#x4F20;&#x3001;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x4F1A;&#x663E;&#x793A;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x767E;&#x5206;&#x4E4B;&#x591A;&#x5C11;&#xFF0C;&#x65B9;&#x4FBF;&#x7528;&#x6237;&#x4E86;&#x89E3;&#x5904;&#x7406;&#x7684;&#x8FDB;&#x5EA6;&#x3002;&#x5728;Swing&#x548C;AWT&#x7F16;&#x5199;&#x7684;&#x5E94;&#x7528;&#x6709;&#x73B0;&#x6210;&#x7684;&#x8FDB;&#x5EA6;&#x6761;&#x63A7;&#x4EF6;&#x53EF;&#x7528;&#xFF0C;&#x4F46;&#x5BF9;&#x4E8E;&#x975E;&#x754C;&#x9762;&#x7A0B;&#x5E8F;&#x5C31;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E86;&#x3002;&#x82B1;&#x4E86;&#x70B9;&#x65F6;&#x95F4;&#x5199;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x4E8E;wget&#x7684;&#x5B57;&#x7B26;&#x8FDB;&#x5EA6;&#x6761;&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x5728;Linux&#x7684;&#x547D;&#x4EE4;&#x7EC8;&#x7AEF;&#x548C;Windows&#x7684;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x4E2D;&#x5B9E;&#x65F6;&#x663E;&#x793A;&#x4EFB;&#x52A1;&#x5904;&#x7406;&#x7684;&#x8FDB;&#x5EA6;&#x3002; &#x539F;&#x7406;&#xFF1A;&#x5728;&#x6BCF;&#x6B21;&#x663E;&#x793A;&#x8FDB;&#x5EA6;&#x6761;&#x65F6;&#x5C06;&#x5149;&#x6807;&#x5B9A;&#x4F4D;&#x56DE;&#x5F53;&#x524D;&#x884C;&#x7684;&#x6700;&#x5DE6;&#x8FB9;&#xFF0C;&#x8F93;&#x51FA;&#x5F53;&#x524D;&#x7684;&#x8FDB;&#x5EA6;&#x6761;&#x8986;&#x76D6;&#x65E7;&#x7684;&#x8FDB;&#x5EA6;&#x6761;&#x3002; &#x7279;&#x70B9;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x5B9E;&#x65F6;&#x663E;&#x793A;&#x8FDB;&#x5EA6;&#x548C;&#x767E;&#x5206;&#x6BD4;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;wget&#x7684;&#x8FDB;&#x5EA6;&#x6761; &#x5DF2;&#x77E5;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;&#xFF1A;1&#x3001;&#x5728;Eclipse&#x7684;&#x63A7;&#x5236;&#x53F0;&#x663E;&#x793A;&#x4E0D;&#x6B63;&#x5E38;&#xFF0C;&#x6BCF;&#x6B21;&#x5237;&#x65B0;&#x8FDB;&#x5EA6;&#x6761;&#x65F6;&#x4F1A;&#x6362;&#x884C;&#x3002;2&#x3001;&#x5F53;&#x8FDB;&#x5EA6;&#x6761;&#x7684;&#x957F;&#x5EA6;&#x8D85;&#x8FC7;&#x63A7;&#x5236;&#x7EC8;&#x7AEF;&#x7684;&#x663E;&#x793A;&#x533A;&#x57DF;&#x65F6;&#xFF0C;&#x6BCF;&#x6B21;&#x5237;&#x65B0;&#x8FDB;&#x5EA6;&#x6761;&#x65F6;&#x4F1A;&#x6362;&#x884C;&#x3002; &#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104package cn.aofeng.util;import java.text.DecimalFormat;/** * &#x63A7;&#x5236;&#x53F0;&#x5B57;&#x7B26;&#x578B;&#x8FDB;&#x5EA6;&#x6761;&#x3002; * * @author &#x50B2;&#x98CE; &lt;aofengblog@163.com&gt; */public class ConsoleProgressBar { private long minimum = 0; // &#x8FDB;&#x5EA6;&#x6761;&#x8D77;&#x59CB;&#x503C; private long maximum = 100; // &#x8FDB;&#x5EA6;&#x6761;&#x6700;&#x5927;&#x503C; private long barLen = 100; // &#x8FDB;&#x5EA6;&#x6761;&#x957F;&#x5EA6; private char showChar = &apos;=&apos;; // &#x7528;&#x4E8E;&#x8FDB;&#x5EA6;&#x6761;&#x663E;&#x793A;&#x7684;&#x5B57;&#x7B26; private DecimalFormat formater = new DecimalFormat(&quot;#.##%&quot;); /** * &#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF0C;&#x663E;&#x793A;&#x5B57;&#x7B26;&#x8FDB;&#x5EA6;&#x6761;&#x53CA;&#x5176;&#x767E;&#x5206;&#x6BD4;&#x3002; */ public ConsoleProgressBar() { } /** * &#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF0C;&#x663E;&#x793A;&#x5B57;&#x7B26;&#x8FDB;&#x5EA6;&#x6761;&#x53CA;&#x5176;&#x767E;&#x5206;&#x6BD4;&#x3002; * * @param minimum &#x8FDB;&#x5EA6;&#x6761;&#x8D77;&#x59CB;&#x503C; * @param maximum &#x8FDB;&#x5EA6;&#x6761;&#x6700;&#x5927;&#x503C; * @param barLen &#x8FDB;&#x5EA6;&#x6761;&#x957F;&#x5EA6; */ public ConsoleProgressBar(long minimum, long maximum, long barLen) { this(minimum, maximum, barLen, &apos;=&apos;); } /** * &#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF0C;&#x663E;&#x793A;&#x5B57;&#x7B26;&#x8FDB;&#x5EA6;&#x6761;&#x53CA;&#x5176;&#x767E;&#x5206;&#x6BD4;&#x3002; * * @param minimum &#x8FDB;&#x5EA6;&#x6761;&#x8D77;&#x59CB;&#x503C; * @param maximum &#x8FDB;&#x5EA6;&#x6761;&#x6700;&#x5927;&#x503C; * @param barLen &#x8FDB;&#x5EA6;&#x6761;&#x957F;&#x5EA6; * @param showChar &#x7528;&#x4E8E;&#x8FDB;&#x5EA6;&#x6761;&#x663E;&#x793A;&#x7684;&#x5B57;&#x7B26; */ public ConsoleProgressBar(long minimum, long maximum, long barLen, char showChar) { this.minimum = minimum; this.maximum = maximum; this.barLen = barLen; this.showChar = showChar; } /** * &#x663E;&#x793A;&#x8FDB;&#x5EA6;&#x6761;&#x3002; * * @param value &#x5F53;&#x524D;&#x8FDB;&#x5EA6;&#x3002;&#x8FDB;&#x5EA6;&#x5FC5;&#x987B;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x8D77;&#x59CB;&#x70B9;&#x4E14;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x7ED3;&#x675F;&#x70B9;&#xFF08;start &lt;= current &lt;= end&#xFF09;&#x3002; */ public void show(long value) { if (value &lt; minimum || value &gt; maximum) { return; } reset(); minimum = value; float rate = (float) (minimum*1.0 / maximum); long len = (long) (rate * barLen); draw(len, rate); if (minimum == maximum) { afterComplete(); } } private void draw(long len, float rate) { for (int i = 0; i &lt; len; i++) { System.out.print(showChar); } System.out.print(&apos; &apos;); System.out.print(format(rate)); } private void reset() { System.out.print(&apos;\\r&apos;); } private void afterComplete() { System.out.print(&apos;\\n&apos;); } private String format(float num) { return formater.format(num); } public static void main(String[] args) throws InterruptedException { ConsoleProgressBar cpb = new ConsoleProgressBar(0, 100, 20, &apos;=&apos;); for (int i = 1; i &lt;= 100; i++) { cpb.show(i); Thread.sleep(100); } }} &#x6548;&#x679C;1java -cp ./classes cn.aofeng.util.ConsoleProgressBar &#x5B8C;&#x6210;&#x767E;&#x5206;&#x4E4B;30&#x65F6;&#x663E;&#x793A;&#xFF1A;======= 30%&#x5B8C;&#x6210;&#x767E;&#x5206;&#x4E4B;50&#x65F6;&#x663E;&#x793A;&#xFF1A;========== 50%&#x5B8C;&#x6210;&#x767E;&#x5206;&#x4E4B;100&#x65F6;&#x663E;&#x793A;&#xFF1A;==================== 100%","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"进度条","slug":"进度条","permalink":"http://aofeng.github.io/tags/进度条/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"Java-VisualGC+Jstatd实时监控远程JVM","slug":"Java-VisualGC-Jstatd实时监控远程JVM","date":"2013-06-29T12:27:07.000Z","updated":"2016-11-08T12:09:06.000Z","comments":true,"path":"2013/06/29/Java-VisualGC-Jstatd实时监控远程JVM/","link":"","permalink":"http://aofeng.github.io/2013/06/29/Java-VisualGC-Jstatd实时监控远程JVM/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x914D;&#x7F6E;&#x670D;&#x52A1;&#x7AEF; &#x4E8C;&#x3001;&#x5BA2;&#x6237;&#x7AEF;&#x914D;&#x7F6E; &#x4E00;&#x3001;&#x914D;&#x7F6E;&#x670D;&#x52A1;&#x7AEF;1&#x3001;&#x6253;&#x5F00;$JAVA_HOME/jre/lib/security&#x76EE;&#x5F55;&#x4E0B;&#x7684;java.policy&#x6587;&#x4EF6;&#x3002; 2&#x3001;&#x5728;&#x672B;&#x5C3E;&#x7684;};&#x4E4B;&#x524D;&#x6DFB;&#x52A0;&#x4E00;&#x884C;&#x914D;&#x7F6E;&#xFF1A;1permission java.security.AllPermission; 3&#x3001;&#x542F;&#x52A8;JVM&#x76D1;&#x542C;&#x5668;&#xFF1A;1jstatd -J-Djava.security.policy=all.policy -p 9999 // 9999&#x4E3A;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#x3002;&#x5982;&#x679C;&#x6709;&#x9632;&#x706B;&#x5899;&#xFF0C;&#x9700;&#x5728;&#x9632;&#x706B;&#x5899;&#x4E2D;&#x5F00;&#x653E;&#x5916;&#x90E8;&#x5BF9;&#x8BE5;&#x7AEF;&#x53E3;&#x8BBF;&#x95EE; &#x4E8C;&#x3001;&#x5BA2;&#x6237;&#x7AEF;&#x914D;&#x7F6E;1&#x3001;&#x6253;&#x5F00;&#x201D;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x201D;&#x680F;&#xFF0C;&#x5728;&#x201D;&#x8FDC;&#x7A0B;&#x201D;&#x9879;&#x4E0B;&#x6DFB;&#x52A0;&#x8981;&#x76D1;&#x63A7;&#x7684;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#xFF1A;&#x6307;&#x5B9A;&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;&#x3002; 2&#x3001;&#x53CC;&#x51FB;&#x76D1;&#x63A7;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://aofeng.github.io/tags/java/"},{"name":"virsualgc","slug":"virsualgc","permalink":"http://aofeng.github.io/tags/virsualgc/"},{"name":"jstatd","slug":"jstatd","permalink":"http://aofeng.github.io/tags/jstatd/"},{"name":"监控","slug":"监控","permalink":"http://aofeng.github.io/tags/监控/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"Java","slug":"编程/Java","permalink":"http://aofeng.github.io/categories/编程/Java/"}]},{"title":"在CentOS 5/Redhat 5上安装和配置TortoiseHg和kdiff3","slug":"在CentOS-5-Redhat-5上安装和配置TortoiseHg和kdiff3","date":"2013-05-31T12:26:51.000Z","updated":"2016-11-08T12:25:31.000Z","comments":true,"path":"2013/05/31/在CentOS-5-Redhat-5上安装和配置TortoiseHg和kdiff3/","link":"","permalink":"http://aofeng.github.io/2013/05/31/在CentOS-5-Redhat-5上安装和配置TortoiseHg和kdiff3/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x4E00;&#x3001;&#x73AF;&#x5883;&#x548C;&#x51C6;&#x5907;&#x5DE5;&#x4F5C; &#x4E8C;&#x3001;&#x5B89;&#x88C5;QT4 &#x4E09;&#x3001;&#x5B89;&#x88C5;kdiff3 &#x56DB;&#x3001;&#x914D;&#x7F6E;kdiff3 &#x4E94;&#x3001;&#x5B89;&#x88C5;iniparse &#x516D;&#x3001;&#x5B89;&#x88C5; sip &#x4E03;&#x3001;&#x5B89;&#x88C5;PyQt4 &#x516B;&#x3001;&#x5B89;&#x88C5;QScintilla &#x4E5D;&#x3001;&#x5B89;&#x88C5;TortoiseHg &#x8FD9;&#x662F;&#x4E24;&#x5E74;&#x524D;&#x5199;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#xFF08;&#x5DF2;&#x7ECF;&#x6709;&#x540C;&#x5B66;&#x8F6C;&#x8F7D;&#x5728;CSDN&#x4E0A;&#xFF09;&#xFF0C;&#x5F53;&#x65F6;&#x8EAB;&#x8FB9;&#x7684;&#x4E00;&#x4E9B;&#x540C;&#x5B66;&#x5728;&#x5B89;&#x88C5;TortoiseHg&#x548C;kdiff3&#x65F6;&#x78B0;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x8F6F;&#x4EF6;&#x7684;&#x7248;&#x672C;&#x548C;&#x4F9D;&#x8D56;&#x95EE;&#x9898;&#xFF0C;&#x5BFC;&#x81F4;&#x65E0;&#x6CD5;&#x987A;&#x5229;&#x5B89;&#x88C5;&#x4E0B;&#x53BB;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x7279;&#x5206;&#x4EAB;&#x6211;&#x5B89;&#x88C5;&#x8FD9;&#x4E9B;&#x8F6F;&#x4EF6;&#x7684;&#x5B8C;&#x6574;&#x8FC7;&#x7A0B;&#xFF0C;&#x5E0C;&#x671B;&#x5BF9;&#x5927;&#x5BB6;&#x6709;&#x5E2E;&#x52A9;&#x3002; Mercurial(HG)&#x7684;&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;&#x5165;&#x95E8;&#x53EF;&#x53C2;&#x8003;&#x6211;&#x7684;&#x53E6;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x201D;&#x5728;CentOS 5/Redhat 5&#x4E0A;&#x5B89;&#x88C5;Mercurial(HG)&#x201D;&#x3002; &#x4E00;&#x3001;&#x73AF;&#x5883;&#x548C;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;1&#x3001;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1A;Redhat5 / Centos52&#x3001;&#x9700;&#x8981;&#x51C6;&#x5907;&#x7684;&#x8F6F;&#x4EF6;&#x53CA;&#x5176;&#x7248;&#x672C;&#xFF08;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x6E90;&#x4EE3;&#x7801;&#x7F16;&#x8BD1;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF09;&#xFF1A; Python2.7 &#xFF08;Redhat5&#x548C;Centos5&#x4E0A;&#x9ED8;&#x8BA4;&#x5B89;&#x88C5;&#x7684;Python&#x4E3A;2.4&#x7248;&#x672C;&#xFF0C;&#x8BF7;&#x5347;&#x7EA7;&#x81F3;2.7&#x3002;&#x5347;&#x7EA7;Python&#x540E;&#xFF0C;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;mercurial-1.9&#xFF09; qt-4.7.3 kdiff3-0.9.95 QScintilla-gpl-2.5.1 iniparse-0.4 sip-4.12.4 PyQt-x11-gpl-4.8.5 tortoisehg-2.1 &#x5B83;&#x4EEC;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x4E8C;&#x3001;&#x5B89;&#x88C5;QT41&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;&#xFF1A;1wget http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.3.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;&#x5305;&#xFF1A;1tar -zxvf qt-everywhere-opensource-src-4.7.3.tar.gz 3&#x3001;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x4E09;&#x6B65;&#x66F2;&#xFF1A;&#x8FDB;&#x5165;&#x89E3;&#x538B;&#x540E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5206;&#x522B;&#x6309;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;123./configure -prefix /home/nieyong/local/qt-4.7.3 # &#x9700;&#x6839;&#x636E;&#x672C;&#x673A;&#x73AF;&#x5883;&#x4FEE;&#x6539;gmakegmake install &#x6CE8;&#xFF1A;&#x6B64;&#x6B65;&#x9AA4;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x4E45;&#xFF0C;&#x5728;&#x6211;&#x7684;&#x673A;&#x5668;&#x4E0A;&#x6267;&#x884C;&#x4E86;&#x7EA6;2.5&#x5C0F;&#x65F6;&#x3002; &#x4E09;&#x3001;&#x5B89;&#x88C5;kdiff31&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;1wget http://nchc.dl.sourceforge.net/project/kdiff3/kdiff3/0.9.95/kdiff3-0.9.95.tar.gzgmake 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;1tar -zxvf kdiff3-0.9.95.tar.gz 3&#x3001;&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;1&#xFF09;&#x7F16;&#x8F91;&#x5F53;&#x524D;&#x7528;&#x6237;&#x76EE;&#x5F55;&#x4E0B;&#x7684;.bash_profile&#x6587;&#x4EF6;1vi ~/.bash_profile &#x52A0;&#x5165;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#xFF1A;12345678QTDIR=$HOME/local/qt-4.7.3 # &#x9700;&#x6839;&#x636E;&#x672C;&#x673A;&#x73AF;&#x5883;&#x4FEE;&#x6539;export QTDIRPATH=$QTDIR/bin:$PATHexport PATHLD_LIBRARY_PATH=$HOME/local/qt-4.7.3/lib:$LD_LIBRARY_PATH # &#x9700;&#x6839;&#x636E;&#x672C;&#x673A;&#x73AF;&#x5883;&#x4FEE;&#x6539;export LD_LIBRARY_PATH 2&#xFF09;&#x4F7F;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x914D;&#x7F6E;&#x751F;&#x6548;1source ~/.bash_profile 4&#x3001;&#x5B89;&#x88C5;kdiff3&#x8FDB;&#x5165;kdiff3-0.9.95.tar.gz&#x89E3;&#x538B;&#x540E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF1A;1./configure qt4 &#x56DB;&#x3001;&#x914D;&#x7F6E;kdiff31&#x3001;&#x7F16;&#x8F91;&#x5F53;&#x524D;&#x7528;&#x6237;&#x76EE;&#x5F55;&#x4E0B;&#x7684;.hgrc&#x6587;&#x4EF6;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A;1vi ~/.hgrc &#x589E;&#x52A0;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#xFF1A;12345678[extensions]hgext.extdiff=[extdiff]cmd.kdiff3= [merge-tools]kdiff3.args=$base $local $other -o $output &#x4E94;&#x3001;&#x5B89;&#x88C5;iniparse1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;1wget http://iniparse.googlecode.com/files/iniparse-0.4.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;&#x5305;1tar -zxvf iniparse-0.4.tar.gz 3&#x3001;&#x5B89;&#x88C5;&#x8FDB;&#x5165;iniparse-0.4&#x89E3;&#x538B;&#x540E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF1A;12python setup.py buildpython setup.py install # &#x9700;&#x8981;&#x4EE5;root&#x8EAB;&#x4EFD;&#x6267;&#x884C; &#x516D;&#x3001;&#x5B89;&#x88C5; sip1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;1wget http://www.riverbankcomputing.co.uk/static/Downloads/sip4/sip-4.12.4.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;&#x5305;1tar -zxvf sip-4.12.4.tar.gz 3&#x3001;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;sip&#x8FDB;&#x5165;sip-4.12.4&#x7684;&#x89E3;&#x538B;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x547D;&#x4EE4;&#xFF1A;123python ./configure.pymakemake install # &#x9700;&#x8981;&#x4EE5;root&#x8EAB;&#x4EFD;&#x6267;&#x884C; &#x4E03;&#x3001;&#x5B89;&#x88C5;PyQt41&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;1wget http://www.riverbankcomputing.co.uk/static/Downloads/PyQt4/PyQt-x11-gpl-4.8.5.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;&#x5305;1tar -zxvf PyQt-x11-gpl-4.8.5.tar.gz 3&#x3001;&#x5B89;&#x88C5;PyQt4&#x8FDB;&#x5165;PyQt&#x89E3;&#x538B;&#x540E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x6309;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#xFF1A;1python configure.py &#x7136;&#x540E;&#x4F1A;&#x663E;&#x793A;&#x5982;&#x4E0B;&#x7684;&#x534F;&#x8BAE;&#x4FE1;&#x606F;&#xFF1A; Determining the layout of your Qt installation&#x2026;This is the GPL version of PyQt 4.8.5 (licensed under the GNU General PublicLicense) for Python 2.7.2 on linux2. Type &#x2018;2&#x2019; to view the GPL v2 license.Type &#x2018;3&#x2019; to view the GPL v3 license.Type &#x2018;yes&#x2019; to accept the terms of the license.Type &#x2018;no&#x2019; to decline the terms of the license. Do you accept the terms of the license? # &#x5728;&#x6B64;&#x8F93;&#x5165;yes&#x5E76;&#x6309;&#x56DE;&#x8F66;&#x8868;&#x793A;&#x540C;&#x610F;&#x534F;&#x8BAE;&#x5E76;&#x7EE7;&#x7EED;&#x540E;&#x9762;&#x7684;&#x5B89;&#x88C5;&#x6B65;&#x9AA4; &#x6700;&#x540E;&#x518D;&#x5206;&#x522B;&#x6267;&#x884C;&#xFF1A;12makemake install # &#x9700;&#x8981;&#x4EE5;root&#x8EAB;&#x4EFD;&#x6267;&#x884C; &#x516B;&#x3001;&#x5B89;&#x88C5;QScintilla1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;1wget http://www.riverbankcomputing.co.uk/static/Downloads/QScintilla2/QScintilla-gpl-2.5.1.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;&#x5305;1tar -zxvf QScintilla-gpl-2.5.1.tar.gz 3&#x3001;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;QScintilla1&#xFF09;&#x8FDB;&#x5165;QScintilla&#x89E3;&#x538B;&#x540E;&#x76EE;&#x5F55;&#x4E0B;&#x7684;Qt4&#x76EE;&#x5F55;&#xFF0C;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x547D;&#x4EE4;&#xFF1A;123qmake qscintilla.promakemake install 2&#xFF09;&#x8FDB;&#x5165;QScintilla&#x89E3;&#x538B;&#x540E;&#x76EE;&#x5F55;&#x4E0B;&#x7684;Python&#x76EE;&#x5F55;&#xFF0C;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x547D;&#x4EE4;&#xFF1A;123python ./configure.pymakemake install # &#x9700;&#x8981;&#x4EE5;root&#x8EAB;&#x4EFD;&#x6267;&#x884C; &#x4E5D;&#x3001;&#x5B89;&#x88C5;TortoiseHg&#x8BF4;&#x660E;&#xFF1A;mercurial-1.9&#x5BF9;&#x5E94;&#x7684;tortoisehg&#x7684;&#x7248;&#x672C;&#x662F;2.1&#xFF0C;&#x5B89;&#x88C5;&#x5176;&#x4ED6;&#x7248;&#x672C;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#x3002;1&#x3001;&#x4E0B;&#x8F7D;&#x6E90;&#x4EE3;&#x7801;1wget https://bitbucket.org/tortoisehg/targz/downloads/tortoisehg-2.1.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x6E90;&#x4EE3;&#x7801;&#x5305;1tar -zxvf tortoisehg-2.1.tar.gz 3&#x3001;&#x5B89;&#x88C5;TortoiseHg&#x8FDB;&#x5165;tortoisehg-2.1&#x7684;&#x89E3;&#x538B;&#x76EE;&#x5F55;&#xFF0C;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x4E24;&#x4E2A;&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#xFF1A;12python setup.py buildpython setup.py install &#xFF08;&#x9700;&#x8981;&#x4EE5;root&#x8EAB;&#x4EFD;&#x6267;&#x884C;&#xFF09; &#x6CE8;&#x610F;&#xFF1A;&#x8BF7;&#x6309;&#x7167;&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#x5B89;&#x88C5;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x78B0;&#x5230;&#x8BB8;&#x591A;&#x7684;&#x95EE;&#x9898;&#x3002;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"hg","slug":"hg","permalink":"http://aofeng.github.io/tags/hg/"},{"name":"kdiff3","slug":"kdiff3","permalink":"http://aofeng.github.io/tags/kdiff3/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"在CentOS 5/Redhat 5上安装Mercurial(HG)","slug":"在CentOS-5-Redhat-5上安装Mercurial-HG","date":"2013-05-30T12:36:13.000Z","updated":"2016-11-08T12:35:17.000Z","comments":true,"path":"2013/05/30/在CentOS-5-Redhat-5上安装Mercurial-HG/","link":"","permalink":"http://aofeng.github.io/2013/05/30/在CentOS-5-Redhat-5上安装Mercurial-HG/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x73AF;&#x5883; &#x5B89;&#x88C5;Mercurial&#xFF08;HG&#xFF09; &#x914D;&#x7F6E;Mercurial&#xFF08;HG&#xFF09; Mercurial&#xFF08;HG&#xFF09;&#x57FA;&#x672C;&#x547D;&#x4EE4; &#x4E0A;&#x6B21;&#x5728;RedHat&#x4E2D;&#x5B89;&#x88C5;Mercurial&#xFF08;HG&#xFF09;&#x5DF2;&#x7ECF;&#x662F;&#x4E24;&#x5E74;&#x524D;&#x7684;&#x4E8B;&#x60C5;&#x4E86;&#xFF0C;&#x8FD9;&#x4E24;&#x5929;&#x534F;&#x52A9;&#x6D4B;&#x8BD5;&#x7EC4;&#x7684;&#x540C;&#x5B66;&#x642D;&#x5EFA;&#x81EA;&#x52A8;&#x5316;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#xFF0C;&#x987A;&#x4FBF;&#x6574;&#x7406;&#x4E86;&#x4E00;&#x4E0B;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x3002;&#x5B89;&#x88C5;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x770B;&#x4E00;&#x4E0B;README&#x6587;&#x4EF6;&#x548C;Makefile&#x811A;&#x672C;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; &#x73AF;&#x5883; RedHat-5.x / CentOS-5 Python2.4~2.7 Mercurial&#xFF08;HG&#xFF09;1.9 ~ 2.6.1 &#x8BF4;&#x660E;&#xFF1A;RedHat-5&#x4E2D;&#x5DF2;&#x7ECF;&#x9884;&#x88C5;&#x4E86;Python2.4&#x3002; &#x5B89;&#x88C5;Mercurial&#xFF08;HG&#xFF09;1&#x3001;&#x4E0B;&#x8F7D;Mercurial&#x6E90;&#x7801;&#x3002;1wget http://mercurial.selenic.com/release/mercurial-2.6.1.tar.gz 2&#x3001;&#x89E3;&#x538B;&#x3002;1tar -zxvf mercurial-2.6.1.tar.gz 3&#x3001;&#x4FEE;&#x6539;Makefile1vi Makefile &#x627E;&#x5230;PREFIX=/usr/local&#xFF0C;&#x5C06;&#x5176;&#x4E2D;&#x7684;/usr/local&#x6539;&#x6210;&#x5B9E;&#x9645;&#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x3002; 4&#x3001;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;1make install &#x770B;&#x5230;&#x5C4F;&#x5E55;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#x8BF4;&#x660E;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x3002; creating /home/nieyong/local/mercurial-2.6.1/bincopying build/scripts-2.7/hg -&gt; /home/nieyong/local/mercurial-2.6.1/binchanging mode of /home/nieyong/local/mercurial-2.6.1/bin/hg to 775 &#x6CE8;&#xFF1A;&#x9700;&#x5148;&#x5B89;&#x88C5;python-docutils&#xFF0C;&#x5426;&#x5219;Mercurial&#x7684;&#x6587;&#x6863;&#x4F1A;&#x751F;&#x6210;&#x5931;&#x8D25;&#xFF0C;&#x62A5;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; abort: couldn&#x2019;t generate documentation: docutils module is missingplease install python-docutils or see http://docutils.sourceforge.net/make[1]: [hg.1] &#x9519;&#x8BEF; 255make[1]: Leaving directory `/home/nieyong/download/build/mercurial-2.6.1/doc&#x2019;make: [doc] &#x9519;&#x8BEF; 2 5&#x3001;&#x6D4B;&#x8BD5;&#x5B89;&#x88C5;&#x7ED3;&#x679C; &#x8FDB;&#x5165;Mercurial&#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E0B;&#x7684;bin&#x5B50;&#x76EE;&#x5F55;&#x3002;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;1hg version &#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A; &#x5206;&#x5E03;&#x5F0F;&#x8F6F;&#x4EF6;&#x914D;&#x7F6E;&#x7BA1;&#x7406;&#x5DE5;&#x5177; - &#x6C34;&#x94F6; (&#x7248;&#x672C; 2.6.1)(see http://mercurial.selenic.com for more information) Copyright (C) 2005-2012 Matt Mackall and othersThis is free software; see the source for copying conditions. There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. &#x914D;&#x7F6E;Mercurial&#xFF08;HG&#xFF09;&#x9664;&#x4E86;&#x5F53;&#x524D;&#x9879;&#x76EE;&#x672C;&#x5730;&#x4ED3;&#x5E93;&#xFF08;.hg&#xFF09;&#x76EE;&#x5F55;&#x4E0B;.hgrc&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5916;&#xFF0C;Mercurial&#x4F1A;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x7528;&#x6237;&#x76EE;&#x5F55;&#x4E0B;&#x7684;.hgrc&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x91CC;&#x9762;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x4F7F;&#x7528;kdiff3&#x7528;&#x4F5C;&#x6BD4;&#x8F83;&#x548C;&#x5408;&#x5E76;&#x5DE5;&#x5177;&#xFF0C;&#x4F7F;&#x7528;reviewboard&#x4F5C;&#x4E3A;Code Review&#x5DE5;&#x5177;&#x3002; Mercurial&#xFF08;HG&#xFF09;&#x57FA;&#x672C;&#x547D;&#x4EE4;1&#x3001;&#x514B;&#x9686;&#x9879;&#x76EE;1hg clone &#x9879;&#x76EE;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;URL &#x9879;&#x76EE;&#x672C;&#x5730;&#x76EE;&#x5F55; &#x4F8B;&#xFF1A;1hg clone https://hg.aofeng.local/repos/app-monitor app-monitor 2&#x3001;&#x83B7;&#x53D6;&#x9879;&#x76EE;&#x6700;&#x65B0;&#x4EE3;&#x7801;1hg pull &#x8BF4;&#x660E;&#xFF1A;&#x5982;&#x679C;&#x8981;&#x62C9;&#x53D6;&#x6307;&#x5B9A;changeset&#xFF08;tag&#xFF09;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x589E;&#x52A0;-r&#x53C2;&#x6570;&#x6307;&#x5B9A;changeset&#x7684;&#x7F16;&#x53F7;&#x3002;&#x5982;&#xFF1A;hg pull -r d7aab9942c8d 3&#x3001;&#x6DFB;&#x52A0;&#x51C6;&#x5907;&#x63D0;&#x4EA4;&#x7684;&#x6587;&#x4EF6;1hg add [&#x9009;&#x9879;]... [&#x6587;&#x4EF6;]... &#x4F8B;&#xFF1A;1hg add src/Hello.java src/Buyer.java 5&#x3001;&#x63D0;&#x4EA4;&#x6587;&#x4EF6;&#x81F3;&#x4ED3;&#x5E93;1hg commit [&#x9009;&#x9879;]... [&#x6587;&#x4EF6;]... &#x4F8B;&#xFF1A;1hg commit -m &quot;&#x521D;&#x59CB;&#x5316;&#x7248;&#x672C;&quot; src/Hello.java src/Buyer.java 6&#x3001;&#x5408;&#x5E76;&#x4EE3;&#x7801;1hg merge &#x8BF4;&#x660E;&#xFF1A; &#x5982;&#x679C;&#x81EA;&#x52A8;&#x5408;&#x5E76;&#x5931;&#x8D25;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x6307;&#x5B9A;&#x7684;&#x5408;&#x5E76;&#x4EE3;&#x7801;&#x5DE5;&#x5177;&#x8FDB;&#x884C;&#x624B;&#x52A8;&#x5408;&#x5E76;&#x3002;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://aofeng.github.io/tags/linux/"},{"name":"hg","slug":"hg","permalink":"http://aofeng.github.io/tags/hg/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://aofeng.github.io/categories/操作系统/"},{"name":"Linux","slug":"操作系统/Linux","permalink":"http://aofeng.github.io/categories/操作系统/Linux/"}]},{"title":"PHP-XHProf简明教程","slug":"PHP-XHProf简明教程","date":"2013-05-18T10:38:35.000Z","updated":"2016-11-08T12:51:11.000Z","comments":true,"path":"2013/05/18/PHP-XHProf简明教程/","link":"","permalink":"http://aofeng.github.io/2013/05/18/PHP-XHProf简明教程/","excerpt":"","text":"&#x4F5C;&#x8005;&#xFF1A;&#x8042;&#x52C7; &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x8BF7;&#x4FDD;&#x7559;&#x4F5C;&#x8005;&#x4FE1;&#x606F;&#x5E76;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#x6765;&#x6E90;&#xFF01; &#x8BF4;&#x660E; XHProf&#x5B89;&#x88C5; Graphviz&#x5B89;&#x88C5; XHProf UI&#x914D;&#x7F6E; &#x7F16;&#x5199;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x751F;&#x6210;XHProf&#x5206;&#x6790;&#x62A5;&#x544A; &#x5982;&#x4F55;&#x770B;&#x61C2;XHProf&#x5206;&#x6790;&#x62A5;&#x544A; &#x4E4B;&#x524D;&#x7528;PHP&#x505A;&#x4E92;&#x8054;&#x7F51;SNS&#x5E94;&#x7528;&#xFF0C;&#x4F1A;&#x5B9A;&#x671F;&#x8FDB;&#x884C;&#x6027;&#x80FD;&#x5206;&#x6790;&#xFF0C;&#x627E;&#x51FA;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x6700;&#x591A;&#x7684;&#x5730;&#x65B9;&#x3002;&#x901A;&#x8FC7;&#x5BF9;&#x51E0;&#x6B3E;&#x5DE5;&#x5177;&#x8FDB;&#x884C;&#x8BD5;&#x9A8C;&#x548C;&#x5BF9;&#x6BD4;&#x540E;&#xFF0C;&#x91C7;&#x7528;&#x4E86;XHProf&#x3002;XHProf&#x662F;Facebook&#x7684;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#xFF0C;&#x7528;&#x4E8E;&#x5206;&#x6790;PHP&#x5E94;&#x7528;&#x8FD0;&#x884C;&#x6027;&#x80FD;&#x7684;&#x8F7B;&#x91CF;&#x7EA7;&#x5DE5;&#x5177;&#xFF0C;&#x5F00;&#x9500;&#x5F88;&#x4F4E;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x5728;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x4E2D;&#x3002; &#x4E00;&#x4E9B;&#x65B0;&#x52A0;&#x5165;&#x56E2;&#x961F;&#x7684;&#x540C;&#x5B66;&#xFF0C;&#x5BF9;XHProf&#x4E0D;&#x719F;&#x6089;&#xFF0C;&#x56E0;&#x6B64;&#x4E1A;&#x4F59;&#x65F6;&#x95F4;&#x7F16;&#x5199;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x660E;&#x7684;&#x6559;&#x7A0B;&#xFF0C;&#x5305;&#x62EC;&#x5982;&#x4F55;&#x90E8;&#x7F72;XHProf&#x548C;&#x8BFB;&#x61C2;XHProf&#x62A5;&#x544A;&#x3002; &#x8BF4;&#x660E; $PHP_HOME &#x8868;&#x793A;PHP&#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x3002; $XHPROF_UI_HOME&#x8868;&#x793A;xhprof ui&#x7684;&#x5B58;&#x653E;&#x76EE;&#x5F55;&#xFF08;&#x81EA;&#x5DF1;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#xFF1A;/home/nieyong/xhprof_ui&#xFF09;&#x3002; &#x6CE8;&#xFF1A;&#x547D;&#x4EE4;&#x884C;&#x548C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5982;&#x679C;&#x5305;&#x542B;&#x4E0A;&#x8FF0;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x9700;&#x66FF;&#x6362;&#x6210;&#x5B9E;&#x9645;&#x7684;&#x8DEF;&#x5F84;&#x3002; XHProf&#x5B89;&#x88C5;1&#x3001;&#x4E0B;&#x8F7D;XHProf&#x6E90;&#x7801;&#x5E76;&#x89E3;&#x538B;&#x3002;12wget http://pecl.php.net/get/xhprof-0.9.2.tgztar zxvf xhprof-0.9.2.tgz 2&#x3001;&#x7F16;&#x8BD1;&#x524D;&#x9884;&#x5904;&#x7406;&#x3002;12cd xhprof-0.9.2/extension/$PHP_HOME/bin/phpize 3&#x3001;&#x7F16;&#x8BD1;&#x4E09;&#x6B65;&#x66F2;&#x3002;123./configure --with-php-config=$PHP_HOME/bin/php-configmakemake install 4&#x3001;&#x589E;&#x52A0;PHP&#x914D;&#x7F6E;&#x3002;1vi $PHP_HOME/lib/php.ini &#x5728;php.ini&#x4E2D;&#x914D;&#x7F6E;extension &#x3002;12345678;; php&#x8F7D;&#x5165;&#x6269;&#x5C55;&#x6A21;&#x5757;&#x7684;&#x76EE;&#x5F55;extension_dir=&quot;$PHP_HOME/lib/php/extension/no-debug-non-zts-20090626&quot;[xhprof]extension=xhprof.so;; xhprof&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x76EE;&#xFF08;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x73AF;&#x5883;&#x4FEE;&#x6539;&#xFF09;xhprof.output_dir=/home/nieyong/profile/xhprof 5&#x3001;&#x9A8C;&#x8BC1;&#x5B89;&#x88C5;&#x7ED3;&#x679C;&#x3002;&#x6267;&#x884C;&#x547D;&#x4EE4;1php -m &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A; [PHP Modules]Core&#x2026;&#x2026;xhprof&#x2026;&#x2026;zlib &#x5982;&#x679C;&#x5728;[PHP Modules]&#x4E0B;&#x7684;&#x6269;&#x5C55;&#x5217;&#x8868;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;xhprof&#x8868;&#x793A;&#x5B89;&#x88C5;&#x548C;&#x914D;&#x7F6E;&#x6210;&#x529F;&#x3002; Graphviz&#x5B89;&#x88C5;1&#x3001;&#x65B9;&#x5F0F;&#x4E00;&#xFF1A;&#x7F16;&#x8BD1;&#x6E90;&#x4EE3;&#x7801;&#x5B89;&#x88C5;&#x3002;123456wget http://www.graphviz.org/pub/graphviz/stable/SOURCES/graphviz-2.28.0.tar.gztar zxvf graphviz-2.28.0.tar.gzcd graphviz-2.28.0./configure --prefix=$HOME/local/graphviz-2.28.0makemake install &#x63D0;&#x793A;&#xFF1A;&#x7528;&#x7F16;&#x8BD1;&#x6E90;&#x4EE3;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#x5B89;&#x88C5;&#x540E;&#xFF0C;&#x8981;&#x5C06;dot&#x6240;&#x5728;&#x76EE;&#x5F55;&#x6DFB;&#x52A0;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;PATH&#x4E2D;&#x3002; 2&#x3001;&#x65B9;&#x5F0F;&#x4E8C;&#xFF1A;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#x5B89;&#x88C5;&#x3002;1&#xFF09;&#x5207;&#x6362;&#x81F3;root&#x7528;&#x6237;&#x3002;2&#xFF09;&#x6267;&#x884C;&#x547D;&#x4EE4;&#x3002;1yum install graphviz &#x63D0;&#x793A;&#xFF1A;&#x5728;&#x6211;&#x7684;Redhat-5.7&#x4E0A;&#x7528;&#x6E90;&#x4EE3;&#x7801;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x6CA1;&#x6709;&#x6210;&#x529F;&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x4F9D;&#x8D56;&#x4E00;&#x5806;&#x5176;&#x4ED6;&#x7EC4;&#x4EF6;&#x4EE5;&#x53CA;&#x7248;&#x672C;&#x517C;&#x5BB9;&#x95EE;&#x9898;&#xFF0C;&#x5B89;&#x88C5;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#xFF0C;&#x7528;yum&#x65B9;&#x5F0F;&#x7B80;&#x5355;&#x5FEB;&#x901F;&#x3002; XHProf UI&#x914D;&#x7F6E;1&#x3001;&#x51C6;&#x5907;XHProf UI&#x8FD0;&#x884C;&#x6587;&#x4EF6;&#x3002;&#x5C06;xhprof-0.9.2.tgz&#x89E3;&#x538B;&#x540E;&#x76EE;&#x5F55;&#x4E2D;&#x7684;xhprof_html&#x548C;xhporf_lib&#x590D;&#x5236;&#x5230;$XHPROF_UI_HOME&#x4E2D;&#x3002; 2&#x3001;&#x5728;Nginx&#x914D;&#x7F6E;XHProf UI&#x3002;123456789101112131415161718server { listen 9090; location / { root $XHPROF_UI_HOME/xhprof_html; index index.php index.html index.htm; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } location ~ \\.php$ { root $XHPROF_UI_HOME/xhprof_html; fastcgi_pass 127.0.0.1:9001; #fpm&#x7AEF;&#x53E3; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $XHPROF_UI_HOME/xhprof_html/$fastcgi_script_name; include fastcgi_params; }} &#x7F16;&#x5199;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x751F;&#x6210;XHProf&#x5206;&#x6790;&#x62A5;&#x544A;1&#x3001;&#x7F16;&#x5199;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;xhprof_test.php&#x3002;12345678910111213141516171819202122232425262728293031323334353637&lt;?phpinclude_once &apos;$XHPROF_UI_HOME/xhprof_lib/utils/xhprof_lib.php&apos;;include_once &apos;$XHPROF_UI_HOME/xhprof_lib/utils/xhprof_runs.php&apos;;function bar($x) { if ($x &gt; 0) { bar($x - 1); }}function foo() { for ($idx = 0; $idx &lt; 2; $idx++) { bar($idx); $x = strlen(&quot;abc&quot;); }}// start profilingxhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY);// run programfoo();// stop profiler$xhprof_data = xhprof_disable();$profiler_namespace=&quot;hello&quot;;$xhprof_runs = new XHProfRuns_Default();$run_id = $xhprof_runs-&gt;save_run($xhprof_data, $profiler_namespace); // url to the XHProf UI libraries (change the host name and path)$profiler_url = sprintf(&apos;http://127.0.0.1:9090/index.php?run=%s&amp;source=%s&apos;, $run_id, $profiler_namespace);echo &apos;&lt;a href=&quot;http://aofengblog.blog.163.com/blog/&apos;. $profiler_url .&apos;&quot; target=&quot;_blank&quot;&gt;Profiler output&lt;/a&gt;\\\\n&apos;; 2&#x3001;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x5E76;&#x751F;&#x6210;XHProf&#x5206;&#x6790;&#x62A5;&#x544A;&#x3002;1php ./xhprof_test.php &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A;&lt;a href=&#x201D;http://127.0.0.1:9090/index.php?run=4eface3370442&amp;source=hello&#x201C; target=&#x201D;_blank&#x201D;&gt;Profiler output&lt;/a&gt; 3&#x3001;&#x67E5;&#x770B;XHProf&#x5206;&#x6790;&#x62A5;&#x544A;&#x3002;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E0A;&#x8F93;&#x5165;&#x5730;&#x5740;&#xFF1A;http://127.0.0.1:9090/index.php?run=4eface3370442&amp;source=hello&#x663E;&#x793A;&#x754C;&#x9762;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#xFF1A; &#x70B9;&#x51FB;[View Full Callgraph]&#x94FE;&#x63A5;&#xFF0C;&#x663E;&#x793A;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x6811;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x63D0;&#x793A;&#xFF1A;&#x751F;&#x6210;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x56FE;&#x7531;Graphviz&#x751F;&#x6210;&#x3002; &#x5982;&#x4F55;&#x770B;&#x61C2;XHProf&#x5206;&#x6790;&#x62A5;&#x544A;&#x5982;&#x56FE;1&#x6240;&#x793A;&#xFF0C;XHProf&#x62A5;&#x544A;&#x4E2D;&#x6709;&#x8BB8;&#x591A;&#x5217;&#xFF0C;&#x5B83;&#x4EEC;&#x4EE3;&#x8868;&#x7684;&#x542B;&#x4E49;&#x89C1;&#x4E0B;&#x8868;&#xFF1A; &#x5217;&#x540D; &#x63CF;&#x8FF0; Function Name &#x65B9;&#x6CD5;&#x540D;&#x79F0;&#x3002; Calls &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x6B21;&#x6570;&#x3002; Calls% &#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x6B21;&#x6570;&#x5728;&#x540C;&#x7EA7;&#x65B9;&#x6CD5;&#x603B;&#x6570;&#x8C03;&#x7528;&#x6B21;&#x6570;&#x4E2D;&#x6240;&#x5360;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x3002; Incl.Wall Time (microsec) &#x65B9;&#x6CD5;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5305;&#x62EC;&#x5B50;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5FAE;&#x79D2;&#xFF09; IWall% &#x65B9;&#x6CD5;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#x767E;&#x5206;&#x6BD4;&#x3002; Excl. Wall Time (microsec) &#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x4E0D;&#x5305;&#x62EC;&#x5B50;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5FAE;&#x79D2;&#xFF09; EWall% &#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#x767E;&#x5206;&#x6BD4;&#x3002; Incl. CPU (microsecs) &#x65B9;&#x6CD5;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;CPU&#x65F6;&#x95F4;&#xFF0C;&#x5305;&#x62EC;&#x5B50;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5FAE;&#x79D2;&#xFF09; ICpu% &#x65B9;&#x6CD5;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;CPU&#x65F6;&#x95F4;&#x767E;&#x5206;&#x6BD4;&#x3002; Excl. CPU (microsec) &#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;CPU&#x65F6;&#x95F4;&#xFF0C;&#x4E0D;&#x5305;&#x62EC;&#x5B50;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5FAE;&#x79D2;&#xFF09; ECPU% &#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x82B1;&#x8D39;&#x7684;CPU&#x65F6;&#x95F4;&#x767E;&#x5206;&#x6BD4;&#x3002; Incl.MemUse (bytes) &#x65B9;&#x6CD5;&#x6267;&#x884C;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x5305;&#x62EC;&#x5B50;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5B57;&#x8282;&#xFF09; IMemUse% &#x65B9;&#x6CD5;&#x6267;&#x884C;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x767E;&#x5206;&#x6BD4;&#x3002; Excl.MemUse (bytes) &#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x4E0D;&#x5305;&#x62EC;&#x5B50;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5B57;&#x8282;&#xFF09; EMemUse% &#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x767E;&#x5206;&#x6BD4;&#x3002; Incl.PeakMemUse (bytes) Incl.MemUse&#x5CF0;&#x503C;&#x3002;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5B57;&#x8282;&#xFF09; IPeakMemUse% Incl.MemUse&#x5CF0;&#x503C;&#x767E;&#x5206;&#x6BD4;&#x3002; Excl.PeakMemUse (bytes) Excl.MemUse&#x5CF0;&#x503C;&#x3002;&#x5355;&#x4F4D;&#xFF1A;&#xFF08;&#x5B57;&#x8282;&#xFF09; EPeakMemUse% Excl.MemUse&#x5CF0;&#x503C;&#x767E;&#x5206;&#x6BD4;&#x3002;","categories":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"PHP","slug":"编程/PHP","permalink":"http://aofeng.github.io/categories/编程/PHP/"}],"tags":[{"name":"php","slug":"php","permalink":"http://aofeng.github.io/tags/php/"},{"name":"xhprof","slug":"xhprof","permalink":"http://aofeng.github.io/tags/xhprof/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"http://aofeng.github.io/categories/编程/"},{"name":"PHP","slug":"编程/PHP","permalink":"http://aofeng.github.io/categories/编程/PHP/"}]}]}